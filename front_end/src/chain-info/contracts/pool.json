{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "PoolBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "SecondToExpiry",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "bids",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "size",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "user_id",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cancelBid",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "cash_balance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "createFakeBuyer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ethPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "exercise",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "seller_size",
          "type": "uint256"
        }
      ],
      "name": "getBestBid",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "average_bid",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getEthPrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOrder",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "op",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "strike",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "expiry",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "supply",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newbid",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "premium",
          "type": "uint256"
        }
      ],
      "name": "placeBid",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "seller_size",
          "type": "uint256"
        }
      ],
      "name": "sellBid",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_eth",
          "type": "uint256"
        }
      ],
      "name": "setFakeETH",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "settlement_amount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "user",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "size",
          "type": "uint256"
        },
        {
          "internalType": "enum pool.option_side",
          "name": "side",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "unusedpremium",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "userBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "10": "contracts/pool.sol"
  },
  "ast": {
    "absolutePath": "contracts/pool.sol",
    "exportedSymbols": {
      "pool": [
        2167
      ]
    },
    "id": 2168,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 707,
        "literals": [
          "solidity",
          ">=",
          "0.6",
          ".7"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:10"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "pool",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 2167,
        "linearizedBaseContracts": [
          2167
        ],
        "name": "pool",
        "nameLocation": "248:4:10",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 710,
            "mutability": "constant",
            "name": "NO_TRADE_CLOSE_TO_EXPIRE",
            "nameLocation": "284:24:10",
            "nodeType": "VariableDeclaration",
            "scope": 2167,
            "src": "259:54:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 708,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "259:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3130",
              "id": 709,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "311:2:10",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10_by_1",
                "typeString": "int_const 10"
              },
              "value": "10"
            },
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 713,
            "mutability": "constant",
            "name": "MIN_BUYER_SIZE",
            "nameLocation": "354:14:10",
            "nodeType": "VariableDeclaration",
            "scope": 2167,
            "src": "329:45:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 711,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "329:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "316532",
              "id": 712,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "371:3:10",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_100_by_1",
                "typeString": "int_const 100"
              },
              "value": "1e2"
            },
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 716,
            "mutability": "constant",
            "name": "MIN_SELLER_SIZE",
            "nameLocation": "405:15:10",
            "nodeType": "VariableDeclaration",
            "scope": 2167,
            "src": "380:46:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 714,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "380:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "316533",
              "id": 715,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "423:3:10",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000_by_1",
                "typeString": "int_const 1000"
              },
              "value": "1e3"
            },
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 719,
            "mutability": "constant",
            "name": "MIN_DEPOSIT_SIZE",
            "nameLocation": "457:16:10",
            "nodeType": "VariableDeclaration",
            "scope": 2167,
            "src": "432:47:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 717,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "432:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "356532",
              "id": 718,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "476:3:10",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_500_by_1",
                "typeString": "int_const 500"
              },
              "value": "5e2"
            },
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 722,
            "mutability": "constant",
            "name": "TRANSACTION_COST",
            "nameLocation": "510:16:10",
            "nodeType": "VariableDeclaration",
            "scope": 2167,
            "src": "485:45:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 720,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "485:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31",
              "id": 721,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "529:1:10",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "private"
          },
          {
            "canonicalName": "pool.contract_status",
            "id": 725,
            "members": [
              {
                "id": 723,
                "name": "open",
                "nameLocation": "666:4:10",
                "nodeType": "EnumValue",
                "src": "666:4:10"
              },
              {
                "id": 724,
                "name": "locked",
                "nameLocation": "680:6:10",
                "nodeType": "EnumValue",
                "src": "680:6:10"
              }
            ],
            "name": "contract_status",
            "nameLocation": "640:15:10",
            "nodeType": "EnumDefinition",
            "src": "635:57:10"
          },
          {
            "constant": false,
            "id": 730,
            "mutability": "mutable",
            "name": "STATUS",
            "nameLocation": "721:6:10",
            "nodeType": "VariableDeclaration",
            "scope": 2167,
            "src": "697:53:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_enum$_contract_status_$725",
              "typeString": "enum pool.contract_status"
            },
            "typeName": {
              "id": 727,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 726,
                "name": "contract_status",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 725,
                "src": "697:15:10"
              },
              "referencedDeclaration": 725,
              "src": "697:15:10",
              "typeDescriptions": {
                "typeIdentifier": "t_enum$_contract_status_$725",
                "typeString": "enum pool.contract_status"
              }
            },
            "value": {
              "expression": {
                "id": 728,
                "name": "contract_status",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 725,
                "src": "730:15:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_enum$_contract_status_$725_$",
                  "typeString": "type(enum pool.contract_status)"
                }
              },
              "id": 729,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "memberName": "open",
              "nodeType": "MemberAccess",
              "referencedDeclaration": 723,
              "src": "730:20:10",
              "typeDescriptions": {
                "typeIdentifier": "t_enum$_contract_status_$725",
                "typeString": "enum pool.contract_status"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "ff186b2e",
            "id": 732,
            "mutability": "mutable",
            "name": "ethPrice",
            "nameLocation": "921:8:10",
            "nodeType": "VariableDeclaration",
            "scope": 2167,
            "src": "906:23:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 731,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "906:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 734,
            "mutability": "mutable",
            "name": "contract_address",
            "nameLocation": "952:16:10",
            "nodeType": "VariableDeclaration",
            "scope": 2167,
            "src": "936:32:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 733,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "936:15:10",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "f6702356",
            "id": 738,
            "mutability": "mutable",
            "name": "cash_balance",
            "nameLocation": "1083:12:10",
            "nodeType": "VariableDeclaration",
            "scope": 2167,
            "src": "1048:47:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 737,
              "keyType": {
                "id": 735,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1056:7:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1048:27:10",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 736,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1067:7:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "pool.bid_struct",
            "id": 745,
            "members": [
              {
                "constant": false,
                "id": 740,
                "mutability": "mutable",
                "name": "price",
                "nameLocation": "1215:5:10",
                "nodeType": "VariableDeclaration",
                "scope": 745,
                "src": "1207:13:10",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 739,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1207:7:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 742,
                "mutability": "mutable",
                "name": "size",
                "nameLocation": "1256:4:10",
                "nodeType": "VariableDeclaration",
                "scope": 745,
                "src": "1248:12:10",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 741,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1248:7:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 744,
                "mutability": "mutable",
                "name": "user_id",
                "nameLocation": "1307:7:10",
                "nodeType": "VariableDeclaration",
                "scope": 745,
                "src": "1299:15:10",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 743,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1299:7:10",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "bid_struct",
            "nameLocation": "1186:10:10",
            "nodeType": "StructDefinition",
            "scope": 2167,
            "src": "1179:157:10",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "7b3c4baa",
            "id": 751,
            "mutability": "mutable",
            "name": "bids",
            "nameLocation": "1435:4:10",
            "nodeType": "VariableDeclaration",
            "scope": 2167,
            "src": "1395:44:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_bid_struct_$745_storage_$dyn_storage_$",
              "typeString": "mapping(uint256 => struct pool.bid_struct[])"
            },
            "typeName": {
              "id": 750,
              "keyType": {
                "id": 746,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1403:7:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1395:32:10",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_bid_struct_$745_storage_$dyn_storage_$",
                "typeString": "mapping(uint256 => struct pool.bid_struct[])"
              },
              "valueType": {
                "baseType": {
                  "id": 748,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 747,
                    "name": "bid_struct",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 745,
                    "src": "1414:10:10"
                  },
                  "referencedDeclaration": 745,
                  "src": "1414:10:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_bid_struct_$745_storage_ptr",
                    "typeString": "struct pool.bid_struct"
                  }
                },
                "id": 749,
                "nodeType": "ArrayTypeName",
                "src": "1414:12:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_bid_struct_$745_storage_$dyn_storage_ptr",
                  "typeString": "struct pool.bid_struct[]"
                }
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "pool.option_side",
            "id": 756,
            "members": [
              {
                "id": 752,
                "name": "not_open",
                "nameLocation": "1521:8:10",
                "nodeType": "EnumValue",
                "src": "1521:8:10"
              },
              {
                "id": 753,
                "name": "buyer",
                "nameLocation": "1539:5:10",
                "nodeType": "EnumValue",
                "src": "1539:5:10"
              },
              {
                "id": 754,
                "name": "seller",
                "nameLocation": "1554:6:10",
                "nodeType": "EnumValue",
                "src": "1554:6:10"
              },
              {
                "id": 755,
                "name": "exercised",
                "nameLocation": "1570:9:10",
                "nodeType": "EnumValue",
                "src": "1570:9:10"
              }
            ],
            "name": "option_side",
            "nameLocation": "1499:11:10",
            "nodeType": "EnumDefinition",
            "src": "1494:91:10"
          },
          {
            "canonicalName": "pool.user_struct",
            "id": 764,
            "members": [
              {
                "constant": false,
                "id": 758,
                "mutability": "mutable",
                "name": "size",
                "nameLocation": "1797:4:10",
                "nodeType": "VariableDeclaration",
                "scope": 764,
                "src": "1789:12:10",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 757,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1789:7:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 761,
                "mutability": "mutable",
                "name": "side",
                "nameLocation": "1833:4:10",
                "nodeType": "VariableDeclaration",
                "scope": 764,
                "src": "1821:16:10",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_option_side_$756",
                  "typeString": "enum pool.option_side"
                },
                "typeName": {
                  "id": 760,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 759,
                    "name": "option_side",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 756,
                    "src": "1821:11:10"
                  },
                  "referencedDeclaration": 756,
                  "src": "1821:11:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_option_side_$756",
                    "typeString": "enum pool.option_side"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 763,
                "mutability": "mutable",
                "name": "unusedpremium",
                "nameLocation": "1927:13:10",
                "nodeType": "VariableDeclaration",
                "scope": 764,
                "src": "1919:21:10",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 762,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1919:7:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "user_struct",
            "nameLocation": "1597:11:10",
            "nodeType": "StructDefinition",
            "scope": 2167,
            "src": "1590:418:10",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "14feaa9d",
            "id": 771,
            "mutability": "mutable",
            "name": "user",
            "nameLocation": "2122:4:10",
            "nodeType": "VariableDeclaration",
            "scope": 2167,
            "src": "2063:63:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_user_struct_$764_storage_$_$",
              "typeString": "mapping(address => mapping(uint256 => struct pool.user_struct))"
            },
            "typeName": {
              "id": 770,
              "keyType": {
                "id": 765,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2071:7:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2063:51:10",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_user_struct_$764_storage_$_$",
                "typeString": "mapping(address => mapping(uint256 => struct pool.user_struct))"
              },
              "valueType": {
                "id": 769,
                "keyType": {
                  "id": 766,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2090:7:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "nodeType": "Mapping",
                "src": "2082:31:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_user_struct_$764_storage_$",
                  "typeString": "mapping(uint256 => struct pool.user_struct)"
                },
                "valueType": {
                  "id": 768,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 767,
                    "name": "user_struct",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 764,
                    "src": "2101:11:10"
                  },
                  "referencedDeclaration": 764,
                  "src": "2101:11:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_user_struct_$764_storage_ptr",
                    "typeString": "struct pool.user_struct"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "pool.option_struct",
            "id": 781,
            "members": [
              {
                "constant": false,
                "id": 773,
                "mutability": "mutable",
                "name": "strike",
                "nameLocation": "2220:6:10",
                "nodeType": "VariableDeclaration",
                "scope": 781,
                "src": "2212:14:10",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 772,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2212:7:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 775,
                "mutability": "mutable",
                "name": "expiry",
                "nameLocation": "2277:6:10",
                "nodeType": "VariableDeclaration",
                "scope": 781,
                "src": "2269:14:10",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 774,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2269:7:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 777,
                "mutability": "mutable",
                "name": "supply",
                "nameLocation": "2348:6:10",
                "nodeType": "VariableDeclaration",
                "scope": 781,
                "src": "2340:14:10",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 776,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2340:7:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 780,
                "mutability": "mutable",
                "name": "order",
                "nameLocation": "2456:5:10",
                "nodeType": "VariableDeclaration",
                "scope": 781,
                "src": "2446:15:10",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                  "typeString": "uint256[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 778,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2446:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 779,
                  "nodeType": "ArrayTypeName",
                  "src": "2446:9:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                    "typeString": "uint256[]"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "option_struct",
            "nameLocation": "2188:13:10",
            "nodeType": "StructDefinition",
            "scope": 2167,
            "src": "2181:376:10",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "387eadae",
            "id": 785,
            "mutability": "mutable",
            "name": "op",
            "nameLocation": "2614:2:10",
            "nodeType": "VariableDeclaration",
            "scope": 2167,
            "src": "2591:25:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_option_struct_$781_storage_$dyn_storage",
              "typeString": "struct pool.option_struct[]"
            },
            "typeName": {
              "baseType": {
                "id": 783,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 782,
                  "name": "option_struct",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 781,
                  "src": "2591:13:10"
                },
                "referencedDeclaration": 781,
                "src": "2591:13:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_option_struct_$781_storage_ptr",
                  "typeString": "struct pool.option_struct"
                }
              },
              "id": 784,
              "nodeType": "ArrayTypeName",
              "src": "2591:15:10",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_option_struct_$781_storage_$dyn_storage_ptr",
                "typeString": "struct pool.option_struct[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 788,
            "mutability": "mutable",
            "name": "id",
            "nameLocation": "2694:2:10",
            "nodeType": "VariableDeclaration",
            "scope": 2167,
            "src": "2678:22:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 786,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2678:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 787,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2699:1:10",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 791,
            "mutability": "mutable",
            "name": "order_for_test",
            "nameLocation": "2763:14:10",
            "nodeType": "VariableDeclaration",
            "scope": 2167,
            "src": "2745:32:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
              "typeString": "uint256[]"
            },
            "typeName": {
              "baseType": {
                "id": 789,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2745:7:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 790,
              "nodeType": "ArrayTypeName",
              "src": "2745:9:10",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                "typeString": "uint256[]"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 795,
            "mutability": "mutable",
            "name": "order_book_for_one_option",
            "nameLocation": "2804:25:10",
            "nodeType": "VariableDeclaration",
            "scope": 2167,
            "src": "2783:46:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_bid_struct_$745_storage_$dyn_storage",
              "typeString": "struct pool.bid_struct[]"
            },
            "typeName": {
              "baseType": {
                "id": 793,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 792,
                  "name": "bid_struct",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 745,
                  "src": "2783:10:10"
                },
                "referencedDeclaration": 745,
                "src": "2783:10:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_bid_struct_$745_storage_ptr",
                  "typeString": "struct pool.bid_struct"
                }
              },
              "id": 794,
              "nodeType": "ArrayTypeName",
              "src": "2783:12:10",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_bid_struct_$745_storage_$dyn_storage_ptr",
                "typeString": "struct pool.bid_struct[]"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "7b3889e7",
            "id": 797,
            "mutability": "mutable",
            "name": "settlement_amount",
            "nameLocation": "2933:17:10",
            "nodeType": "VariableDeclaration",
            "scope": 2167,
            "src": "2918:32:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 796,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2918:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 836,
              "nodeType": "Block",
              "src": "3075:798:10",
              "statements": [
                {
                  "expression": {
                    "id": 808,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 800,
                      "name": "contract_address",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 734,
                      "src": "3266:16:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 805,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "3301:4:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_pool_$2167",
                                "typeString": "contract pool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_pool_$2167",
                                "typeString": "contract pool"
                              }
                            ],
                            "id": 804,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3293:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 803,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3293:7:10",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 806,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3293:13:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 802,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3285:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_payable_$",
                          "typeString": "type(address payable)"
                        },
                        "typeName": {
                          "id": 801,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3285:8:10",
                          "stateMutability": "payable",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 807,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3285:22:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "3266:41:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 809,
                  "nodeType": "ExpressionStatement",
                  "src": "3266:41:10"
                },
                {
                  "assignments": [
                    812
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 812,
                      "mutability": "mutable",
                      "name": "option",
                      "nameLocation": "3413:6:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 836,
                      "src": "3392:27:10",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_option_struct_$781_memory_ptr",
                        "typeString": "struct pool.option_struct"
                      },
                      "typeName": {
                        "id": 811,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 810,
                          "name": "option_struct",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 781,
                          "src": "3392:13:10"
                        },
                        "referencedDeclaration": 781,
                        "src": "3392:13:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_option_struct_$781_storage_ptr",
                          "typeString": "struct pool.option_struct"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 822,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "33333030",
                        "id": 814,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3458:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3300_by_1",
                          "typeString": "int_const 3300"
                        },
                        "value": "3300"
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 818,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 815,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "3495:5:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 816,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "3495:15:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "3630",
                          "id": 817,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3513:2:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_60_by_1",
                            "typeString": "int_const 60"
                          },
                          "value": "60"
                        },
                        "src": "3495:20:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 819,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3578:1:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "id": 820,
                        "name": "order_for_test",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 791,
                        "src": "3680:14:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_3300_by_1",
                          "typeString": "int_const 3300"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      ],
                      "id": 813,
                      "name": "option_struct",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 781,
                      "src": "3422:13:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_option_struct_$781_storage_ptr_$",
                        "typeString": "type(struct pool.option_struct storage pointer)"
                      }
                    },
                    "id": 821,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [
                      "strike",
                      "expiry",
                      "supply",
                      "order"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "3422:283:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_option_struct_$781_memory_ptr",
                      "typeString": "struct pool.option_struct memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3392:313:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 826,
                        "name": "option",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 812,
                        "src": "3723:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_option_struct_$781_memory_ptr",
                          "typeString": "struct pool.option_struct memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_option_struct_$781_memory_ptr",
                          "typeString": "struct pool.option_struct memory"
                        }
                      ],
                      "expression": {
                        "id": 823,
                        "name": "op",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 785,
                        "src": "3715:2:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_option_struct_$781_storage_$dyn_storage",
                          "typeString": "struct pool.option_struct storage ref[] storage ref"
                        }
                      },
                      "id": 825,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "3715:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_option_struct_$781_storage_$dyn_storage_ptr_$_t_struct$_option_struct_$781_storage_$returns$__$bound_to$_t_array$_t_struct$_option_struct_$781_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct pool.option_struct storage ref[] storage pointer,struct pool.option_struct storage ref)"
                      }
                    },
                    "id": 827,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3715:15:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 828,
                  "nodeType": "ExpressionStatement",
                  "src": "3715:15:10"
                },
                {
                  "expression": {
                    "id": 834,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 829,
                        "name": "cash_balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 738,
                        "src": "3801:12:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 832,
                      "indexExpression": {
                        "expression": {
                          "id": 830,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3814:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 831,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3814:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3801:24:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "323030303030",
                      "id": 833,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3828:6:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_200000_by_1",
                        "typeString": "int_const 200000"
                      },
                      "value": "200000"
                    },
                    "src": "3801:33:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 835,
                  "nodeType": "ExpressionStatement",
                  "src": "3801:33:10"
                }
              ]
            },
            "id": 837,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 798,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3065:2:10"
            },
            "returnParameters": {
              "id": 799,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3075:0:10"
            },
            "scope": 2167,
            "src": "3054:819:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 973,
              "nodeType": "Block",
              "src": "3937:1570:10",
              "statements": [
                {
                  "assignments": [
                    845
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 845,
                      "mutability": "mutable",
                      "name": "_user",
                      "nameLocation": "4054:5:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 973,
                      "src": "4046:13:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 844,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4046:7:10",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 848,
                  "initialValue": {
                    "expression": {
                      "id": 846,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "4062:3:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 847,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "4062:10:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4046:26:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 858,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 850,
                              "name": "op",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 785,
                              "src": "4103:2:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_option_struct_$781_storage_$dyn_storage",
                                "typeString": "struct pool.option_struct storage ref[] storage ref"
                              }
                            },
                            "id": 852,
                            "indexExpression": {
                              "id": 851,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 788,
                              "src": "4106:2:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4103:6:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_option_struct_$781_storage",
                              "typeString": "struct pool.option_struct storage ref"
                            }
                          },
                          "id": 853,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "expiry",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 775,
                          "src": "4103:13:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 857,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 854,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "4119:5:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 855,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "4119:15:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 856,
                            "name": "NO_TRADE_CLOSE_TO_EXPIRE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 710,
                            "src": "4137:24:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4119:42:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4103:58:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416c72656164792065787069726564206f7220746f6f20636c6f736520746f20657870697279",
                        "id": 859,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4175:40:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ea1502593df2894e0eb2fc654a0019627f70da71f803673626e28a5dfbe4aa6a",
                          "typeString": "literal_string \"Already expired or too close to expiry\""
                        },
                        "value": "Already expired or too close to expiry"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ea1502593df2894e0eb2fc654a0019627f70da71f803673626e28a5dfbe4aa6a",
                          "typeString": "literal_string \"Already expired or too close to expiry\""
                        }
                      ],
                      "id": 849,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4082:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 860,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4082:143:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 861,
                  "nodeType": "ExpressionStatement",
                  "src": "4082:143:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_option_side_$756",
                          "typeString": "enum pool.option_side"
                        },
                        "id": 871,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 863,
                                "name": "user",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 771,
                                "src": "4256:4:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_user_struct_$764_storage_$_$",
                                  "typeString": "mapping(address => mapping(uint256 => struct pool.user_struct storage ref))"
                                }
                              },
                              "id": 865,
                              "indexExpression": {
                                "id": 864,
                                "name": "_user",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 845,
                                "src": "4261:5:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4256:11:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_user_struct_$764_storage_$",
                                "typeString": "mapping(uint256 => struct pool.user_struct storage ref)"
                              }
                            },
                            "id": 867,
                            "indexExpression": {
                              "id": 866,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 788,
                              "src": "4268:2:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4256:15:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_user_struct_$764_storage",
                              "typeString": "struct pool.user_struct storage ref"
                            }
                          },
                          "id": 868,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "side",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 761,
                          "src": "4256:20:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_option_side_$756",
                            "typeString": "enum pool.option_side"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "expression": {
                            "id": 869,
                            "name": "option_side",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 756,
                            "src": "4280:11:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_option_side_$756_$",
                              "typeString": "type(enum pool.option_side)"
                            }
                          },
                          "id": 870,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "seller",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 754,
                          "src": "4280:18:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_option_side_$756",
                            "typeString": "enum pool.option_side"
                          }
                        },
                        "src": "4256:42:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "73656c6c6572206f66206f7074696f6e2063616e6e6f7420627579",
                        "id": 872,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4312:29:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d9636ea103c619b03168f94b9c19397c17185d42414222a80314e47d0b8af811",
                          "typeString": "literal_string \"seller of option cannot buy\""
                        },
                        "value": "seller of option cannot buy"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d9636ea103c619b03168f94b9c19397c17185d42414222a80314e47d0b8af811",
                          "typeString": "literal_string \"seller of option cannot buy\""
                        }
                      ],
                      "id": 862,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4235:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 873,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4235:116:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 874,
                  "nodeType": "ExpressionStatement",
                  "src": "4235:116:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 878,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 876,
                          "name": "premium",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 841,
                          "src": "4369:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 877,
                          "name": "MIN_BUYER_SIZE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 713,
                          "src": "4380:14:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4369:25:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d696e2073697a65203d20313030",
                        "id": 879,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4396:16:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_048ccb28d04ddeafdd7dd136a61cf704cb4dde194a55fd5cf94f0a53ee279566",
                          "typeString": "literal_string \"Min size = 100\""
                        },
                        "value": "Min size = 100"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_048ccb28d04ddeafdd7dd136a61cf704cb4dde194a55fd5cf94f0a53ee279566",
                          "typeString": "literal_string \"Min size = 100\""
                        }
                      ],
                      "id": 875,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4361:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 880,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4361:52:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 881,
                  "nodeType": "ExpressionStatement",
                  "src": "4361:52:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 887,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 883,
                          "name": "premium",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 841,
                          "src": "4431:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "baseExpression": {
                            "id": 884,
                            "name": "cash_balance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 738,
                            "src": "4442:12:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 886,
                          "indexExpression": {
                            "id": 885,
                            "name": "_user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 845,
                            "src": "4455:5:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4442:19:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4431:30:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f7420656e6f7567682063617368",
                        "id": 888,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4463:17:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d3aa71b8e891e6f9aea36bebdeb34ce1e1d36df0162e670e1229389147acf88b",
                          "typeString": "literal_string \"not enough cash\""
                        },
                        "value": "not enough cash"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d3aa71b8e891e6f9aea36bebdeb34ce1e1d36df0162e670e1229389147acf88b",
                          "typeString": "literal_string \"not enough cash\""
                        }
                      ],
                      "id": 882,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4423:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 889,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4423:58:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 890,
                  "nodeType": "ExpressionStatement",
                  "src": "4423:58:10"
                },
                {
                  "expression": {
                    "id": 899,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 891,
                            "name": "user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 771,
                            "src": "4635:4:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_user_struct_$764_storage_$_$",
                              "typeString": "mapping(address => mapping(uint256 => struct pool.user_struct storage ref))"
                            }
                          },
                          "id": 894,
                          "indexExpression": {
                            "id": 892,
                            "name": "_user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 845,
                            "src": "4640:5:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4635:11:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_user_struct_$764_storage_$",
                            "typeString": "mapping(uint256 => struct pool.user_struct storage ref)"
                          }
                        },
                        "id": 895,
                        "indexExpression": {
                          "id": 893,
                          "name": "id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 788,
                          "src": "4647:2:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4635:15:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_user_struct_$764_storage",
                          "typeString": "struct pool.user_struct storage ref"
                        }
                      },
                      "id": 896,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "side",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 761,
                      "src": "4635:20:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_option_side_$756",
                        "typeString": "enum pool.option_side"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 897,
                        "name": "option_side",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 756,
                        "src": "4658:11:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_option_side_$756_$",
                          "typeString": "type(enum pool.option_side)"
                        }
                      },
                      "id": 898,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "buyer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 753,
                      "src": "4658:17:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_option_side_$756",
                        "typeString": "enum pool.option_side"
                      }
                    },
                    "src": "4635:40:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_option_side_$756",
                      "typeString": "enum pool.option_side"
                    }
                  },
                  "id": 900,
                  "nodeType": "ExpressionStatement",
                  "src": "4635:40:10"
                },
                {
                  "expression": {
                    "id": 908,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 901,
                            "name": "user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 771,
                            "src": "4685:4:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_user_struct_$764_storage_$_$",
                              "typeString": "mapping(address => mapping(uint256 => struct pool.user_struct storage ref))"
                            }
                          },
                          "id": 904,
                          "indexExpression": {
                            "id": 902,
                            "name": "_user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 845,
                            "src": "4690:5:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4685:11:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_user_struct_$764_storage_$",
                            "typeString": "mapping(uint256 => struct pool.user_struct storage ref)"
                          }
                        },
                        "id": 905,
                        "indexExpression": {
                          "id": 903,
                          "name": "id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 788,
                          "src": "4697:2:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4685:15:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_user_struct_$764_storage",
                          "typeString": "struct pool.user_struct storage ref"
                        }
                      },
                      "id": 906,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "unusedpremium",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 763,
                      "src": "4685:29:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 907,
                      "name": "premium",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 841,
                      "src": "4718:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4685:40:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 909,
                  "nodeType": "ExpressionStatement",
                  "src": "4685:40:10"
                },
                {
                  "expression": {
                    "id": 914,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 910,
                        "name": "cash_balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 738,
                        "src": "4779:12:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 912,
                      "indexExpression": {
                        "id": 911,
                        "name": "_user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 845,
                        "src": "4792:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4779:19:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 913,
                      "name": "premium",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 841,
                      "src": "4802:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4779:30:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 915,
                  "nodeType": "ExpressionStatement",
                  "src": "4779:30:10"
                },
                {
                  "assignments": [
                    917
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 917,
                      "mutability": "mutable",
                      "name": "_size",
                      "nameLocation": "5189:5:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 973,
                      "src": "5181:13:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 916,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5181:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 927,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 926,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 923,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 918,
                            "name": "premium",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 841,
                            "src": "5198:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 919,
                                "name": "op",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 785,
                                "src": "5208:2:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_option_struct_$781_storage_$dyn_storage",
                                  "typeString": "struct pool.option_struct storage ref[] storage ref"
                                }
                              },
                              "id": 921,
                              "indexExpression": {
                                "id": 920,
                                "name": "id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 788,
                                "src": "5211:2:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5208:6:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_option_struct_$781_storage",
                                "typeString": "struct pool.option_struct storage ref"
                              }
                            },
                            "id": 922,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "strike",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 773,
                            "src": "5208:13:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5198:23:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 924,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "5197:25:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 925,
                      "name": "newbid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 839,
                      "src": "5225:6:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5197:34:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5181:50:10"
                },
                {
                  "expression": {
                    "id": 933,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 928,
                          "name": "op",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 785,
                          "src": "5241:2:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_option_struct_$781_storage_$dyn_storage",
                            "typeString": "struct pool.option_struct storage ref[] storage ref"
                          }
                        },
                        "id": 930,
                        "indexExpression": {
                          "id": 929,
                          "name": "id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 788,
                          "src": "5244:2:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5241:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_option_struct_$781_storage",
                          "typeString": "struct pool.option_struct storage ref"
                        }
                      },
                      "id": 931,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "supply",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 777,
                      "src": "5241:13:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 932,
                      "name": "_size",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 917,
                      "src": "5258:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5241:22:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 934,
                  "nodeType": "ExpressionStatement",
                  "src": "5241:22:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 940,
                            "name": "newbid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 839,
                            "src": "5328:6:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 941,
                            "name": "_size",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 917,
                            "src": "5336:5:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 942,
                            "name": "_user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 845,
                            "src": "5343:5:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 939,
                          "name": "bid_struct",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 745,
                          "src": "5317:10:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_bid_struct_$745_storage_ptr_$",
                            "typeString": "type(struct pool.bid_struct storage pointer)"
                          }
                        },
                        "id": 943,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5317:32:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_bid_struct_$745_memory_ptr",
                          "typeString": "struct pool.bid_struct memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_bid_struct_$745_memory_ptr",
                          "typeString": "struct pool.bid_struct memory"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 935,
                          "name": "bids",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 751,
                          "src": "5303:4:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_bid_struct_$745_storage_$dyn_storage_$",
                            "typeString": "mapping(uint256 => struct pool.bid_struct storage ref[] storage ref)"
                          }
                        },
                        "id": 937,
                        "indexExpression": {
                          "id": 936,
                          "name": "id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 788,
                          "src": "5308:2:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5303:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_bid_struct_$745_storage_$dyn_storage",
                          "typeString": "struct pool.bid_struct storage ref[] storage ref"
                        }
                      },
                      "id": 938,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "5303:13:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_bid_struct_$745_storage_$dyn_storage_ptr_$_t_struct$_bid_struct_$745_storage_$returns$__$bound_to$_t_array$_t_struct$_bid_struct_$745_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct pool.bid_struct storage ref[] storage pointer,struct pool.bid_struct storage ref)"
                      }
                    },
                    "id": 944,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5303:47:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 945,
                  "nodeType": "ExpressionStatement",
                  "src": "5303:47:10"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 952,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "expression": {
                          "baseExpression": {
                            "id": 946,
                            "name": "op",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 785,
                            "src": "5364:2:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_option_struct_$781_storage_$dyn_storage",
                              "typeString": "struct pool.option_struct storage ref[] storage ref"
                            }
                          },
                          "id": 948,
                          "indexExpression": {
                            "id": 947,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 788,
                            "src": "5367:2:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5364:6:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_option_struct_$781_storage",
                            "typeString": "struct pool.option_struct storage ref"
                          }
                        },
                        "id": 949,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "order",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 780,
                        "src": "5364:12:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 950,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "5364:19:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 951,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5387:1:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5364:24:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 971,
                    "nodeType": "Block",
                    "src": "5459:42:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 968,
                              "name": "newbid",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 839,
                              "src": "5483:6:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 967,
                            "name": "insertBid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1983,
                            "src": "5473:9:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 969,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5473:17:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 970,
                        "nodeType": "ExpressionStatement",
                        "src": "5473:17:10"
                      }
                    ]
                  },
                  "id": 972,
                  "nodeType": "IfStatement",
                  "src": "5360:141:10",
                  "trueBody": {
                    "id": 966,
                    "nodeType": "Block",
                    "src": "5390:63:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 963,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 958,
                                    "name": "bids",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 751,
                                    "src": "5422:4:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_bid_struct_$745_storage_$dyn_storage_$",
                                      "typeString": "mapping(uint256 => struct pool.bid_struct storage ref[] storage ref)"
                                    }
                                  },
                                  "id": 960,
                                  "indexExpression": {
                                    "id": 959,
                                    "name": "id",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 788,
                                    "src": "5427:2:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "5422:8:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_bid_struct_$745_storage_$dyn_storage",
                                    "typeString": "struct pool.bid_struct storage ref[] storage ref"
                                  }
                                },
                                "id": 961,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "5422:15:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 962,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5440:1:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "5422:19:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 953,
                                  "name": "op",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 785,
                                  "src": "5404:2:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_option_struct_$781_storage_$dyn_storage",
                                    "typeString": "struct pool.option_struct storage ref[] storage ref"
                                  }
                                },
                                "id": 955,
                                "indexExpression": {
                                  "id": 954,
                                  "name": "id",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 788,
                                  "src": "5407:2:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5404:6:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_option_struct_$781_storage",
                                  "typeString": "struct pool.option_struct storage ref"
                                }
                              },
                              "id": 956,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "order",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 780,
                              "src": "5404:12:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                "typeString": "uint256[] storage ref"
                              }
                            },
                            "id": 957,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "5404:17:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
                              "typeString": "function (uint256[] storage pointer,uint256)"
                            }
                          },
                          "id": 964,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5404:38:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 965,
                        "nodeType": "ExpressionStatement",
                        "src": "5404:38:10"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "57c90de5",
            "id": 974,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "placeBid",
            "nameLocation": "3888:8:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 842,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 839,
                  "mutability": "mutable",
                  "name": "newbid",
                  "nameLocation": "3905:6:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 974,
                  "src": "3897:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 838,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3897:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 841,
                  "mutability": "mutable",
                  "name": "premium",
                  "nameLocation": "3921:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 974,
                  "src": "3913:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 840,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3913:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3896:33:10"
            },
            "returnParameters": {
              "id": 843,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3937:0:10"
            },
            "scope": 2167,
            "src": "3879:1628:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1138,
              "nodeType": "Block",
              "src": "5541:1447:10",
              "statements": [
                {
                  "assignments": [
                    978
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 978,
                      "mutability": "mutable",
                      "name": "_user",
                      "nameLocation": "5694:5:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1138,
                      "src": "5678:21:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 977,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5678:15:10",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 984,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 981,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5710:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 982,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5710:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 980,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "5702:8:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_payable_$",
                        "typeString": "type(address payable)"
                      },
                      "typeName": {
                        "id": 979,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5702:8:10",
                        "stateMutability": "payable",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 983,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5702:19:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5678:43:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_contract_status_$725",
                          "typeString": "enum pool.contract_status"
                        },
                        "id": 989,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 986,
                          "name": "STATUS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 730,
                          "src": "5752:6:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_contract_status_$725",
                            "typeString": "enum pool.contract_status"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 987,
                            "name": "contract_status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 725,
                            "src": "5762:15:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_contract_status_$725_$",
                              "typeString": "type(enum pool.contract_status)"
                            }
                          },
                          "id": 988,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "open",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 723,
                          "src": "5762:20:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_contract_status_$725",
                            "typeString": "enum pool.contract_status"
                          }
                        },
                        "src": "5752:30:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "636f6e747261637420627573792c2074727920616761696e206c61746572",
                        "id": 990,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5796:32:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_11191ebedaa2e5508af049dc47514095178f3142646db5ab8b94335d92777f9a",
                          "typeString": "literal_string \"contract busy, try again later\""
                        },
                        "value": "contract busy, try again later"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_11191ebedaa2e5508af049dc47514095178f3142646db5ab8b94335d92777f9a",
                          "typeString": "literal_string \"contract busy, try again later\""
                        }
                      ],
                      "id": 985,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5731:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 991,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5731:107:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 992,
                  "nodeType": "ExpressionStatement",
                  "src": "5731:107:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_option_side_$756",
                          "typeString": "enum pool.option_side"
                        },
                        "id": 1002,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 994,
                                "name": "user",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 771,
                                "src": "5869:4:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_user_struct_$764_storage_$_$",
                                  "typeString": "mapping(address => mapping(uint256 => struct pool.user_struct storage ref))"
                                }
                              },
                              "id": 996,
                              "indexExpression": {
                                "id": 995,
                                "name": "_user",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 978,
                                "src": "5874:5:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5869:11:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_user_struct_$764_storage_$",
                                "typeString": "mapping(uint256 => struct pool.user_struct storage ref)"
                              }
                            },
                            "id": 998,
                            "indexExpression": {
                              "id": 997,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 788,
                              "src": "5881:2:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5869:15:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_user_struct_$764_storage",
                              "typeString": "struct pool.user_struct storage ref"
                            }
                          },
                          "id": 999,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "side",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 761,
                          "src": "5869:20:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_option_side_$756",
                            "typeString": "enum pool.option_side"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 1000,
                            "name": "option_side",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 756,
                            "src": "5893:11:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_option_side_$756_$",
                              "typeString": "type(enum pool.option_side)"
                            }
                          },
                          "id": 1001,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "buyer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 753,
                          "src": "5893:17:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_option_side_$756",
                            "typeString": "enum pool.option_side"
                          }
                        },
                        "src": "5869:41:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "796f75206e65656420746f20627579206f7074696f6e206669727374",
                        "id": 1003,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5924:30:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8aa712090356a87a0db59d4e650f7a20f4ab143910c7c2f90419e882568581cb",
                          "typeString": "literal_string \"you need to buy option first\""
                        },
                        "value": "you need to buy option first"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8aa712090356a87a0db59d4e650f7a20f4ab143910c7c2f90419e882568581cb",
                          "typeString": "literal_string \"you need to buy option first\""
                        }
                      ],
                      "id": 993,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5848:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1004,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5848:116:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1005,
                  "nodeType": "ExpressionStatement",
                  "src": "5848:116:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1014,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 1007,
                                "name": "user",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 771,
                                "src": "5995:4:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_user_struct_$764_storage_$_$",
                                  "typeString": "mapping(address => mapping(uint256 => struct pool.user_struct storage ref))"
                                }
                              },
                              "id": 1009,
                              "indexExpression": {
                                "id": 1008,
                                "name": "_user",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 978,
                                "src": "6000:5:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5995:11:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_user_struct_$764_storage_$",
                                "typeString": "mapping(uint256 => struct pool.user_struct storage ref)"
                              }
                            },
                            "id": 1011,
                            "indexExpression": {
                              "id": 1010,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 788,
                              "src": "6007:2:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5995:15:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_user_struct_$764_storage",
                              "typeString": "struct pool.user_struct storage ref"
                            }
                          },
                          "id": 1012,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "unusedpremium",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 763,
                          "src": "5995:29:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1013,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6027:1:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5995:33:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "796f7572206f64657220686173206265656e2066696c6c6564206f722063616e63656c6c6564",
                        "id": 1015,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6042:40:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4d2a5ad40108d5f689bd051f10a5a9d84e216544661d56f65b79b7edd4be92ca",
                          "typeString": "literal_string \"your oder has been filled or cancelled\""
                        },
                        "value": "your oder has been filled or cancelled"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4d2a5ad40108d5f689bd051f10a5a9d84e216544661d56f65b79b7edd4be92ca",
                          "typeString": "literal_string \"your oder has been filled or cancelled\""
                        }
                      ],
                      "id": 1006,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5974:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1016,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5974:118:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1017,
                  "nodeType": "ExpressionStatement",
                  "src": "5974:118:10"
                },
                {
                  "expression": {
                    "id": 1021,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1018,
                      "name": "STATUS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 730,
                      "src": "6102:6:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_contract_status_$725",
                        "typeString": "enum pool.contract_status"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1019,
                        "name": "contract_status",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 725,
                        "src": "6111:15:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_contract_status_$725_$",
                          "typeString": "type(enum pool.contract_status)"
                        }
                      },
                      "id": 1020,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "locked",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 724,
                      "src": "6111:22:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_contract_status_$725",
                        "typeString": "enum pool.contract_status"
                      }
                    },
                    "src": "6102:31:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_contract_status_$725",
                      "typeString": "enum pool.contract_status"
                    }
                  },
                  "id": 1022,
                  "nodeType": "ExpressionStatement",
                  "src": "6102:31:10"
                },
                {
                  "expression": {
                    "id": 1032,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1023,
                        "name": "cash_balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 738,
                        "src": "6224:12:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1025,
                      "indexExpression": {
                        "id": 1024,
                        "name": "_user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 978,
                        "src": "6237:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6224:19:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 1026,
                            "name": "user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 771,
                            "src": "6247:4:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_user_struct_$764_storage_$_$",
                              "typeString": "mapping(address => mapping(uint256 => struct pool.user_struct storage ref))"
                            }
                          },
                          "id": 1028,
                          "indexExpression": {
                            "id": 1027,
                            "name": "_user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 978,
                            "src": "6252:5:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6247:11:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_user_struct_$764_storage_$",
                            "typeString": "mapping(uint256 => struct pool.user_struct storage ref)"
                          }
                        },
                        "id": 1030,
                        "indexExpression": {
                          "id": 1029,
                          "name": "id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 788,
                          "src": "6259:2:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6247:15:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_user_struct_$764_storage",
                          "typeString": "struct pool.user_struct storage ref"
                        }
                      },
                      "id": 1031,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "unusedpremium",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 763,
                      "src": "6247:29:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6224:52:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1033,
                  "nodeType": "ExpressionStatement",
                  "src": "6224:52:10"
                },
                {
                  "expression": {
                    "id": 1041,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 1034,
                            "name": "user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 771,
                            "src": "6286:4:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_user_struct_$764_storage_$_$",
                              "typeString": "mapping(address => mapping(uint256 => struct pool.user_struct storage ref))"
                            }
                          },
                          "id": 1037,
                          "indexExpression": {
                            "id": 1035,
                            "name": "_user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 978,
                            "src": "6291:5:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6286:11:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_user_struct_$764_storage_$",
                            "typeString": "mapping(uint256 => struct pool.user_struct storage ref)"
                          }
                        },
                        "id": 1038,
                        "indexExpression": {
                          "id": 1036,
                          "name": "id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 788,
                          "src": "6298:2:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6286:15:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_user_struct_$764_storage",
                          "typeString": "struct pool.user_struct storage ref"
                        }
                      },
                      "id": 1039,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "unusedpremium",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 763,
                      "src": "6286:29:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 1040,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6318:1:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "6286:33:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1042,
                  "nodeType": "ExpressionStatement",
                  "src": "6286:33:10"
                },
                {
                  "assignments": [
                    1047
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1047,
                      "mutability": "mutable",
                      "name": "old_order",
                      "nameLocation": "6394:9:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1138,
                      "src": "6377:26:10",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 1045,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6377:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1046,
                        "nodeType": "ArrayTypeName",
                        "src": "6377:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1052,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 1048,
                        "name": "op",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 785,
                        "src": "6406:2:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_option_struct_$781_storage_$dyn_storage",
                          "typeString": "struct pool.option_struct storage ref[] storage ref"
                        }
                      },
                      "id": 1050,
                      "indexExpression": {
                        "id": 1049,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 788,
                        "src": "6409:2:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "6406:6:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_option_struct_$781_storage",
                        "typeString": "struct pool.option_struct storage ref"
                      }
                    },
                    "id": 1051,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "order",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 780,
                    "src": "6406:12:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                      "typeString": "uint256[] storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6377:41:10"
                },
                {
                  "assignments": [
                    1054
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1054,
                      "mutability": "mutable",
                      "name": "k",
                      "nameLocation": "6436:1:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1138,
                      "src": "6428:9:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1053,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6428:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1056,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 1055,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6440:1:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6428:13:10"
                },
                {
                  "body": {
                    "id": 1109,
                    "nodeType": "Block",
                    "src": "6498:342:10",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1077,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "baseExpression": {
                                  "id": 1068,
                                  "name": "bids",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 751,
                                  "src": "6516:4:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_bid_struct_$745_storage_$dyn_storage_$",
                                    "typeString": "mapping(uint256 => struct pool.bid_struct storage ref[] storage ref)"
                                  }
                                },
                                "id": 1070,
                                "indexExpression": {
                                  "id": 1069,
                                  "name": "id",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 788,
                                  "src": "6521:2:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6516:8:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_bid_struct_$745_storage_$dyn_storage",
                                  "typeString": "struct pool.bid_struct storage ref[] storage ref"
                                }
                              },
                              "id": 1074,
                              "indexExpression": {
                                "baseExpression": {
                                  "id": 1071,
                                  "name": "old_order",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1047,
                                  "src": "6525:9:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                    "typeString": "uint256[] memory"
                                  }
                                },
                                "id": 1073,
                                "indexExpression": {
                                  "id": 1072,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1058,
                                  "src": "6535:1:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6525:12:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6516:22:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_bid_struct_$745_storage",
                                "typeString": "struct pool.bid_struct storage ref"
                              }
                            },
                            "id": 1075,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "user_id",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 744,
                            "src": "6516:30:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "id": 1076,
                            "name": "_user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 978,
                            "src": "6550:5:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "6516:39:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 1107,
                          "nodeType": "Block",
                          "src": "6753:77:10",
                          "statements": [
                            {
                              "expression": {
                                "id": 1105,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 1093,
                                      "name": "op",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 785,
                                      "src": "6771:2:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_option_struct_$781_storage_$dyn_storage",
                                        "typeString": "struct pool.option_struct storage ref[] storage ref"
                                      }
                                    },
                                    "id": 1095,
                                    "indexExpression": {
                                      "id": 1094,
                                      "name": "id",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 788,
                                      "src": "6774:2:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "6771:6:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_option_struct_$781_storage",
                                      "typeString": "struct pool.option_struct storage ref"
                                    }
                                  },
                                  "id": 1096,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "supply",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 777,
                                  "src": "6771:13:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "-=",
                                "rightHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "baseExpression": {
                                        "id": 1097,
                                        "name": "bids",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 751,
                                        "src": "6788:4:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_bid_struct_$745_storage_$dyn_storage_$",
                                          "typeString": "mapping(uint256 => struct pool.bid_struct storage ref[] storage ref)"
                                        }
                                      },
                                      "id": 1099,
                                      "indexExpression": {
                                        "id": 1098,
                                        "name": "id",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 788,
                                        "src": "6793:2:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "6788:8:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_bid_struct_$745_storage_$dyn_storage",
                                        "typeString": "struct pool.bid_struct storage ref[] storage ref"
                                      }
                                    },
                                    "id": 1103,
                                    "indexExpression": {
                                      "baseExpression": {
                                        "id": 1100,
                                        "name": "old_order",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1047,
                                        "src": "6797:9:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                          "typeString": "uint256[] memory"
                                        }
                                      },
                                      "id": 1102,
                                      "indexExpression": {
                                        "id": 1101,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1058,
                                        "src": "6807:1:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "6797:12:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "6788:22:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_bid_struct_$745_storage",
                                      "typeString": "struct pool.bid_struct storage ref"
                                    }
                                  },
                                  "id": 1104,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "size",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 742,
                                  "src": "6788:27:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "6771:44:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1106,
                              "nodeType": "ExpressionStatement",
                              "src": "6771:44:10"
                            }
                          ]
                        },
                        "id": 1108,
                        "nodeType": "IfStatement",
                        "src": "6512:318:10",
                        "trueBody": {
                          "id": 1092,
                          "nodeType": "Block",
                          "src": "6557:190:10",
                          "statements": [
                            {
                              "expression": {
                                "id": 1087,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 1078,
                                        "name": "op",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 785,
                                        "src": "6628:2:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_option_struct_$781_storage_$dyn_storage",
                                          "typeString": "struct pool.option_struct storage ref[] storage ref"
                                        }
                                      },
                                      "id": 1080,
                                      "indexExpression": {
                                        "id": 1079,
                                        "name": "id",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 788,
                                        "src": "6631:2:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "6628:6:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_option_struct_$781_storage",
                                        "typeString": "struct pool.option_struct storage ref"
                                      }
                                    },
                                    "id": 1081,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "order",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 780,
                                    "src": "6628:12:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                      "typeString": "uint256[] storage ref"
                                    }
                                  },
                                  "id": 1083,
                                  "indexExpression": {
                                    "id": 1082,
                                    "name": "k",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1054,
                                    "src": "6641:1:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "6628:15:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "baseExpression": {
                                    "id": 1084,
                                    "name": "old_order",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1047,
                                    "src": "6646:9:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 1086,
                                  "indexExpression": {
                                    "id": 1085,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1058,
                                    "src": "6656:1:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "6646:12:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "6628:30:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1088,
                              "nodeType": "ExpressionStatement",
                              "src": "6628:30:10"
                            },
                            {
                              "expression": {
                                "id": 1090,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "++",
                                "prefix": false,
                                "src": "6729:3:10",
                                "subExpression": {
                                  "id": 1089,
                                  "name": "k",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1054,
                                  "src": "6729:1:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1091,
                              "nodeType": "ExpressionStatement",
                              "src": "6729:3:10"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1064,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1061,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1058,
                      "src": "6471:1:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 1062,
                        "name": "old_order",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1047,
                        "src": "6475:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      "id": 1063,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "6475:16:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6471:20:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1110,
                  "initializationExpression": {
                    "assignments": [
                      1058
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1058,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "6464:1:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1110,
                        "src": "6456:9:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1057,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6456:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1060,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 1059,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6468:1:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "6456:13:10"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1066,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "6493:3:10",
                      "subExpression": {
                        "id": 1065,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1058,
                        "src": "6493:1:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1067,
                    "nodeType": "ExpressionStatement",
                    "src": "6493:3:10"
                  },
                  "nodeType": "ForStatement",
                  "src": "6451:389:10"
                },
                {
                  "body": {
                    "id": 1131,
                    "nodeType": "Block",
                    "src": "6900:43:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 1124,
                                  "name": "op",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 785,
                                  "src": "6914:2:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_option_struct_$781_storage_$dyn_storage",
                                    "typeString": "struct pool.option_struct storage ref[] storage ref"
                                  }
                                },
                                "id": 1126,
                                "indexExpression": {
                                  "id": 1125,
                                  "name": "id",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 788,
                                  "src": "6917:2:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6914:6:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_option_struct_$781_storage",
                                  "typeString": "struct pool.option_struct storage ref"
                                }
                              },
                              "id": 1127,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "order",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 780,
                              "src": "6914:12:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                "typeString": "uint256[] storage ref"
                              }
                            },
                            "id": 1128,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "pop",
                            "nodeType": "MemberAccess",
                            "src": "6914:16:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
                              "typeString": "function (uint256[] storage pointer)"
                            }
                          },
                          "id": 1129,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6914:18:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1130,
                        "nodeType": "ExpressionStatement",
                        "src": "6914:18:10"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1120,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1115,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1112,
                      "src": "6869:1:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1119,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 1116,
                          "name": "old_order",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1047,
                          "src": "6873:9:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 1117,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "6873:16:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "id": 1118,
                        "name": "k",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1054,
                        "src": "6892:1:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "6873:20:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6869:24:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1132,
                  "initializationExpression": {
                    "assignments": [
                      1112
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1112,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "6862:1:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1132,
                        "src": "6854:9:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1111,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6854:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1114,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 1113,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6866:1:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "6854:13:10"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1122,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "6895:3:10",
                      "subExpression": {
                        "id": 1121,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1112,
                        "src": "6895:1:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1123,
                    "nodeType": "ExpressionStatement",
                    "src": "6895:3:10"
                  },
                  "nodeType": "ForStatement",
                  "src": "6849:94:10"
                },
                {
                  "expression": {
                    "id": 1136,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1133,
                      "name": "STATUS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 730,
                      "src": "6952:6:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_contract_status_$725",
                        "typeString": "enum pool.contract_status"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1134,
                        "name": "contract_status",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 725,
                        "src": "6961:15:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_contract_status_$725_$",
                          "typeString": "type(enum pool.contract_status)"
                        }
                      },
                      "id": 1135,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "open",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 723,
                      "src": "6961:20:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_contract_status_$725",
                        "typeString": "enum pool.contract_status"
                      }
                    },
                    "src": "6952:29:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_contract_status_$725",
                      "typeString": "enum pool.contract_status"
                    }
                  },
                  "id": 1137,
                  "nodeType": "ExpressionStatement",
                  "src": "6952:29:10"
                }
              ]
            },
            "functionSelector": "9435c887",
            "id": 1139,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "cancelBid",
            "nameLocation": "5522:9:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 975,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5531:2:10"
            },
            "returnParameters": {
              "id": 976,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5541:0:10"
            },
            "scope": 2167,
            "src": "5513:1475:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1502,
              "nodeType": "Block",
              "src": "7039:2783:10",
              "statements": [
                {
                  "assignments": [
                    1145
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1145,
                      "mutability": "mutable",
                      "name": "_user",
                      "nameLocation": "7178:5:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1502,
                      "src": "7170:13:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1144,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7170:7:10",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1148,
                  "initialValue": {
                    "expression": {
                      "id": 1146,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "7186:3:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 1147,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "7186:10:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7170:26:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1156,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "expression": {
                              "baseExpression": {
                                "id": 1150,
                                "name": "op",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 785,
                                "src": "7214:2:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_option_struct_$781_storage_$dyn_storage",
                                  "typeString": "struct pool.option_struct storage ref[] storage ref"
                                }
                              },
                              "id": 1152,
                              "indexExpression": {
                                "id": 1151,
                                "name": "id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 788,
                                "src": "7217:2:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7214:6:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_option_struct_$781_storage",
                                "typeString": "struct pool.option_struct storage ref"
                              }
                            },
                            "id": 1153,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "order",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 780,
                            "src": "7214:12:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                              "typeString": "uint256[] storage ref"
                            }
                          },
                          "id": 1154,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "7214:19:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1155,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7236:1:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "7214:23:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "63616e6e6f742073656c6c206966207468657265206973206e6f20626964",
                        "id": 1157,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7239:32:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9eb86f1d50c8a1793e36ece3970d794f67eade8ca914fd6c50a0c139bfd016f9",
                          "typeString": "literal_string \"cannot sell if there is no bid\""
                        },
                        "value": "cannot sell if there is no bid"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9eb86f1d50c8a1793e36ece3970d794f67eade8ca914fd6c50a0c139bfd016f9",
                          "typeString": "literal_string \"cannot sell if there is no bid\""
                        }
                      ],
                      "id": 1149,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7206:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7206:66:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1159,
                  "nodeType": "ExpressionStatement",
                  "src": "7206:66:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1169,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 1161,
                              "name": "op",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 785,
                              "src": "7303:2:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_option_struct_$781_storage_$dyn_storage",
                                "typeString": "struct pool.option_struct storage ref[] storage ref"
                              }
                            },
                            "id": 1163,
                            "indexExpression": {
                              "id": 1162,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 788,
                              "src": "7306:2:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "7303:6:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_option_struct_$781_storage",
                              "typeString": "struct pool.option_struct storage ref"
                            }
                          },
                          "id": 1164,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "expiry",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 775,
                          "src": "7303:13:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1168,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1165,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "7319:5:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 1166,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "7319:15:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 1167,
                            "name": "NO_TRADE_CLOSE_TO_EXPIRE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 710,
                            "src": "7337:24:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7319:42:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7303:58:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416c72656164792065787069726564206f7220746f6f20636c6f736520746f20657870697279",
                        "id": 1170,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7375:40:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ea1502593df2894e0eb2fc654a0019627f70da71f803673626e28a5dfbe4aa6a",
                          "typeString": "literal_string \"Already expired or too close to expiry\""
                        },
                        "value": "Already expired or too close to expiry"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ea1502593df2894e0eb2fc654a0019627f70da71f803673626e28a5dfbe4aa6a",
                          "typeString": "literal_string \"Already expired or too close to expiry\""
                        }
                      ],
                      "id": 1160,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7282:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1171,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7282:143:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1172,
                  "nodeType": "ExpressionStatement",
                  "src": "7282:143:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_option_side_$756",
                          "typeString": "enum pool.option_side"
                        },
                        "id": 1182,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 1174,
                                "name": "user",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 771,
                                "src": "7456:4:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_user_struct_$764_storage_$_$",
                                  "typeString": "mapping(address => mapping(uint256 => struct pool.user_struct storage ref))"
                                }
                              },
                              "id": 1176,
                              "indexExpression": {
                                "id": 1175,
                                "name": "_user",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1145,
                                "src": "7461:5:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7456:11:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_user_struct_$764_storage_$",
                                "typeString": "mapping(uint256 => struct pool.user_struct storage ref)"
                              }
                            },
                            "id": 1178,
                            "indexExpression": {
                              "id": 1177,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 788,
                              "src": "7468:2:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "7456:15:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_user_struct_$764_storage",
                              "typeString": "struct pool.user_struct storage ref"
                            }
                          },
                          "id": 1179,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "side",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 761,
                          "src": "7456:20:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_option_side_$756",
                            "typeString": "enum pool.option_side"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "expression": {
                            "id": 1180,
                            "name": "option_side",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 756,
                            "src": "7480:11:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_option_side_$756_$",
                              "typeString": "type(enum pool.option_side)"
                            }
                          },
                          "id": 1181,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "buyer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 753,
                          "src": "7480:17:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_option_side_$756",
                            "typeString": "enum pool.option_side"
                          }
                        },
                        "src": "7456:41:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6275796572206f66206f7074696f6e2063616e6e6f742073656c6c",
                        "id": 1183,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7511:29:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_723022beac1c30c971a352af3ce370fcc9df99051ef6ed98ec85986b1bf4c111",
                          "typeString": "literal_string \"buyer of option cannot sell\""
                        },
                        "value": "buyer of option cannot sell"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_723022beac1c30c971a352af3ce370fcc9df99051ef6ed98ec85986b1bf4c111",
                          "typeString": "literal_string \"buyer of option cannot sell\""
                        }
                      ],
                      "id": 1173,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7435:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1184,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7435:115:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1185,
                  "nodeType": "ExpressionStatement",
                  "src": "7435:115:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1189,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1187,
                          "name": "seller_size",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1141,
                          "src": "7568:11:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 1188,
                          "name": "MIN_SELLER_SIZE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 716,
                          "src": "7583:15:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7568:30:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d696e2073697a65203d2031303030",
                        "id": 1190,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7600:17:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_207fbac4b1577b169b4f156452cbddd0fffd3f91044b671f092fa07b2ab6cec7",
                          "typeString": "literal_string \"Min size = 1000\""
                        },
                        "value": "Min size = 1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_207fbac4b1577b169b4f156452cbddd0fffd3f91044b671f092fa07b2ab6cec7",
                          "typeString": "literal_string \"Min size = 1000\""
                        }
                      ],
                      "id": 1186,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7560:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1191,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7560:58:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1192,
                  "nodeType": "ExpressionStatement",
                  "src": "7560:58:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1199,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1194,
                          "name": "seller_size",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1141,
                          "src": "7636:11:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 1195,
                              "name": "op",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 785,
                              "src": "7651:2:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_option_struct_$781_storage_$dyn_storage",
                                "typeString": "struct pool.option_struct storage ref[] storage ref"
                              }
                            },
                            "id": 1197,
                            "indexExpression": {
                              "id": 1196,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 788,
                              "src": "7654:2:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "7651:6:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_option_struct_$781_storage",
                              "typeString": "struct pool.option_struct storage ref"
                            }
                          },
                          "id": 1198,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "supply",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 777,
                          "src": "7651:13:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7636:28:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6c6f7720737570706c79",
                        "id": 1200,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7666:12:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1e39c56b71db86bfbc127de5d669246e238d35d1c812464adc208a4d9b9eb3c8",
                          "typeString": "literal_string \"low supply\""
                        },
                        "value": "low supply"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1e39c56b71db86bfbc127de5d669246e238d35d1c812464adc208a4d9b9eb3c8",
                          "typeString": "literal_string \"low supply\""
                        }
                      ],
                      "id": 1193,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7628:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1201,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7628:51:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1202,
                  "nodeType": "ExpressionStatement",
                  "src": "7628:51:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1208,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1204,
                          "name": "seller_size",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1141,
                          "src": "7697:11:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "baseExpression": {
                            "id": 1205,
                            "name": "cash_balance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 738,
                            "src": "7712:12:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1207,
                          "indexExpression": {
                            "id": 1206,
                            "name": "_user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1145,
                            "src": "7725:5:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7712:19:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7697:34:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f7420656e6f7567682063617368",
                        "id": 1209,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7733:17:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d3aa71b8e891e6f9aea36bebdeb34ce1e1d36df0162e670e1229389147acf88b",
                          "typeString": "literal_string \"not enough cash\""
                        },
                        "value": "not enough cash"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d3aa71b8e891e6f9aea36bebdeb34ce1e1d36df0162e670e1229389147acf88b",
                          "typeString": "literal_string \"not enough cash\""
                        }
                      ],
                      "id": 1203,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7689:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1210,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7689:62:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1211,
                  "nodeType": "ExpressionStatement",
                  "src": "7689:62:10"
                },
                {
                  "expression": {
                    "id": 1216,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1212,
                        "name": "cash_balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 738,
                        "src": "7800:12:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1214,
                      "indexExpression": {
                        "id": 1213,
                        "name": "_user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1145,
                        "src": "7813:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7800:19:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 1215,
                      "name": "seller_size",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1141,
                      "src": "7823:11:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7800:34:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1217,
                  "nodeType": "ExpressionStatement",
                  "src": "7800:34:10"
                },
                {
                  "assignments": [
                    1219
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1219,
                      "mutability": "mutable",
                      "name": "remain",
                      "nameLocation": "7882:6:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1502,
                      "src": "7874:14:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1218,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7874:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1221,
                  "initialValue": {
                    "id": 1220,
                    "name": "seller_size",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1141,
                    "src": "7891:11:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7874:28:10"
                },
                {
                  "assignments": [
                    1223
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1223,
                      "mutability": "mutable",
                      "name": "sizexprice",
                      "nameLocation": "7920:10:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1502,
                      "src": "7912:18:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1222,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7912:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1225,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 1224,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "7933:1:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7912:22:10"
                },
                {
                  "assignments": [
                    1227
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1227,
                      "mutability": "mutable",
                      "name": "each_size",
                      "nameLocation": "7952:9:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1502,
                      "src": "7944:17:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1226,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7944:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1228,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7944:17:10"
                },
                {
                  "assignments": [
                    1230
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1230,
                      "mutability": "mutable",
                      "name": "i",
                      "nameLocation": "7979:1:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1502,
                      "src": "7971:9:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1229,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7971:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1238,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1237,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "expression": {
                          "baseExpression": {
                            "id": 1231,
                            "name": "op",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 785,
                            "src": "7983:2:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_option_struct_$781_storage_$dyn_storage",
                              "typeString": "struct pool.option_struct storage ref[] storage ref"
                            }
                          },
                          "id": 1233,
                          "indexExpression": {
                            "id": 1232,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 788,
                            "src": "7986:2:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7983:6:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_option_struct_$781_storage",
                            "typeString": "struct pool.option_struct storage ref"
                          }
                        },
                        "id": 1234,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "order",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 780,
                        "src": "7983:12:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 1235,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "7983:19:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 1236,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8005:1:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "7983:23:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7971:35:10"
                },
                {
                  "body": {
                    "id": 1470,
                    "nodeType": "Block",
                    "src": "8085:1461:10",
                    "statements": [
                      {
                        "expression": {
                          "id": 1254,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1242,
                            "name": "each_size",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1227,
                            "src": "8099:9:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "baseExpression": {
                                "baseExpression": {
                                  "id": 1243,
                                  "name": "bids",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 751,
                                  "src": "8111:4:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_bid_struct_$745_storage_$dyn_storage_$",
                                    "typeString": "mapping(uint256 => struct pool.bid_struct storage ref[] storage ref)"
                                  }
                                },
                                "id": 1245,
                                "indexExpression": {
                                  "id": 1244,
                                  "name": "id",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 788,
                                  "src": "8116:2:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "8111:8:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_bid_struct_$745_storage_$dyn_storage",
                                  "typeString": "struct pool.bid_struct storage ref[] storage ref"
                                }
                              },
                              "id": 1252,
                              "indexExpression": {
                                "baseExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 1246,
                                      "name": "op",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 785,
                                      "src": "8120:2:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_option_struct_$781_storage_$dyn_storage",
                                        "typeString": "struct pool.option_struct storage ref[] storage ref"
                                      }
                                    },
                                    "id": 1248,
                                    "indexExpression": {
                                      "id": 1247,
                                      "name": "id",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 788,
                                      "src": "8123:2:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "8120:6:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_option_struct_$781_storage",
                                      "typeString": "struct pool.option_struct storage ref"
                                    }
                                  },
                                  "id": 1249,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "order",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 780,
                                  "src": "8120:12:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                    "typeString": "uint256[] storage ref"
                                  }
                                },
                                "id": 1251,
                                "indexExpression": {
                                  "id": 1250,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1230,
                                  "src": "8133:1:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "8120:15:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "8111:25:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_bid_struct_$745_storage",
                                "typeString": "struct pool.bid_struct storage ref"
                              }
                            },
                            "id": 1253,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "size",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 742,
                            "src": "8111:30:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8099:42:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1255,
                        "nodeType": "ExpressionStatement",
                        "src": "8099:42:10"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1258,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1256,
                            "name": "remain",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1219,
                            "src": "8159:6:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "id": 1257,
                            "name": "each_size",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1227,
                            "src": "8169:9:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8159:19:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 1465,
                          "nodeType": "Block",
                          "src": "8912:607:10",
                          "statements": [
                            {
                              "expression": {
                                "id": 1383,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "baseExpression": {
                                        "id": 1366,
                                        "name": "user",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 771,
                                        "src": "8962:4:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_user_struct_$764_storage_$_$",
                                          "typeString": "mapping(address => mapping(uint256 => struct pool.user_struct storage ref))"
                                        }
                                      },
                                      "id": 1379,
                                      "indexExpression": {
                                        "expression": {
                                          "baseExpression": {
                                            "baseExpression": {
                                              "id": 1367,
                                              "name": "bids",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 751,
                                              "src": "8967:4:10",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_bid_struct_$745_storage_$dyn_storage_$",
                                                "typeString": "mapping(uint256 => struct pool.bid_struct storage ref[] storage ref)"
                                              }
                                            },
                                            "id": 1369,
                                            "indexExpression": {
                                              "id": 1368,
                                              "name": "id",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 788,
                                              "src": "8972:2:10",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "8967:8:10",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_struct$_bid_struct_$745_storage_$dyn_storage",
                                              "typeString": "struct pool.bid_struct storage ref[] storage ref"
                                            }
                                          },
                                          "id": 1376,
                                          "indexExpression": {
                                            "baseExpression": {
                                              "expression": {
                                                "baseExpression": {
                                                  "id": 1370,
                                                  "name": "op",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 785,
                                                  "src": "8976:2:10",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_array$_t_struct$_option_struct_$781_storage_$dyn_storage",
                                                    "typeString": "struct pool.option_struct storage ref[] storage ref"
                                                  }
                                                },
                                                "id": 1372,
                                                "indexExpression": {
                                                  "id": 1371,
                                                  "name": "id",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 788,
                                                  "src": "8979:2:10",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "IndexAccess",
                                                "src": "8976:6:10",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_struct$_option_struct_$781_storage",
                                                  "typeString": "struct pool.option_struct storage ref"
                                                }
                                              },
                                              "id": 1373,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "order",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 780,
                                              "src": "8976:12:10",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                                "typeString": "uint256[] storage ref"
                                              }
                                            },
                                            "id": 1375,
                                            "indexExpression": {
                                              "id": 1374,
                                              "name": "i",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1230,
                                              "src": "8989:1:10",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "8976:15:10",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "8967:25:10",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_bid_struct_$745_storage",
                                            "typeString": "struct pool.bid_struct storage ref"
                                          }
                                        },
                                        "id": 1377,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "user_id",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 744,
                                        "src": "8967:33:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "8962:39:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_user_struct_$764_storage_$",
                                        "typeString": "mapping(uint256 => struct pool.user_struct storage ref)"
                                      }
                                    },
                                    "id": 1380,
                                    "indexExpression": {
                                      "id": 1378,
                                      "name": "id",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 788,
                                      "src": "9002:2:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "8962:43:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_user_struct_$764_storage",
                                      "typeString": "struct pool.user_struct storage ref"
                                    }
                                  },
                                  "id": 1381,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "size",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 758,
                                  "src": "8962:48:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "id": 1382,
                                  "name": "remain",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1219,
                                  "src": "9014:6:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "8962:58:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1384,
                              "nodeType": "ExpressionStatement",
                              "src": "8962:58:10"
                            },
                            {
                              "expression": {
                                "id": 1421,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "baseExpression": {
                                        "id": 1385,
                                        "name": "user",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 771,
                                        "src": "9038:4:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_user_struct_$764_storage_$_$",
                                          "typeString": "mapping(address => mapping(uint256 => struct pool.user_struct storage ref))"
                                        }
                                      },
                                      "id": 1398,
                                      "indexExpression": {
                                        "expression": {
                                          "baseExpression": {
                                            "baseExpression": {
                                              "id": 1386,
                                              "name": "bids",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 751,
                                              "src": "9043:4:10",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_bid_struct_$745_storage_$dyn_storage_$",
                                                "typeString": "mapping(uint256 => struct pool.bid_struct storage ref[] storage ref)"
                                              }
                                            },
                                            "id": 1388,
                                            "indexExpression": {
                                              "id": 1387,
                                              "name": "id",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 788,
                                              "src": "9048:2:10",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "9043:8:10",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_struct$_bid_struct_$745_storage_$dyn_storage",
                                              "typeString": "struct pool.bid_struct storage ref[] storage ref"
                                            }
                                          },
                                          "id": 1395,
                                          "indexExpression": {
                                            "baseExpression": {
                                              "expression": {
                                                "baseExpression": {
                                                  "id": 1389,
                                                  "name": "op",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 785,
                                                  "src": "9052:2:10",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_array$_t_struct$_option_struct_$781_storage_$dyn_storage",
                                                    "typeString": "struct pool.option_struct storage ref[] storage ref"
                                                  }
                                                },
                                                "id": 1391,
                                                "indexExpression": {
                                                  "id": 1390,
                                                  "name": "id",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 788,
                                                  "src": "9055:2:10",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "IndexAccess",
                                                "src": "9052:6:10",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_struct$_option_struct_$781_storage",
                                                  "typeString": "struct pool.option_struct storage ref"
                                                }
                                              },
                                              "id": 1392,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "order",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 780,
                                              "src": "9052:12:10",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                                "typeString": "uint256[] storage ref"
                                              }
                                            },
                                            "id": 1394,
                                            "indexExpression": {
                                              "id": 1393,
                                              "name": "i",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1230,
                                              "src": "9065:1:10",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "9052:15:10",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "9043:25:10",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_bid_struct_$745_storage",
                                            "typeString": "struct pool.bid_struct storage ref"
                                          }
                                        },
                                        "id": 1396,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "user_id",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 744,
                                        "src": "9043:33:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "9038:39:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_user_struct_$764_storage_$",
                                        "typeString": "mapping(uint256 => struct pool.user_struct storage ref)"
                                      }
                                    },
                                    "id": 1399,
                                    "indexExpression": {
                                      "id": 1397,
                                      "name": "id",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 788,
                                      "src": "9078:2:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "9038:43:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_user_struct_$764_storage",
                                      "typeString": "struct pool.user_struct storage ref"
                                    }
                                  },
                                  "id": 1400,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "unusedpremium",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 763,
                                  "src": "9038:78:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "-=",
                                "rightHandSide": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1419,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "components": [
                                          {
                                            "commonType": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            "id": 1413,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "id": 1401,
                                              "name": "remain",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1219,
                                              "src": "9122:6:10",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "*",
                                            "rightExpression": {
                                              "expression": {
                                                "baseExpression": {
                                                  "baseExpression": {
                                                    "id": 1402,
                                                    "name": "bids",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 751,
                                                    "src": "9151:4:10",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_bid_struct_$745_storage_$dyn_storage_$",
                                                      "typeString": "mapping(uint256 => struct pool.bid_struct storage ref[] storage ref)"
                                                    }
                                                  },
                                                  "id": 1404,
                                                  "indexExpression": {
                                                    "id": 1403,
                                                    "name": "id",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 788,
                                                    "src": "9156:2:10",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  },
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "nodeType": "IndexAccess",
                                                  "src": "9151:8:10",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_array$_t_struct$_bid_struct_$745_storage_$dyn_storage",
                                                    "typeString": "struct pool.bid_struct storage ref[] storage ref"
                                                  }
                                                },
                                                "id": 1411,
                                                "indexExpression": {
                                                  "baseExpression": {
                                                    "expression": {
                                                      "baseExpression": {
                                                        "id": 1405,
                                                        "name": "op",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 785,
                                                        "src": "9160:2:10",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_array$_t_struct$_option_struct_$781_storage_$dyn_storage",
                                                          "typeString": "struct pool.option_struct storage ref[] storage ref"
                                                        }
                                                      },
                                                      "id": 1407,
                                                      "indexExpression": {
                                                        "id": 1406,
                                                        "name": "id",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 788,
                                                        "src": "9163:2:10",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_uint256",
                                                          "typeString": "uint256"
                                                        }
                                                      },
                                                      "isConstant": false,
                                                      "isLValue": true,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "nodeType": "IndexAccess",
                                                      "src": "9160:6:10",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_struct$_option_struct_$781_storage",
                                                        "typeString": "struct pool.option_struct storage ref"
                                                      }
                                                    },
                                                    "id": 1408,
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "order",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 780,
                                                    "src": "9160:12:10",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                                      "typeString": "uint256[] storage ref"
                                                    }
                                                  },
                                                  "id": 1410,
                                                  "indexExpression": {
                                                    "id": 1409,
                                                    "name": "i",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 1230,
                                                    "src": "9173:1:10",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  },
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "nodeType": "IndexAccess",
                                                  "src": "9160:15:10",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "IndexAccess",
                                                "src": "9151:25:10",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_struct$_bid_struct_$745_storage",
                                                  "typeString": "struct pool.bid_struct storage ref"
                                                }
                                              },
                                              "id": 1412,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "price",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 740,
                                              "src": "9151:31:10",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "src": "9122:60:10",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "id": 1414,
                                        "isConstant": false,
                                        "isInlineArray": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "TupleExpression",
                                        "src": "9121:62:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "/",
                                      "rightExpression": {
                                        "expression": {
                                          "baseExpression": {
                                            "id": 1415,
                                            "name": "op",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 785,
                                            "src": "9186:2:10",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_struct$_option_struct_$781_storage_$dyn_storage",
                                              "typeString": "struct pool.option_struct storage ref[] storage ref"
                                            }
                                          },
                                          "id": 1417,
                                          "indexExpression": {
                                            "id": 1416,
                                            "name": "id",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 788,
                                            "src": "9189:2:10",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "9186:6:10",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_option_struct_$781_storage",
                                            "typeString": "struct pool.option_struct storage ref"
                                          }
                                        },
                                        "id": 1418,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "strike",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 773,
                                        "src": "9186:13:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "9121:78:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 1420,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "9120:80:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "9038:162:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1422,
                              "nodeType": "ExpressionStatement",
                              "src": "9038:162:10"
                            },
                            {
                              "expression": {
                                "id": 1438,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1423,
                                  "name": "sizexprice",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1223,
                                  "src": "9251:10:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1436,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 1424,
                                        "name": "remain",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1219,
                                        "src": "9266:6:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "*",
                                      "rightExpression": {
                                        "expression": {
                                          "baseExpression": {
                                            "baseExpression": {
                                              "id": 1425,
                                              "name": "bids",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 751,
                                              "src": "9275:4:10",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_bid_struct_$745_storage_$dyn_storage_$",
                                                "typeString": "mapping(uint256 => struct pool.bid_struct storage ref[] storage ref)"
                                              }
                                            },
                                            "id": 1427,
                                            "indexExpression": {
                                              "id": 1426,
                                              "name": "id",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 788,
                                              "src": "9280:2:10",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "9275:8:10",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_struct$_bid_struct_$745_storage_$dyn_storage",
                                              "typeString": "struct pool.bid_struct storage ref[] storage ref"
                                            }
                                          },
                                          "id": 1434,
                                          "indexExpression": {
                                            "baseExpression": {
                                              "expression": {
                                                "baseExpression": {
                                                  "id": 1428,
                                                  "name": "op",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 785,
                                                  "src": "9284:2:10",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_array$_t_struct$_option_struct_$781_storage_$dyn_storage",
                                                    "typeString": "struct pool.option_struct storage ref[] storage ref"
                                                  }
                                                },
                                                "id": 1430,
                                                "indexExpression": {
                                                  "id": 1429,
                                                  "name": "id",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 788,
                                                  "src": "9287:2:10",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "IndexAccess",
                                                "src": "9284:6:10",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_struct$_option_struct_$781_storage",
                                                  "typeString": "struct pool.option_struct storage ref"
                                                }
                                              },
                                              "id": 1431,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "order",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 780,
                                              "src": "9284:12:10",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                                "typeString": "uint256[] storage ref"
                                              }
                                            },
                                            "id": 1433,
                                            "indexExpression": {
                                              "id": 1432,
                                              "name": "i",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1230,
                                              "src": "9297:1:10",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "9284:15:10",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "9275:25:10",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_bid_struct_$745_storage",
                                            "typeString": "struct pool.bid_struct storage ref"
                                          }
                                        },
                                        "id": 1435,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "price",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 740,
                                        "src": "9275:31:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "9266:40:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 1437,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "9265:42:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "9251:56:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1439,
                              "nodeType": "ExpressionStatement",
                              "src": "9251:56:10"
                            },
                            {
                              "expression": {
                                "id": 1445,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 1440,
                                      "name": "op",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 785,
                                      "src": "9358:2:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_option_struct_$781_storage_$dyn_storage",
                                        "typeString": "struct pool.option_struct storage ref[] storage ref"
                                      }
                                    },
                                    "id": 1442,
                                    "indexExpression": {
                                      "id": 1441,
                                      "name": "id",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 788,
                                      "src": "9361:2:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "9358:6:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_option_struct_$781_storage",
                                      "typeString": "struct pool.option_struct storage ref"
                                    }
                                  },
                                  "id": 1443,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "supply",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 777,
                                  "src": "9358:13:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "-=",
                                "rightHandSide": {
                                  "id": 1444,
                                  "name": "remain",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1219,
                                  "src": "9375:6:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "9358:23:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1446,
                              "nodeType": "ExpressionStatement",
                              "src": "9358:23:10"
                            },
                            {
                              "expression": {
                                "id": 1459,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "baseExpression": {
                                        "id": 1447,
                                        "name": "bids",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 751,
                                        "src": "9436:4:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_bid_struct_$745_storage_$dyn_storage_$",
                                          "typeString": "mapping(uint256 => struct pool.bid_struct storage ref[] storage ref)"
                                        }
                                      },
                                      "id": 1455,
                                      "indexExpression": {
                                        "id": 1448,
                                        "name": "id",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 788,
                                        "src": "9441:2:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "9436:8:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_bid_struct_$745_storage_$dyn_storage",
                                        "typeString": "struct pool.bid_struct storage ref[] storage ref"
                                      }
                                    },
                                    "id": 1456,
                                    "indexExpression": {
                                      "baseExpression": {
                                        "expression": {
                                          "baseExpression": {
                                            "id": 1449,
                                            "name": "op",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 785,
                                            "src": "9445:2:10",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_struct$_option_struct_$781_storage_$dyn_storage",
                                              "typeString": "struct pool.option_struct storage ref[] storage ref"
                                            }
                                          },
                                          "id": 1451,
                                          "indexExpression": {
                                            "id": 1450,
                                            "name": "id",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 788,
                                            "src": "9448:2:10",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "9445:6:10",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_option_struct_$781_storage",
                                            "typeString": "struct pool.option_struct storage ref"
                                          }
                                        },
                                        "id": 1452,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "order",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 780,
                                        "src": "9445:12:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                          "typeString": "uint256[] storage ref"
                                        }
                                      },
                                      "id": 1454,
                                      "indexExpression": {
                                        "id": 1453,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1230,
                                        "src": "9458:1:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "9445:15:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "9436:25:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_bid_struct_$745_storage",
                                      "typeString": "struct pool.bid_struct storage ref"
                                    }
                                  },
                                  "id": 1457,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "size",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 742,
                                  "src": "9436:30:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "-=",
                                "rightHandSide": {
                                  "id": 1458,
                                  "name": "remain",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1219,
                                  "src": "9470:6:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "9436:40:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1460,
                              "nodeType": "ExpressionStatement",
                              "src": "9436:40:10"
                            },
                            {
                              "expression": {
                                "id": 1463,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1461,
                                  "name": "remain",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1219,
                                  "src": "9494:6:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "30",
                                  "id": 1462,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "9503:1:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "9494:10:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1464,
                              "nodeType": "ExpressionStatement",
                              "src": "9494:10:10"
                            }
                          ]
                        },
                        "id": 1466,
                        "nodeType": "IfStatement",
                        "src": "8155:1364:10",
                        "trueBody": {
                          "id": 1365,
                          "nodeType": "Block",
                          "src": "8180:726:10",
                          "statements": [
                            {
                              "expression": {
                                "id": 1276,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "baseExpression": {
                                        "id": 1259,
                                        "name": "user",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 771,
                                        "src": "8230:4:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_user_struct_$764_storage_$_$",
                                          "typeString": "mapping(address => mapping(uint256 => struct pool.user_struct storage ref))"
                                        }
                                      },
                                      "id": 1272,
                                      "indexExpression": {
                                        "expression": {
                                          "baseExpression": {
                                            "baseExpression": {
                                              "id": 1260,
                                              "name": "bids",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 751,
                                              "src": "8235:4:10",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_bid_struct_$745_storage_$dyn_storage_$",
                                                "typeString": "mapping(uint256 => struct pool.bid_struct storage ref[] storage ref)"
                                              }
                                            },
                                            "id": 1262,
                                            "indexExpression": {
                                              "id": 1261,
                                              "name": "id",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 788,
                                              "src": "8240:2:10",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "8235:8:10",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_struct$_bid_struct_$745_storage_$dyn_storage",
                                              "typeString": "struct pool.bid_struct storage ref[] storage ref"
                                            }
                                          },
                                          "id": 1269,
                                          "indexExpression": {
                                            "baseExpression": {
                                              "expression": {
                                                "baseExpression": {
                                                  "id": 1263,
                                                  "name": "op",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 785,
                                                  "src": "8244:2:10",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_array$_t_struct$_option_struct_$781_storage_$dyn_storage",
                                                    "typeString": "struct pool.option_struct storage ref[] storage ref"
                                                  }
                                                },
                                                "id": 1265,
                                                "indexExpression": {
                                                  "id": 1264,
                                                  "name": "id",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 788,
                                                  "src": "8247:2:10",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "IndexAccess",
                                                "src": "8244:6:10",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_struct$_option_struct_$781_storage",
                                                  "typeString": "struct pool.option_struct storage ref"
                                                }
                                              },
                                              "id": 1266,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "order",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 780,
                                              "src": "8244:12:10",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                                "typeString": "uint256[] storage ref"
                                              }
                                            },
                                            "id": 1268,
                                            "indexExpression": {
                                              "id": 1267,
                                              "name": "i",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1230,
                                              "src": "8257:1:10",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "8244:15:10",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "8235:25:10",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_bid_struct_$745_storage",
                                            "typeString": "struct pool.bid_struct storage ref"
                                          }
                                        },
                                        "id": 1270,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "user_id",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 744,
                                        "src": "8235:33:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "8230:39:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_user_struct_$764_storage_$",
                                        "typeString": "mapping(uint256 => struct pool.user_struct storage ref)"
                                      }
                                    },
                                    "id": 1273,
                                    "indexExpression": {
                                      "id": 1271,
                                      "name": "id",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 788,
                                      "src": "8270:2:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "8230:43:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_user_struct_$764_storage",
                                      "typeString": "struct pool.user_struct storage ref"
                                    }
                                  },
                                  "id": 1274,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "size",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 758,
                                  "src": "8230:48:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "id": 1275,
                                  "name": "each_size",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1227,
                                  "src": "8282:9:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "8230:61:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1277,
                              "nodeType": "ExpressionStatement",
                              "src": "8230:61:10"
                            },
                            {
                              "expression": {
                                "id": 1314,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "baseExpression": {
                                        "id": 1278,
                                        "name": "user",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 771,
                                        "src": "8309:4:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_user_struct_$764_storage_$_$",
                                          "typeString": "mapping(address => mapping(uint256 => struct pool.user_struct storage ref))"
                                        }
                                      },
                                      "id": 1291,
                                      "indexExpression": {
                                        "expression": {
                                          "baseExpression": {
                                            "baseExpression": {
                                              "id": 1279,
                                              "name": "bids",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 751,
                                              "src": "8314:4:10",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_bid_struct_$745_storage_$dyn_storage_$",
                                                "typeString": "mapping(uint256 => struct pool.bid_struct storage ref[] storage ref)"
                                              }
                                            },
                                            "id": 1281,
                                            "indexExpression": {
                                              "id": 1280,
                                              "name": "id",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 788,
                                              "src": "8319:2:10",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "8314:8:10",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_struct$_bid_struct_$745_storage_$dyn_storage",
                                              "typeString": "struct pool.bid_struct storage ref[] storage ref"
                                            }
                                          },
                                          "id": 1288,
                                          "indexExpression": {
                                            "baseExpression": {
                                              "expression": {
                                                "baseExpression": {
                                                  "id": 1282,
                                                  "name": "op",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 785,
                                                  "src": "8323:2:10",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_array$_t_struct$_option_struct_$781_storage_$dyn_storage",
                                                    "typeString": "struct pool.option_struct storage ref[] storage ref"
                                                  }
                                                },
                                                "id": 1284,
                                                "indexExpression": {
                                                  "id": 1283,
                                                  "name": "id",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 788,
                                                  "src": "8326:2:10",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "IndexAccess",
                                                "src": "8323:6:10",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_struct$_option_struct_$781_storage",
                                                  "typeString": "struct pool.option_struct storage ref"
                                                }
                                              },
                                              "id": 1285,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "order",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 780,
                                              "src": "8323:12:10",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                                "typeString": "uint256[] storage ref"
                                              }
                                            },
                                            "id": 1287,
                                            "indexExpression": {
                                              "id": 1286,
                                              "name": "i",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1230,
                                              "src": "8336:1:10",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "8323:15:10",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "8314:25:10",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_bid_struct_$745_storage",
                                            "typeString": "struct pool.bid_struct storage ref"
                                          }
                                        },
                                        "id": 1289,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "user_id",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 744,
                                        "src": "8314:33:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "8309:39:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_user_struct_$764_storage_$",
                                        "typeString": "mapping(uint256 => struct pool.user_struct storage ref)"
                                      }
                                    },
                                    "id": 1292,
                                    "indexExpression": {
                                      "id": 1290,
                                      "name": "id",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 788,
                                      "src": "8349:2:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "8309:43:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_user_struct_$764_storage",
                                      "typeString": "struct pool.user_struct storage ref"
                                    }
                                  },
                                  "id": 1293,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "unusedpremium",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 763,
                                  "src": "8309:78:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "-=",
                                "rightHandSide": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1312,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "components": [
                                          {
                                            "commonType": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            "id": 1306,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "id": 1294,
                                              "name": "each_size",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1227,
                                              "src": "8393:9:10",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "*",
                                            "rightExpression": {
                                              "expression": {
                                                "baseExpression": {
                                                  "baseExpression": {
                                                    "id": 1295,
                                                    "name": "bids",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 751,
                                                    "src": "8425:4:10",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_bid_struct_$745_storage_$dyn_storage_$",
                                                      "typeString": "mapping(uint256 => struct pool.bid_struct storage ref[] storage ref)"
                                                    }
                                                  },
                                                  "id": 1297,
                                                  "indexExpression": {
                                                    "id": 1296,
                                                    "name": "id",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 788,
                                                    "src": "8430:2:10",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  },
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "nodeType": "IndexAccess",
                                                  "src": "8425:8:10",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_array$_t_struct$_bid_struct_$745_storage_$dyn_storage",
                                                    "typeString": "struct pool.bid_struct storage ref[] storage ref"
                                                  }
                                                },
                                                "id": 1304,
                                                "indexExpression": {
                                                  "baseExpression": {
                                                    "expression": {
                                                      "baseExpression": {
                                                        "id": 1298,
                                                        "name": "op",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 785,
                                                        "src": "8434:2:10",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_array$_t_struct$_option_struct_$781_storage_$dyn_storage",
                                                          "typeString": "struct pool.option_struct storage ref[] storage ref"
                                                        }
                                                      },
                                                      "id": 1300,
                                                      "indexExpression": {
                                                        "id": 1299,
                                                        "name": "id",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 788,
                                                        "src": "8437:2:10",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_uint256",
                                                          "typeString": "uint256"
                                                        }
                                                      },
                                                      "isConstant": false,
                                                      "isLValue": true,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "nodeType": "IndexAccess",
                                                      "src": "8434:6:10",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_struct$_option_struct_$781_storage",
                                                        "typeString": "struct pool.option_struct storage ref"
                                                      }
                                                    },
                                                    "id": 1301,
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "order",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 780,
                                                    "src": "8434:12:10",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                                      "typeString": "uint256[] storage ref"
                                                    }
                                                  },
                                                  "id": 1303,
                                                  "indexExpression": {
                                                    "id": 1302,
                                                    "name": "i",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 1230,
                                                    "src": "8447:1:10",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  },
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "nodeType": "IndexAccess",
                                                  "src": "8434:15:10",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "IndexAccess",
                                                "src": "8425:25:10",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_struct$_bid_struct_$745_storage",
                                                  "typeString": "struct pool.bid_struct storage ref"
                                                }
                                              },
                                              "id": 1305,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "price",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 740,
                                              "src": "8425:31:10",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "src": "8393:63:10",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "id": 1307,
                                        "isConstant": false,
                                        "isInlineArray": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "TupleExpression",
                                        "src": "8392:65:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "/",
                                      "rightExpression": {
                                        "expression": {
                                          "baseExpression": {
                                            "id": 1308,
                                            "name": "op",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 785,
                                            "src": "8460:2:10",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_struct$_option_struct_$781_storage_$dyn_storage",
                                              "typeString": "struct pool.option_struct storage ref[] storage ref"
                                            }
                                          },
                                          "id": 1310,
                                          "indexExpression": {
                                            "id": 1309,
                                            "name": "id",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 788,
                                            "src": "8463:2:10",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "8460:6:10",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_option_struct_$781_storage",
                                            "typeString": "struct pool.option_struct storage ref"
                                          }
                                        },
                                        "id": 1311,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "strike",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 773,
                                        "src": "8460:13:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "8392:81:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 1313,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "8391:83:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "8309:165:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1315,
                              "nodeType": "ExpressionStatement",
                              "src": "8309:165:10"
                            },
                            {
                              "expression": {
                                "id": 1331,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1316,
                                  "name": "sizexprice",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1223,
                                  "src": "8525:10:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1329,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 1317,
                                        "name": "each_size",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1227,
                                        "src": "8540:9:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "*",
                                      "rightExpression": {
                                        "expression": {
                                          "baseExpression": {
                                            "baseExpression": {
                                              "id": 1318,
                                              "name": "bids",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 751,
                                              "src": "8552:4:10",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_bid_struct_$745_storage_$dyn_storage_$",
                                                "typeString": "mapping(uint256 => struct pool.bid_struct storage ref[] storage ref)"
                                              }
                                            },
                                            "id": 1320,
                                            "indexExpression": {
                                              "id": 1319,
                                              "name": "id",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 788,
                                              "src": "8557:2:10",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "8552:8:10",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_struct$_bid_struct_$745_storage_$dyn_storage",
                                              "typeString": "struct pool.bid_struct storage ref[] storage ref"
                                            }
                                          },
                                          "id": 1327,
                                          "indexExpression": {
                                            "baseExpression": {
                                              "expression": {
                                                "baseExpression": {
                                                  "id": 1321,
                                                  "name": "op",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 785,
                                                  "src": "8561:2:10",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_array$_t_struct$_option_struct_$781_storage_$dyn_storage",
                                                    "typeString": "struct pool.option_struct storage ref[] storage ref"
                                                  }
                                                },
                                                "id": 1323,
                                                "indexExpression": {
                                                  "id": 1322,
                                                  "name": "id",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 788,
                                                  "src": "8564:2:10",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "IndexAccess",
                                                "src": "8561:6:10",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_struct$_option_struct_$781_storage",
                                                  "typeString": "struct pool.option_struct storage ref"
                                                }
                                              },
                                              "id": 1324,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "order",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 780,
                                              "src": "8561:12:10",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                                "typeString": "uint256[] storage ref"
                                              }
                                            },
                                            "id": 1326,
                                            "indexExpression": {
                                              "id": 1325,
                                              "name": "i",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1230,
                                              "src": "8574:1:10",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "8561:15:10",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "8552:25:10",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_bid_struct_$745_storage",
                                            "typeString": "struct pool.bid_struct storage ref"
                                          }
                                        },
                                        "id": 1328,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "price",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 740,
                                        "src": "8552:31:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "8540:43:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 1330,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "8539:45:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "8525:59:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1332,
                              "nodeType": "ExpressionStatement",
                              "src": "8525:59:10"
                            },
                            {
                              "expression": {
                                "id": 1338,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 1333,
                                      "name": "op",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 785,
                                      "src": "8635:2:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_option_struct_$781_storage_$dyn_storage",
                                        "typeString": "struct pool.option_struct storage ref[] storage ref"
                                      }
                                    },
                                    "id": 1335,
                                    "indexExpression": {
                                      "id": 1334,
                                      "name": "id",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 788,
                                      "src": "8638:2:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "8635:6:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_option_struct_$781_storage",
                                      "typeString": "struct pool.option_struct storage ref"
                                    }
                                  },
                                  "id": 1336,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "supply",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 777,
                                  "src": "8635:13:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "-=",
                                "rightHandSide": {
                                  "id": 1337,
                                  "name": "each_size",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1227,
                                  "src": "8652:9:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "8635:26:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1339,
                              "nodeType": "ExpressionStatement",
                              "src": "8635:26:10"
                            },
                            {
                              "expression": {
                                "id": 1352,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "baseExpression": {
                                        "id": 1340,
                                        "name": "bids",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 751,
                                        "src": "8716:4:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_bid_struct_$745_storage_$dyn_storage_$",
                                          "typeString": "mapping(uint256 => struct pool.bid_struct storage ref[] storage ref)"
                                        }
                                      },
                                      "id": 1348,
                                      "indexExpression": {
                                        "id": 1341,
                                        "name": "id",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 788,
                                        "src": "8721:2:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "8716:8:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_bid_struct_$745_storage_$dyn_storage",
                                        "typeString": "struct pool.bid_struct storage ref[] storage ref"
                                      }
                                    },
                                    "id": 1349,
                                    "indexExpression": {
                                      "baseExpression": {
                                        "expression": {
                                          "baseExpression": {
                                            "id": 1342,
                                            "name": "op",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 785,
                                            "src": "8725:2:10",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_struct$_option_struct_$781_storage_$dyn_storage",
                                              "typeString": "struct pool.option_struct storage ref[] storage ref"
                                            }
                                          },
                                          "id": 1344,
                                          "indexExpression": {
                                            "id": 1343,
                                            "name": "id",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 788,
                                            "src": "8728:2:10",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "8725:6:10",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_option_struct_$781_storage",
                                            "typeString": "struct pool.option_struct storage ref"
                                          }
                                        },
                                        "id": 1345,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "order",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 780,
                                        "src": "8725:12:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                          "typeString": "uint256[] storage ref"
                                        }
                                      },
                                      "id": 1347,
                                      "indexExpression": {
                                        "id": 1346,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1230,
                                        "src": "8738:1:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "8725:15:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "8716:25:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_bid_struct_$745_storage",
                                      "typeString": "struct pool.bid_struct storage ref"
                                    }
                                  },
                                  "id": 1350,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "size",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 742,
                                  "src": "8716:30:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "30",
                                  "id": 1351,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8749:1:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "8716:34:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1353,
                              "nodeType": "ExpressionStatement",
                              "src": "8716:34:10"
                            },
                            {
                              "expression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 1354,
                                        "name": "op",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 785,
                                        "src": "8836:2:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_option_struct_$781_storage_$dyn_storage",
                                          "typeString": "struct pool.option_struct storage ref[] storage ref"
                                        }
                                      },
                                      "id": 1356,
                                      "indexExpression": {
                                        "id": 1355,
                                        "name": "id",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 788,
                                        "src": "8839:2:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "8836:6:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_option_struct_$781_storage",
                                        "typeString": "struct pool.option_struct storage ref"
                                      }
                                    },
                                    "id": 1357,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "order",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 780,
                                    "src": "8836:12:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                      "typeString": "uint256[] storage ref"
                                    }
                                  },
                                  "id": 1358,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "pop",
                                  "nodeType": "MemberAccess",
                                  "src": "8836:16:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
                                    "typeString": "function (uint256[] storage pointer)"
                                  }
                                },
                                "id": 1359,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8836:18:10",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1360,
                              "nodeType": "ExpressionStatement",
                              "src": "8836:18:10"
                            },
                            {
                              "expression": {
                                "id": 1363,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1361,
                                  "name": "remain",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1219,
                                  "src": "8872:6:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "-=",
                                "rightHandSide": {
                                  "id": 1362,
                                  "name": "each_size",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1227,
                                  "src": "8882:9:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "8872:19:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1364,
                              "nodeType": "ExpressionStatement",
                              "src": "8872:19:10"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 1468,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "--",
                          "prefix": false,
                          "src": "9532:3:10",
                          "subExpression": {
                            "id": 1467,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1230,
                            "src": "9532:1:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1469,
                        "nodeType": "ExpressionStatement",
                        "src": "9532:3:10"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1241,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1239,
                      "name": "remain",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1219,
                      "src": "8073:6:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1240,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8082:1:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "8073:10:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1471,
                  "nodeType": "WhileStatement",
                  "src": "8066:1480:10"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1472,
                      "name": "getEthPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1991,
                      "src": "9580:11:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 1473,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9580:13:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1474,
                  "nodeType": "ExpressionStatement",
                  "src": "9580:13:10"
                },
                {
                  "expression": {
                    "id": 1490,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 1475,
                            "name": "user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 771,
                            "src": "9678:4:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_user_struct_$764_storage_$_$",
                              "typeString": "mapping(address => mapping(uint256 => struct pool.user_struct storage ref))"
                            }
                          },
                          "id": 1478,
                          "indexExpression": {
                            "id": 1476,
                            "name": "_user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1145,
                            "src": "9683:5:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9678:11:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_user_struct_$764_storage_$",
                            "typeString": "mapping(uint256 => struct pool.user_struct storage ref)"
                          }
                        },
                        "id": 1479,
                        "indexExpression": {
                          "id": 1477,
                          "name": "id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 788,
                          "src": "9690:2:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9678:15:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_user_struct_$764_storage",
                          "typeString": "struct pool.user_struct storage ref"
                        }
                      },
                      "id": 1480,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "size",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 758,
                      "src": "9678:20:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1488,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1485,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1481,
                                  "name": "sizexprice",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1223,
                                  "src": "9704:10:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1484,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 1482,
                                    "name": "seller_size",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1141,
                                    "src": "9717:11:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 1483,
                                    "name": "ethPrice",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 732,
                                    "src": "9731:8:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "9717:22:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "9704:35:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 1486,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "9703:37:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "id": 1487,
                            "name": "ethPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 732,
                            "src": "9755:8:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9703:60:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1489,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "9702:62:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9678:86:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1491,
                  "nodeType": "ExpressionStatement",
                  "src": "9678:86:10"
                },
                {
                  "expression": {
                    "id": 1500,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 1492,
                            "name": "user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 771,
                            "src": "9774:4:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_user_struct_$764_storage_$_$",
                              "typeString": "mapping(address => mapping(uint256 => struct pool.user_struct storage ref))"
                            }
                          },
                          "id": 1495,
                          "indexExpression": {
                            "id": 1493,
                            "name": "_user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1145,
                            "src": "9779:5:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9774:11:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_user_struct_$764_storage_$",
                            "typeString": "mapping(uint256 => struct pool.user_struct storage ref)"
                          }
                        },
                        "id": 1496,
                        "indexExpression": {
                          "id": 1494,
                          "name": "id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 788,
                          "src": "9786:2:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9774:15:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_user_struct_$764_storage",
                          "typeString": "struct pool.user_struct storage ref"
                        }
                      },
                      "id": 1497,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "side",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 761,
                      "src": "9774:20:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_option_side_$756",
                        "typeString": "enum pool.option_side"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1498,
                        "name": "option_side",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 756,
                        "src": "9797:11:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_option_side_$756_$",
                          "typeString": "type(enum pool.option_side)"
                        }
                      },
                      "id": 1499,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "seller",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 754,
                      "src": "9797:18:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_option_side_$756",
                        "typeString": "enum pool.option_side"
                      }
                    },
                    "src": "9774:41:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_option_side_$756",
                      "typeString": "enum pool.option_side"
                    }
                  },
                  "id": 1501,
                  "nodeType": "ExpressionStatement",
                  "src": "9774:41:10"
                }
              ]
            },
            "functionSelector": "704bba69",
            "id": 1503,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sellBid",
            "nameLocation": "7003:7:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1142,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1141,
                  "mutability": "mutable",
                  "name": "seller_size",
                  "nameLocation": "7019:11:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1503,
                  "src": "7011:19:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1140,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7011:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7010:21:10"
            },
            "returnParameters": {
              "id": 1143,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7039:0:10"
            },
            "scope": 2167,
            "src": "6994:2828:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1637,
              "nodeType": "Block",
              "src": "9939:962:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1517,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "expression": {
                              "baseExpression": {
                                "id": 1511,
                                "name": "op",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 785,
                                "src": "10037:2:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_option_struct_$781_storage_$dyn_storage",
                                  "typeString": "struct pool.option_struct storage ref[] storage ref"
                                }
                              },
                              "id": 1513,
                              "indexExpression": {
                                "id": 1512,
                                "name": "id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 788,
                                "src": "10040:2:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "10037:6:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_option_struct_$781_storage",
                                "typeString": "struct pool.option_struct storage ref"
                              }
                            },
                            "id": 1514,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "order",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 780,
                            "src": "10037:12:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                              "typeString": "uint256[] storage ref"
                            }
                          },
                          "id": 1515,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "10037:19:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1516,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10059:1:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "10037:23:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "63616e6e6f742073656c6c206966207468657265206973206e6f20626964",
                        "id": 1518,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10062:32:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9eb86f1d50c8a1793e36ece3970d794f67eade8ca914fd6c50a0c139bfd016f9",
                          "typeString": "literal_string \"cannot sell if there is no bid\""
                        },
                        "value": "cannot sell if there is no bid"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9eb86f1d50c8a1793e36ece3970d794f67eade8ca914fd6c50a0c139bfd016f9",
                          "typeString": "literal_string \"cannot sell if there is no bid\""
                        }
                      ],
                      "id": 1510,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10029:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1519,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10029:66:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1520,
                  "nodeType": "ExpressionStatement",
                  "src": "10029:66:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1524,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1522,
                          "name": "seller_size",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1505,
                          "src": "10113:11:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 1523,
                          "name": "MIN_SELLER_SIZE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 716,
                          "src": "10128:15:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10113:30:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6d696e2073697a65203d2031303030",
                        "id": 1525,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10145:17:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_19d259886c9cc4063bf752442182057e495c32b80e7840c2bccbd3951a60423b",
                          "typeString": "literal_string \"min size = 1000\""
                        },
                        "value": "min size = 1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_19d259886c9cc4063bf752442182057e495c32b80e7840c2bccbd3951a60423b",
                          "typeString": "literal_string \"min size = 1000\""
                        }
                      ],
                      "id": 1521,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10105:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1526,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10105:58:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1527,
                  "nodeType": "ExpressionStatement",
                  "src": "10105:58:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1534,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1529,
                          "name": "seller_size",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1505,
                          "src": "10181:11:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 1530,
                              "name": "op",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 785,
                              "src": "10196:2:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_option_struct_$781_storage_$dyn_storage",
                                "typeString": "struct pool.option_struct storage ref[] storage ref"
                              }
                            },
                            "id": 1532,
                            "indexExpression": {
                              "id": 1531,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 788,
                              "src": "10199:2:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "10196:6:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_option_struct_$781_storage",
                              "typeString": "struct pool.option_struct storage ref"
                            }
                          },
                          "id": 1533,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "supply",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 777,
                          "src": "10196:13:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10181:28:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6c6f7720737570706c79",
                        "id": 1535,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10211:12:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1e39c56b71db86bfbc127de5d669246e238d35d1c812464adc208a4d9b9eb3c8",
                          "typeString": "literal_string \"low supply\""
                        },
                        "value": "low supply"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1e39c56b71db86bfbc127de5d669246e238d35d1c812464adc208a4d9b9eb3c8",
                          "typeString": "literal_string \"low supply\""
                        }
                      ],
                      "id": 1528,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10173:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1536,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10173:51:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1537,
                  "nodeType": "ExpressionStatement",
                  "src": "10173:51:10"
                },
                {
                  "assignments": [
                    1539
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1539,
                      "mutability": "mutable",
                      "name": "remain",
                      "nameLocation": "10242:6:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1637,
                      "src": "10234:14:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1538,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10234:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1541,
                  "initialValue": {
                    "id": 1540,
                    "name": "seller_size",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1505,
                    "src": "10251:11:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10234:28:10"
                },
                {
                  "assignments": [
                    1543
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1543,
                      "mutability": "mutable",
                      "name": "sizexprice",
                      "nameLocation": "10280:10:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1637,
                      "src": "10272:18:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1542,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10272:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1545,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 1544,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "10293:1:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10272:22:10"
                },
                {
                  "assignments": [
                    1547
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1547,
                      "mutability": "mutable",
                      "name": "each_bid_amount",
                      "nameLocation": "10312:15:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1637,
                      "src": "10304:23:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1546,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10304:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1548,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10304:23:10"
                },
                {
                  "assignments": [
                    1550
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1550,
                      "mutability": "mutable",
                      "name": "i",
                      "nameLocation": "10345:1:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1637,
                      "src": "10337:9:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1549,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10337:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1558,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1557,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "expression": {
                          "baseExpression": {
                            "id": 1551,
                            "name": "op",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 785,
                            "src": "10349:2:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_option_struct_$781_storage_$dyn_storage",
                              "typeString": "struct pool.option_struct storage ref[] storage ref"
                            }
                          },
                          "id": 1553,
                          "indexExpression": {
                            "id": 1552,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 788,
                            "src": "10352:2:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "10349:6:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_option_struct_$781_storage",
                            "typeString": "struct pool.option_struct storage ref"
                          }
                        },
                        "id": 1554,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "order",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 780,
                        "src": "10349:12:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 1555,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "10349:19:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 1556,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10371:1:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "10349:23:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10337:35:10"
                },
                {
                  "body": {
                    "id": 1627,
                    "nodeType": "Block",
                    "src": "10401:418:10",
                    "statements": [
                      {
                        "expression": {
                          "id": 1574,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1562,
                            "name": "each_bid_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1547,
                            "src": "10415:15:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "baseExpression": {
                                "baseExpression": {
                                  "id": 1563,
                                  "name": "bids",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 751,
                                  "src": "10433:4:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_bid_struct_$745_storage_$dyn_storage_$",
                                    "typeString": "mapping(uint256 => struct pool.bid_struct storage ref[] storage ref)"
                                  }
                                },
                                "id": 1565,
                                "indexExpression": {
                                  "id": 1564,
                                  "name": "id",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 788,
                                  "src": "10438:2:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "10433:8:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_bid_struct_$745_storage_$dyn_storage",
                                  "typeString": "struct pool.bid_struct storage ref[] storage ref"
                                }
                              },
                              "id": 1572,
                              "indexExpression": {
                                "baseExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 1566,
                                      "name": "op",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 785,
                                      "src": "10442:2:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_option_struct_$781_storage_$dyn_storage",
                                        "typeString": "struct pool.option_struct storage ref[] storage ref"
                                      }
                                    },
                                    "id": 1568,
                                    "indexExpression": {
                                      "id": 1567,
                                      "name": "id",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 788,
                                      "src": "10445:2:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "10442:6:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_option_struct_$781_storage",
                                      "typeString": "struct pool.option_struct storage ref"
                                    }
                                  },
                                  "id": 1569,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "order",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 780,
                                  "src": "10442:12:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                    "typeString": "uint256[] storage ref"
                                  }
                                },
                                "id": 1571,
                                "indexExpression": {
                                  "id": 1570,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1550,
                                  "src": "10455:1:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "10442:15:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "10433:25:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_bid_struct_$745_storage",
                                "typeString": "struct pool.bid_struct storage ref"
                              }
                            },
                            "id": 1573,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "size",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 742,
                            "src": "10433:30:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10415:48:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1575,
                        "nodeType": "ExpressionStatement",
                        "src": "10415:48:10"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1578,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1576,
                            "name": "remain",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1539,
                            "src": "10481:6:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "id": 1577,
                            "name": "each_bid_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1547,
                            "src": "10491:15:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10481:25:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 1622,
                          "nodeType": "Block",
                          "src": "10675:117:10",
                          "statements": [
                            {
                              "expression": {
                                "id": 1616,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1601,
                                  "name": "sizexprice",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1543,
                                  "src": "10693:10:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1614,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 1602,
                                        "name": "remain",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1539,
                                        "src": "10708:6:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "*",
                                      "rightExpression": {
                                        "expression": {
                                          "baseExpression": {
                                            "baseExpression": {
                                              "id": 1603,
                                              "name": "bids",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 751,
                                              "src": "10717:4:10",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_bid_struct_$745_storage_$dyn_storage_$",
                                                "typeString": "mapping(uint256 => struct pool.bid_struct storage ref[] storage ref)"
                                              }
                                            },
                                            "id": 1605,
                                            "indexExpression": {
                                              "id": 1604,
                                              "name": "id",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 788,
                                              "src": "10722:2:10",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "10717:8:10",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_struct$_bid_struct_$745_storage_$dyn_storage",
                                              "typeString": "struct pool.bid_struct storage ref[] storage ref"
                                            }
                                          },
                                          "id": 1612,
                                          "indexExpression": {
                                            "baseExpression": {
                                              "expression": {
                                                "baseExpression": {
                                                  "id": 1606,
                                                  "name": "op",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 785,
                                                  "src": "10726:2:10",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_array$_t_struct$_option_struct_$781_storage_$dyn_storage",
                                                    "typeString": "struct pool.option_struct storage ref[] storage ref"
                                                  }
                                                },
                                                "id": 1608,
                                                "indexExpression": {
                                                  "id": 1607,
                                                  "name": "id",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 788,
                                                  "src": "10729:2:10",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "IndexAccess",
                                                "src": "10726:6:10",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_struct$_option_struct_$781_storage",
                                                  "typeString": "struct pool.option_struct storage ref"
                                                }
                                              },
                                              "id": 1609,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "order",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 780,
                                              "src": "10726:12:10",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                                "typeString": "uint256[] storage ref"
                                              }
                                            },
                                            "id": 1611,
                                            "indexExpression": {
                                              "id": 1610,
                                              "name": "i",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1550,
                                              "src": "10739:1:10",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "10726:15:10",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "10717:25:10",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_bid_struct_$745_storage",
                                            "typeString": "struct pool.bid_struct storage ref"
                                          }
                                        },
                                        "id": 1613,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "price",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 740,
                                        "src": "10717:31:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "10708:40:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 1615,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "10707:42:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "10693:56:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1617,
                              "nodeType": "ExpressionStatement",
                              "src": "10693:56:10"
                            },
                            {
                              "expression": {
                                "id": 1620,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1618,
                                  "name": "remain",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1539,
                                  "src": "10767:6:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "30",
                                  "id": 1619,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "10776:1:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "10767:10:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1621,
                              "nodeType": "ExpressionStatement",
                              "src": "10767:10:10"
                            }
                          ]
                        },
                        "id": 1623,
                        "nodeType": "IfStatement",
                        "src": "10477:315:10",
                        "trueBody": {
                          "id": 1600,
                          "nodeType": "Block",
                          "src": "10508:161:10",
                          "statements": [
                            {
                              "expression": {
                                "id": 1594,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1579,
                                  "name": "sizexprice",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1543,
                                  "src": "10526:10:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1592,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 1580,
                                        "name": "each_bid_amount",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1547,
                                        "src": "10541:15:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "*",
                                      "rightExpression": {
                                        "expression": {
                                          "baseExpression": {
                                            "baseExpression": {
                                              "id": 1581,
                                              "name": "bids",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 751,
                                              "src": "10579:4:10",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_bid_struct_$745_storage_$dyn_storage_$",
                                                "typeString": "mapping(uint256 => struct pool.bid_struct storage ref[] storage ref)"
                                              }
                                            },
                                            "id": 1583,
                                            "indexExpression": {
                                              "id": 1582,
                                              "name": "id",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 788,
                                              "src": "10584:2:10",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "10579:8:10",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_struct$_bid_struct_$745_storage_$dyn_storage",
                                              "typeString": "struct pool.bid_struct storage ref[] storage ref"
                                            }
                                          },
                                          "id": 1590,
                                          "indexExpression": {
                                            "baseExpression": {
                                              "expression": {
                                                "baseExpression": {
                                                  "id": 1584,
                                                  "name": "op",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 785,
                                                  "src": "10588:2:10",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_array$_t_struct$_option_struct_$781_storage_$dyn_storage",
                                                    "typeString": "struct pool.option_struct storage ref[] storage ref"
                                                  }
                                                },
                                                "id": 1586,
                                                "indexExpression": {
                                                  "id": 1585,
                                                  "name": "id",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 788,
                                                  "src": "10591:2:10",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "IndexAccess",
                                                "src": "10588:6:10",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_struct$_option_struct_$781_storage",
                                                  "typeString": "struct pool.option_struct storage ref"
                                                }
                                              },
                                              "id": 1587,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "order",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 780,
                                              "src": "10588:12:10",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                                "typeString": "uint256[] storage ref"
                                              }
                                            },
                                            "id": 1589,
                                            "indexExpression": {
                                              "id": 1588,
                                              "name": "i",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1550,
                                              "src": "10601:1:10",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "10588:15:10",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "10579:25:10",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_bid_struct_$745_storage",
                                            "typeString": "struct pool.bid_struct storage ref"
                                          }
                                        },
                                        "id": 1591,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "price",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 740,
                                        "src": "10579:31:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "10541:69:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 1593,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "10540:71:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "10526:85:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1595,
                              "nodeType": "ExpressionStatement",
                              "src": "10526:85:10"
                            },
                            {
                              "expression": {
                                "id": 1598,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1596,
                                  "name": "remain",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1539,
                                  "src": "10629:6:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "-=",
                                "rightHandSide": {
                                  "id": 1597,
                                  "name": "each_bid_amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1547,
                                  "src": "10639:15:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "10629:25:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1599,
                              "nodeType": "ExpressionStatement",
                              "src": "10629:25:10"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 1625,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "--",
                          "prefix": false,
                          "src": "10805:3:10",
                          "subExpression": {
                            "id": 1624,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1550,
                            "src": "10805:1:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1626,
                        "nodeType": "ExpressionStatement",
                        "src": "10805:3:10"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1561,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1559,
                      "name": "remain",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1539,
                      "src": "10389:6:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1560,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10398:1:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "10389:10:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1628,
                  "nodeType": "WhileStatement",
                  "src": "10382:437:10"
                },
                {
                  "expression": {
                    "id": 1633,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1629,
                      "name": "average_bid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1508,
                      "src": "10828:11:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1632,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1630,
                        "name": "sizexprice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1543,
                        "src": "10842:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "id": 1631,
                        "name": "seller_size",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1505,
                        "src": "10855:11:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "10842:24:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10828:38:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1634,
                  "nodeType": "ExpressionStatement",
                  "src": "10828:38:10"
                },
                {
                  "expression": {
                    "id": 1635,
                    "name": "average_bid",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1508,
                    "src": "10883:11:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1509,
                  "id": 1636,
                  "nodeType": "Return",
                  "src": "10876:18:10"
                }
              ]
            },
            "functionSelector": "f14e96f1",
            "id": 1638,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBestBid",
            "nameLocation": "9837:10:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1506,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1505,
                  "mutability": "mutable",
                  "name": "seller_size",
                  "nameLocation": "9856:11:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1638,
                  "src": "9848:19:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1504,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9848:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9847:21:10"
            },
            "returnParameters": {
              "id": 1509,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1508,
                  "mutability": "mutable",
                  "name": "average_bid",
                  "nameLocation": "9922:11:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1638,
                  "src": "9914:19:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1507,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9914:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9913:21:10"
            },
            "scope": 2167,
            "src": "9828:1073:10",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1816,
              "nodeType": "Block",
              "src": "10934:2125:10",
              "statements": [
                {
                  "assignments": [
                    1642
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1642,
                      "mutability": "mutable",
                      "name": "_user",
                      "nameLocation": "11011:5:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1816,
                      "src": "11003:13:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1641,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "11003:7:10",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1645,
                  "initialValue": {
                    "expression": {
                      "id": 1643,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "11019:3:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 1644,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "11019:10:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11003:26:10"
                },
                {
                  "assignments": [
                    1648
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1648,
                      "mutability": "mutable",
                      "name": "_side",
                      "nameLocation": "11051:5:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1816,
                      "src": "11039:17:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_option_side_$756",
                        "typeString": "enum pool.option_side"
                      },
                      "typeName": {
                        "id": 1647,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1646,
                          "name": "option_side",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 756,
                          "src": "11039:11:10"
                        },
                        "referencedDeclaration": 756,
                        "src": "11039:11:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_option_side_$756",
                          "typeString": "enum pool.option_side"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1655,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 1649,
                          "name": "user",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 771,
                          "src": "11059:4:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_user_struct_$764_storage_$_$",
                            "typeString": "mapping(address => mapping(uint256 => struct pool.user_struct storage ref))"
                          }
                        },
                        "id": 1651,
                        "indexExpression": {
                          "id": 1650,
                          "name": "_user",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1642,
                          "src": "11064:5:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "11059:11:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_user_struct_$764_storage_$",
                          "typeString": "mapping(uint256 => struct pool.user_struct storage ref)"
                        }
                      },
                      "id": 1653,
                      "indexExpression": {
                        "id": 1652,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 788,
                        "src": "11071:2:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "11059:15:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_user_struct_$764_storage",
                        "typeString": "struct pool.user_struct storage ref"
                      }
                    },
                    "id": 1654,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "side",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 761,
                    "src": "11059:20:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_option_side_$756",
                      "typeString": "enum pool.option_side"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11039:40:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1665,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_enum$_option_side_$756",
                            "typeString": "enum pool.option_side"
                          },
                          "id": 1660,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1657,
                            "name": "_side",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1648,
                            "src": "11110:5:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_option_side_$756",
                              "typeString": "enum pool.option_side"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 1658,
                              "name": "option_side",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 756,
                              "src": "11119:11:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_option_side_$756_$",
                                "typeString": "type(enum pool.option_side)"
                              }
                            },
                            "id": 1659,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "seller",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 754,
                            "src": "11119:18:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_option_side_$756",
                              "typeString": "enum pool.option_side"
                            }
                          },
                          "src": "11110:27:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_enum$_option_side_$756",
                            "typeString": "enum pool.option_side"
                          },
                          "id": 1664,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1661,
                            "name": "_side",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1648,
                            "src": "11141:5:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_option_side_$756",
                              "typeString": "enum pool.option_side"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 1662,
                              "name": "option_side",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 756,
                              "src": "11150:11:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_option_side_$756_$",
                                "typeString": "type(enum pool.option_side)"
                              }
                            },
                            "id": 1663,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "buyer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 753,
                            "src": "11150:17:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_option_side_$756",
                              "typeString": "enum pool.option_side"
                            }
                          },
                          "src": "11141:26:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "11110:57:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f752068617665206e6f20706f736974696f6e",
                        "id": 1666,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11181:22:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2815abfa99bc83f22011beb4241022e0ea4d2d425501cf531d329f13262d9f96",
                          "typeString": "literal_string \"You have no position\""
                        },
                        "value": "You have no position"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2815abfa99bc83f22011beb4241022e0ea4d2d425501cf531d329f13262d9f96",
                          "typeString": "literal_string \"You have no position\""
                        }
                      ],
                      "id": 1656,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11089:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1667,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11089:124:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1668,
                  "nodeType": "ExpressionStatement",
                  "src": "11089:124:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1676,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 1670,
                              "name": "op",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 785,
                              "src": "11244:2:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_option_struct_$781_storage_$dyn_storage",
                                "typeString": "struct pool.option_struct storage ref[] storage ref"
                              }
                            },
                            "id": 1672,
                            "indexExpression": {
                              "id": 1671,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 788,
                              "src": "11247:2:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "11244:6:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_option_struct_$781_storage",
                              "typeString": "struct pool.option_struct storage ref"
                            }
                          },
                          "id": 1673,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "expiry",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 775,
                          "src": "11244:13:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "expression": {
                            "id": 1674,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "11261:5:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 1675,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "11261:15:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "11244:32:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616e6e6f74206578657263697365206265666f726520657870697279",
                        "id": 1677,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11290:31:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6aa436f63088c77c5f8fd460284503e178166e53d1b7547acff0ed05a859ca06",
                          "typeString": "literal_string \"Cannot exercise before expiry\""
                        },
                        "value": "Cannot exercise before expiry"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6aa436f63088c77c5f8fd460284503e178166e53d1b7547acff0ed05a859ca06",
                          "typeString": "literal_string \"Cannot exercise before expiry\""
                        }
                      ],
                      "id": 1669,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11223:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1678,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11223:108:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1679,
                  "nodeType": "ExpressionStatement",
                  "src": "11223:108:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_option_side_$756",
                          "typeString": "enum pool.option_side"
                        },
                        "id": 1684,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1681,
                          "name": "_side",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1648,
                          "src": "11349:5:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_option_side_$756",
                            "typeString": "enum pool.option_side"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "expression": {
                            "id": 1682,
                            "name": "option_side",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 756,
                            "src": "11358:11:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_option_side_$756_$",
                              "typeString": "type(enum pool.option_side)"
                            }
                          },
                          "id": 1683,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "exercised",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 755,
                          "src": "11358:21:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_option_side_$756",
                            "typeString": "enum pool.option_side"
                          }
                        },
                        "src": "11349:30:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520616c7265616479206578636572636973656420",
                        "id": 1685,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11381:25:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e0f7b693b8b6b1766869db360bd942b50171793f17fb0d6e058903bbdd4566da",
                          "typeString": "literal_string \"You already excercised \""
                        },
                        "value": "You already excercised "
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e0f7b693b8b6b1766869db360bd942b50171793f17fb0d6e058903bbdd4566da",
                          "typeString": "literal_string \"You already excercised \""
                        }
                      ],
                      "id": 1680,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11341:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1686,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11341:66:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1687,
                  "nodeType": "ExpressionStatement",
                  "src": "11341:66:10"
                },
                {
                  "assignments": [
                    1689
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1689,
                      "mutability": "mutable",
                      "name": "_size",
                      "nameLocation": "11425:5:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1816,
                      "src": "11417:13:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1688,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11417:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1696,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 1690,
                          "name": "user",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 771,
                          "src": "11433:4:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_user_struct_$764_storage_$_$",
                            "typeString": "mapping(address => mapping(uint256 => struct pool.user_struct storage ref))"
                          }
                        },
                        "id": 1692,
                        "indexExpression": {
                          "id": 1691,
                          "name": "_user",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1642,
                          "src": "11438:5:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "11433:11:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_user_struct_$764_storage_$",
                          "typeString": "mapping(uint256 => struct pool.user_struct storage ref)"
                        }
                      },
                      "id": 1694,
                      "indexExpression": {
                        "id": 1693,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 788,
                        "src": "11445:2:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "11433:15:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_user_struct_$764_storage",
                        "typeString": "struct pool.user_struct storage ref"
                      }
                    },
                    "id": 1695,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "size",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 758,
                    "src": "11433:20:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11417:36:10"
                },
                {
                  "assignments": [
                    1698
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1698,
                      "mutability": "mutable",
                      "name": "_strike",
                      "nameLocation": "11471:7:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1816,
                      "src": "11463:15:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1697,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11463:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1703,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 1699,
                        "name": "op",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 785,
                        "src": "11481:2:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_option_struct_$781_storage_$dyn_storage",
                          "typeString": "struct pool.option_struct storage ref[] storage ref"
                        }
                      },
                      "id": 1701,
                      "indexExpression": {
                        "id": 1700,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 788,
                        "src": "11484:2:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "11481:6:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_option_struct_$781_storage",
                        "typeString": "struct pool.option_struct storage ref"
                      }
                    },
                    "id": 1702,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "strike",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 773,
                    "src": "11481:13:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11463:31:10"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_option_side_$756",
                      "typeString": "enum pool.option_side"
                    },
                    "id": 1707,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1704,
                      "name": "_side",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1648,
                      "src": "11508:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_option_side_$756",
                        "typeString": "enum pool.option_side"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 1705,
                        "name": "option_side",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 756,
                        "src": "11517:11:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_option_side_$756_$",
                          "typeString": "type(enum pool.option_side)"
                        }
                      },
                      "id": 1706,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "buyer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 753,
                      "src": "11517:17:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_option_side_$756",
                        "typeString": "enum pool.option_side"
                      }
                    },
                    "src": "11508:26:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1736,
                  "nodeType": "IfStatement",
                  "src": "11504:279:10",
                  "trueBody": {
                    "id": 1735,
                    "nodeType": "Block",
                    "src": "11536:247:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1711,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1709,
                                "name": "_size",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1689,
                                "src": "11558:5:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 1710,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "11566:1:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "11558:9:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f206f6e652073656c6c20796f75722062696420616e64206e6f7468696e6720746f20657870697265",
                              "id": 1712,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11569:44:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_66c6d8e5e1bc905cb80906ee7773fda6f00d27ff7f43232b742e6c7e82bcc7ba",
                                "typeString": "literal_string \"No one sell your bid and nothing to expire\""
                              },
                              "value": "No one sell your bid and nothing to expire"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_66c6d8e5e1bc905cb80906ee7773fda6f00d27ff7f43232b742e6c7e82bcc7ba",
                                "typeString": "literal_string \"No one sell your bid and nothing to expire\""
                              }
                            ],
                            "id": 1708,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "11550:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1713,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11550:64:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1714,
                        "nodeType": "ExpressionStatement",
                        "src": "11550:64:10"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1718,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1716,
                                "name": "ethPrice",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 732,
                                "src": "11636:8:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "id": 1717,
                                "name": "_strike",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1698,
                                "src": "11647:7:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "11636:18:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "45787069726520776f727468207a65726f",
                              "id": 1719,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11656:19:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_603f9dd538fdd3644958b10175c8a3744e209a1bd2ee0b9975dda020883a512e",
                                "typeString": "literal_string \"Expire worth zero\""
                              },
                              "value": "Expire worth zero"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_603f9dd538fdd3644958b10175c8a3744e209a1bd2ee0b9975dda020883a512e",
                                "typeString": "literal_string \"Expire worth zero\""
                              }
                            ],
                            "id": 1715,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "11628:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1720,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11628:48:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1721,
                        "nodeType": "ExpressionStatement",
                        "src": "11628:48:10"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1729,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "baseExpression": {
                                  "id": 1722,
                                  "name": "user",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 771,
                                  "src": "11694:4:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_user_struct_$764_storage_$_$",
                                    "typeString": "mapping(address => mapping(uint256 => struct pool.user_struct storage ref))"
                                  }
                                },
                                "id": 1724,
                                "indexExpression": {
                                  "id": 1723,
                                  "name": "_user",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1642,
                                  "src": "11699:5:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "11694:11:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_user_struct_$764_storage_$",
                                  "typeString": "mapping(uint256 => struct pool.user_struct storage ref)"
                                }
                              },
                              "id": 1726,
                              "indexExpression": {
                                "id": 1725,
                                "name": "id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 788,
                                "src": "11706:2:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "11694:15:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_user_struct_$764_storage",
                                "typeString": "struct pool.user_struct storage ref"
                              }
                            },
                            "id": 1727,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "unusedpremium",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 763,
                            "src": "11694:29:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1728,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11726:1:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "11694:33:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1734,
                        "nodeType": "IfStatement",
                        "src": "11690:83:10",
                        "trueBody": {
                          "id": 1733,
                          "nodeType": "Block",
                          "src": "11729:44:10",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 1730,
                                  "name": "cancelBid",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1139,
                                  "src": "11747:9:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                                    "typeString": "function ()"
                                  }
                                },
                                "id": 1731,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "11747:11:10",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1732,
                              "nodeType": "ExpressionStatement",
                              "src": "11747:11:10"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_option_side_$756",
                      "typeString": "enum pool.option_side"
                    },
                    "id": 1740,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1737,
                      "name": "_side",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1648,
                      "src": "11796:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_option_side_$756",
                        "typeString": "enum pool.option_side"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 1738,
                        "name": "option_side",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 756,
                        "src": "11805:11:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_option_side_$756_$",
                          "typeString": "type(enum pool.option_side)"
                        }
                      },
                      "id": 1739,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "seller",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 754,
                      "src": "11805:18:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_option_side_$756",
                        "typeString": "enum pool.option_side"
                      }
                    },
                    "src": "11796:27:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1804,
                    "nodeType": "Block",
                    "src": "12439:560:10",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1774,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1772,
                            "name": "ethPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 732,
                            "src": "12457:8:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 1773,
                            "name": "_strike",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1698,
                            "src": "12468:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "12457:18:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1803,
                        "nodeType": "IfStatement",
                        "src": "12453:498:10",
                        "trueBody": {
                          "id": 1802,
                          "nodeType": "Block",
                          "src": "12477:474:10",
                          "statements": [
                            {
                              "expression": {
                                "id": 1788,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 1775,
                                    "name": "cash_balance",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 738,
                                    "src": "12723:12:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                      "typeString": "mapping(address => uint256)"
                                    }
                                  },
                                  "id": 1777,
                                  "indexExpression": {
                                    "id": 1776,
                                    "name": "_user",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1642,
                                    "src": "12736:5:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "12723:19:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1786,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "components": [
                                          {
                                            "commonType": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            "id": 1783,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "id": 1778,
                                              "name": "_size",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1689,
                                              "src": "12748:5:10",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "*",
                                            "rightExpression": {
                                              "components": [
                                                {
                                                  "commonType": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  },
                                                  "id": 1781,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "leftExpression": {
                                                    "id": 1779,
                                                    "name": "_strike",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 1698,
                                                    "src": "12757:7:10",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  },
                                                  "nodeType": "BinaryOperation",
                                                  "operator": "-",
                                                  "rightExpression": {
                                                    "id": 1780,
                                                    "name": "ethPrice",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 732,
                                                    "src": "12767:8:10",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  },
                                                  "src": "12757:18:10",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                }
                                              ],
                                              "id": 1782,
                                              "isConstant": false,
                                              "isInlineArray": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "TupleExpression",
                                              "src": "12756:20:10",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "src": "12748:28:10",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "id": 1784,
                                        "isConstant": false,
                                        "isInlineArray": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "TupleExpression",
                                        "src": "12747:30:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "/",
                                      "rightExpression": {
                                        "id": 1785,
                                        "name": "_strike",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1698,
                                        "src": "12800:7:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "12747:60:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 1787,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "12746:62:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "12723:85:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1789,
                              "nodeType": "ExpressionStatement",
                              "src": "12723:85:10"
                            },
                            {
                              "expression": {
                                "id": 1800,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1790,
                                  "name": "settlement_amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 797,
                                  "src": "12876:17:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1799,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 1796,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 1791,
                                          "name": "_size",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1689,
                                          "src": "12897:5:10",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "*",
                                        "rightExpression": {
                                          "components": [
                                            {
                                              "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "id": 1794,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "id": 1792,
                                                "name": "_strike",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1698,
                                                "src": "12906:7:10",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "-",
                                              "rightExpression": {
                                                "id": 1793,
                                                "name": "ethPrice",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 732,
                                                "src": "12916:8:10",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "src": "12906:18:10",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            }
                                          ],
                                          "id": 1795,
                                          "isConstant": false,
                                          "isInlineArray": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "TupleExpression",
                                          "src": "12905:20:10",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "12897:28:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 1797,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "12896:30:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "/",
                                  "rightExpression": {
                                    "id": 1798,
                                    "name": "_strike",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1698,
                                    "src": "12929:7:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "12896:40:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "12876:60:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1801,
                              "nodeType": "ExpressionStatement",
                              "src": "12876:60:10"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "id": 1805,
                  "nodeType": "IfStatement",
                  "src": "11792:1207:10",
                  "trueBody": {
                    "id": 1771,
                    "nodeType": "Block",
                    "src": "11825:608:10",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1743,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1741,
                            "name": "ethPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 732,
                            "src": "11843:8:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 1742,
                            "name": "_strike",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1698,
                            "src": "11854:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11843:18:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 1769,
                          "nodeType": "Block",
                          "src": "12228:195:10",
                          "statements": [
                            {
                              "expression": {
                                "id": 1763,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 1759,
                                    "name": "cash_balance",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 738,
                                    "src": "12287:12:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                      "typeString": "mapping(address => uint256)"
                                    }
                                  },
                                  "id": 1761,
                                  "indexExpression": {
                                    "id": 1760,
                                    "name": "_user",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1642,
                                    "src": "12300:5:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "12287:19:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "id": 1762,
                                  "name": "_size",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1689,
                                  "src": "12310:5:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "12287:28:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1764,
                              "nodeType": "ExpressionStatement",
                              "src": "12287:28:10"
                            },
                            {
                              "expression": {
                                "id": 1767,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1765,
                                  "name": "settlement_amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 797,
                                  "src": "12383:17:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 1766,
                                  "name": "_size",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1689,
                                  "src": "12403:5:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "12383:25:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1768,
                              "nodeType": "ExpressionStatement",
                              "src": "12383:25:10"
                            }
                          ]
                        },
                        "id": 1770,
                        "nodeType": "IfStatement",
                        "src": "11839:584:10",
                        "trueBody": {
                          "id": 1758,
                          "nodeType": "Block",
                          "src": "11863:359:10",
                          "statements": [
                            {
                              "expression": {
                                "id": 1750,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 1744,
                                    "name": "cash_balance",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 738,
                                    "src": "12066:12:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                      "typeString": "mapping(address => uint256)"
                                    }
                                  },
                                  "id": 1746,
                                  "indexExpression": {
                                    "id": 1745,
                                    "name": "_user",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1642,
                                    "src": "12079:5:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "12066:19:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1749,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 1747,
                                    "name": "_size",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1689,
                                    "src": "12089:5:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "/",
                                  "rightExpression": {
                                    "id": 1748,
                                    "name": "_strike",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1698,
                                    "src": "12097:7:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "12089:15:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "12066:38:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1751,
                              "nodeType": "ExpressionStatement",
                              "src": "12066:38:10"
                            },
                            {
                              "expression": {
                                "id": 1756,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1752,
                                  "name": "settlement_amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 797,
                                  "src": "12172:17:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1755,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 1753,
                                    "name": "_size",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1689,
                                    "src": "12192:5:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "/",
                                  "rightExpression": {
                                    "id": 1754,
                                    "name": "_strike",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1698,
                                    "src": "12200:7:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "12192:15:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "12172:35:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1757,
                              "nodeType": "ExpressionStatement",
                              "src": "12172:35:10"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 1814,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 1806,
                            "name": "user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 771,
                            "src": "13008:4:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_user_struct_$764_storage_$_$",
                              "typeString": "mapping(address => mapping(uint256 => struct pool.user_struct storage ref))"
                            }
                          },
                          "id": 1809,
                          "indexExpression": {
                            "id": 1807,
                            "name": "_user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1642,
                            "src": "13013:5:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "13008:11:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_user_struct_$764_storage_$",
                            "typeString": "mapping(uint256 => struct pool.user_struct storage ref)"
                          }
                        },
                        "id": 1810,
                        "indexExpression": {
                          "id": 1808,
                          "name": "id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 788,
                          "src": "13020:2:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "13008:15:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_user_struct_$764_storage",
                          "typeString": "struct pool.user_struct storage ref"
                        }
                      },
                      "id": 1811,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "side",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 761,
                      "src": "13008:20:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_option_side_$756",
                        "typeString": "enum pool.option_side"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1812,
                        "name": "option_side",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 756,
                        "src": "13031:11:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_option_side_$756_$",
                          "typeString": "type(enum pool.option_side)"
                        }
                      },
                      "id": 1813,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "exercised",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 755,
                      "src": "13031:21:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_option_side_$756",
                        "typeString": "enum pool.option_side"
                      }
                    },
                    "src": "13008:44:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_option_side_$756",
                      "typeString": "enum pool.option_side"
                    }
                  },
                  "id": 1815,
                  "nodeType": "ExpressionStatement",
                  "src": "13008:44:10"
                }
              ]
            },
            "functionSelector": "d32cb0fe",
            "id": 1817,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "exercise",
            "nameLocation": "10916:8:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1639,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10924:2:10"
            },
            "returnParameters": {
              "id": 1640,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10934:0:10"
            },
            "scope": 2167,
            "src": "10907:2152:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1982,
              "nodeType": "Block",
              "src": "13109:1411:10",
              "statements": [
                {
                  "assignments": [
                    1823
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1823,
                      "mutability": "mutable",
                      "name": "left",
                      "nameLocation": "13223:4:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1982,
                      "src": "13215:12:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1822,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "13215:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1825,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 1824,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "13230:1:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13215:16:10"
                },
                {
                  "assignments": [
                    1827
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1827,
                      "mutability": "mutable",
                      "name": "right",
                      "nameLocation": "13249:5:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1982,
                      "src": "13241:13:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1826,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "13241:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1835,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1834,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "expression": {
                          "baseExpression": {
                            "id": 1828,
                            "name": "op",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 785,
                            "src": "13257:2:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_option_struct_$781_storage_$dyn_storage",
                              "typeString": "struct pool.option_struct storage ref[] storage ref"
                            }
                          },
                          "id": 1830,
                          "indexExpression": {
                            "id": 1829,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 788,
                            "src": "13260:2:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "13257:6:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_option_struct_$781_storage",
                            "typeString": "struct pool.option_struct storage ref"
                          }
                        },
                        "id": 1831,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "order",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 780,
                        "src": "13257:12:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 1832,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "13257:19:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 1833,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "13279:1:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "13257:23:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13241:39:10"
                },
                {
                  "assignments": [
                    1837
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1837,
                      "mutability": "mutable",
                      "name": "mid",
                      "nameLocation": "13298:3:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1982,
                      "src": "13290:11:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1836,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "13290:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1838,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13290:11:10"
                },
                {
                  "body": {
                    "id": 1877,
                    "nodeType": "Block",
                    "src": "13363:207:10",
                    "statements": [
                      {
                        "expression": {
                          "id": 1849,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1842,
                            "name": "mid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1837,
                            "src": "13377:3:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1848,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1845,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 1843,
                                    "name": "left",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1823,
                                    "src": "13384:4:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "+",
                                  "rightExpression": {
                                    "id": 1844,
                                    "name": "right",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1827,
                                    "src": "13391:5:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "13384:12:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 1846,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "13383:14:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "hexValue": "32",
                              "id": 1847,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13400:1:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            },
                            "src": "13383:18:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "13377:24:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1850,
                        "nodeType": "ExpressionStatement",
                        "src": "13377:24:10"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1863,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1851,
                            "name": "newbid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1819,
                            "src": "13419:6:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "expression": {
                              "baseExpression": {
                                "baseExpression": {
                                  "id": 1852,
                                  "name": "bids",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 751,
                                  "src": "13428:4:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_bid_struct_$745_storage_$dyn_storage_$",
                                    "typeString": "mapping(uint256 => struct pool.bid_struct storage ref[] storage ref)"
                                  }
                                },
                                "id": 1854,
                                "indexExpression": {
                                  "id": 1853,
                                  "name": "id",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 788,
                                  "src": "13433:2:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "13428:8:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_bid_struct_$745_storage_$dyn_storage",
                                  "typeString": "struct pool.bid_struct storage ref[] storage ref"
                                }
                              },
                              "id": 1861,
                              "indexExpression": {
                                "baseExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 1855,
                                      "name": "op",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 785,
                                      "src": "13437:2:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_option_struct_$781_storage_$dyn_storage",
                                        "typeString": "struct pool.option_struct storage ref[] storage ref"
                                      }
                                    },
                                    "id": 1857,
                                    "indexExpression": {
                                      "id": 1856,
                                      "name": "id",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 788,
                                      "src": "13440:2:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "13437:6:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_option_struct_$781_storage",
                                      "typeString": "struct pool.option_struct storage ref"
                                    }
                                  },
                                  "id": 1858,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "order",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 780,
                                  "src": "13437:12:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                    "typeString": "uint256[] storage ref"
                                  }
                                },
                                "id": 1860,
                                "indexExpression": {
                                  "id": 1859,
                                  "name": "mid",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1837,
                                  "src": "13450:3:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "13437:17:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "13428:27:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_bid_struct_$745_storage",
                                "typeString": "struct pool.bid_struct storage ref"
                              }
                            },
                            "id": 1862,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "price",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 740,
                            "src": "13428:33:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "13419:42:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 1875,
                          "nodeType": "Block",
                          "src": "13516:44:10",
                          "statements": [
                            {
                              "expression": {
                                "id": 1873,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1871,
                                  "name": "right",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1827,
                                  "src": "13534:5:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 1872,
                                  "name": "mid",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1837,
                                  "src": "13542:3:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "13534:11:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1874,
                              "nodeType": "ExpressionStatement",
                              "src": "13534:11:10"
                            }
                          ]
                        },
                        "id": 1876,
                        "nodeType": "IfStatement",
                        "src": "13415:145:10",
                        "trueBody": {
                          "id": 1870,
                          "nodeType": "Block",
                          "src": "13463:47:10",
                          "statements": [
                            {
                              "expression": {
                                "id": 1868,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1864,
                                  "name": "left",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1823,
                                  "src": "13481:4:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1867,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 1865,
                                    "name": "mid",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1837,
                                    "src": "13488:3:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "+",
                                  "rightExpression": {
                                    "hexValue": "31",
                                    "id": 1866,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "13494:1:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  },
                                  "src": "13488:7:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "13481:14:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1869,
                              "nodeType": "ExpressionStatement",
                              "src": "13481:14:10"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1841,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1839,
                      "name": "left",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1823,
                      "src": "13349:4:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 1840,
                      "name": "right",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1827,
                      "src": "13356:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13349:12:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1878,
                  "nodeType": "WhileStatement",
                  "src": "13342:228:10"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1881,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1879,
                      "name": "left",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1823,
                      "src": "13737:4:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 1880,
                      "name": "right",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1827,
                      "src": "13745:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13737:13:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1909,
                  "nodeType": "IfStatement",
                  "src": "13733:188:10",
                  "trueBody": {
                    "id": 1908,
                    "nodeType": "Block",
                    "src": "13752:169:10",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1894,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1882,
                            "name": "newbid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1819,
                            "src": "13770:6:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "expression": {
                              "baseExpression": {
                                "baseExpression": {
                                  "id": 1883,
                                  "name": "bids",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 751,
                                  "src": "13779:4:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_bid_struct_$745_storage_$dyn_storage_$",
                                    "typeString": "mapping(uint256 => struct pool.bid_struct storage ref[] storage ref)"
                                  }
                                },
                                "id": 1885,
                                "indexExpression": {
                                  "id": 1884,
                                  "name": "id",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 788,
                                  "src": "13784:2:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "13779:8:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_bid_struct_$745_storage_$dyn_storage",
                                  "typeString": "struct pool.bid_struct storage ref[] storage ref"
                                }
                              },
                              "id": 1892,
                              "indexExpression": {
                                "baseExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 1886,
                                      "name": "op",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 785,
                                      "src": "13788:2:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_option_struct_$781_storage_$dyn_storage",
                                        "typeString": "struct pool.option_struct storage ref[] storage ref"
                                      }
                                    },
                                    "id": 1888,
                                    "indexExpression": {
                                      "id": 1887,
                                      "name": "id",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 788,
                                      "src": "13791:2:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "13788:6:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_option_struct_$781_storage",
                                      "typeString": "struct pool.option_struct storage ref"
                                    }
                                  },
                                  "id": 1889,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "order",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 780,
                                  "src": "13788:12:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                    "typeString": "uint256[] storage ref"
                                  }
                                },
                                "id": 1891,
                                "indexExpression": {
                                  "id": 1890,
                                  "name": "left",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1823,
                                  "src": "13801:4:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "13788:18:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "13779:28:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_bid_struct_$745_storage",
                                "typeString": "struct pool.bid_struct storage ref"
                              }
                            },
                            "id": 1893,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "price",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 740,
                            "src": "13779:34:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "13770:43:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 1906,
                          "nodeType": "Block",
                          "src": "13868:43:10",
                          "statements": [
                            {
                              "expression": {
                                "id": 1904,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1902,
                                  "name": "mid",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1837,
                                  "src": "13886:3:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 1903,
                                  "name": "left",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1823,
                                  "src": "13892:4:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "13886:10:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1905,
                              "nodeType": "ExpressionStatement",
                              "src": "13886:10:10"
                            }
                          ]
                        },
                        "id": 1907,
                        "nodeType": "IfStatement",
                        "src": "13766:145:10",
                        "trueBody": {
                          "id": 1901,
                          "nodeType": "Block",
                          "src": "13815:47:10",
                          "statements": [
                            {
                              "expression": {
                                "id": 1899,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1895,
                                  "name": "mid",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1837,
                                  "src": "13833:3:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1898,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 1896,
                                    "name": "left",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1823,
                                    "src": "13839:4:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "+",
                                  "rightExpression": {
                                    "hexValue": "31",
                                    "id": 1897,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "13846:1:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  },
                                  "src": "13839:8:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "13833:14:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1900,
                              "nodeType": "ExpressionStatement",
                              "src": "13833:14:10"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1920,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 1915,
                              "name": "bids",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 751,
                              "src": "14031:4:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_bid_struct_$745_storage_$dyn_storage_$",
                                "typeString": "mapping(uint256 => struct pool.bid_struct storage ref[] storage ref)"
                              }
                            },
                            "id": 1917,
                            "indexExpression": {
                              "id": 1916,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 788,
                              "src": "14036:2:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "14031:8:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_bid_struct_$745_storage_$dyn_storage",
                              "typeString": "struct pool.bid_struct storage ref[] storage ref"
                            }
                          },
                          "id": 1918,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "14031:15:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 1919,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "14049:1:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "14031:19:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "baseExpression": {
                            "id": 1910,
                            "name": "op",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 785,
                            "src": "14013:2:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_option_struct_$781_storage_$dyn_storage",
                              "typeString": "struct pool.option_struct storage ref[] storage ref"
                            }
                          },
                          "id": 1912,
                          "indexExpression": {
                            "id": 1911,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 788,
                            "src": "14016:2:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "14013:6:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_option_struct_$781_storage",
                            "typeString": "struct pool.option_struct storage ref"
                          }
                        },
                        "id": 1913,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "order",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 780,
                        "src": "14013:12:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 1914,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "14013:17:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
                        "typeString": "function (uint256[] storage pointer,uint256)"
                      }
                    },
                    "id": 1921,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14013:38:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1922,
                  "nodeType": "ExpressionStatement",
                  "src": "14013:38:10"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1931,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1923,
                      "name": "mid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1837,
                      "src": "14065:3:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1930,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "expression": {
                            "baseExpression": {
                              "id": 1924,
                              "name": "op",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 785,
                              "src": "14071:2:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_option_struct_$781_storage_$dyn_storage",
                                "typeString": "struct pool.option_struct storage ref[] storage ref"
                              }
                            },
                            "id": 1926,
                            "indexExpression": {
                              "id": 1925,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 788,
                              "src": "14074:2:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "14071:6:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_option_struct_$781_storage",
                              "typeString": "struct pool.option_struct storage ref"
                            }
                          },
                          "id": 1927,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "order",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 780,
                          "src": "14071:12:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                            "typeString": "uint256[] storage ref"
                          }
                        },
                        "id": 1928,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "14071:19:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 1929,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14093:1:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "14071:23:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "14065:29:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1981,
                  "nodeType": "IfStatement",
                  "src": "14061:353:10",
                  "trueBody": {
                    "id": 1980,
                    "nodeType": "Block",
                    "src": "14096:318:10",
                    "statements": [
                      {
                        "body": {
                          "id": 1964,
                          "nodeType": "Block",
                          "src": "14166:130:10",
                          "statements": [
                            {
                              "expression": {
                                "id": 1962,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 1948,
                                        "name": "op",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 785,
                                        "src": "14244:2:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_option_struct_$781_storage_$dyn_storage",
                                          "typeString": "struct pool.option_struct storage ref[] storage ref"
                                        }
                                      },
                                      "id": 1950,
                                      "indexExpression": {
                                        "id": 1949,
                                        "name": "id",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 788,
                                        "src": "14247:2:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "14244:6:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_option_struct_$781_storage",
                                        "typeString": "struct pool.option_struct storage ref"
                                      }
                                    },
                                    "id": 1951,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "order",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 780,
                                    "src": "14244:12:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                      "typeString": "uint256[] storage ref"
                                    }
                                  },
                                  "id": 1953,
                                  "indexExpression": {
                                    "id": 1952,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1933,
                                    "src": "14257:1:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "14244:15:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "baseExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 1954,
                                        "name": "op",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 785,
                                        "src": "14262:2:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_option_struct_$781_storage_$dyn_storage",
                                          "typeString": "struct pool.option_struct storage ref[] storage ref"
                                        }
                                      },
                                      "id": 1956,
                                      "indexExpression": {
                                        "id": 1955,
                                        "name": "id",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 788,
                                        "src": "14265:2:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "14262:6:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_option_struct_$781_storage",
                                        "typeString": "struct pool.option_struct storage ref"
                                      }
                                    },
                                    "id": 1957,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "order",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 780,
                                    "src": "14262:12:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                      "typeString": "uint256[] storage ref"
                                    }
                                  },
                                  "id": 1961,
                                  "indexExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 1960,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 1958,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1933,
                                      "src": "14275:1:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "hexValue": "31",
                                      "id": 1959,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "14279:1:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    },
                                    "src": "14275:5:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "14262:19:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "14244:37:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1963,
                              "nodeType": "ExpressionStatement",
                              "src": "14244:37:10"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1944,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1942,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1933,
                            "src": "14152:1:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "id": 1943,
                            "name": "mid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1837,
                            "src": "14156:3:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "14152:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1965,
                        "initializationExpression": {
                          "assignments": [
                            1933
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 1933,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "14123:1:10",
                              "nodeType": "VariableDeclaration",
                              "scope": 1965,
                              "src": "14115:9:10",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 1932,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "14115:7:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 1941,
                          "initialValue": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1940,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 1934,
                                    "name": "op",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 785,
                                    "src": "14127:2:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_option_struct_$781_storage_$dyn_storage",
                                      "typeString": "struct pool.option_struct storage ref[] storage ref"
                                    }
                                  },
                                  "id": 1936,
                                  "indexExpression": {
                                    "id": 1935,
                                    "name": "id",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 788,
                                    "src": "14130:2:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "14127:6:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_option_struct_$781_storage",
                                    "typeString": "struct pool.option_struct storage ref"
                                  }
                                },
                                "id": 1937,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "order",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 780,
                                "src": "14127:12:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                  "typeString": "uint256[] storage ref"
                                }
                              },
                              "id": 1938,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "14127:19:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 1939,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14149:1:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "14127:23:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "14115:35:10"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 1946,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "--",
                            "prefix": false,
                            "src": "14161:3:10",
                            "subExpression": {
                              "id": 1945,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1933,
                              "src": "14161:1:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1947,
                          "nodeType": "ExpressionStatement",
                          "src": "14161:3:10"
                        },
                        "nodeType": "ForStatement",
                        "src": "14110:186:10"
                      },
                      {
                        "expression": {
                          "id": 1978,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 1966,
                                  "name": "op",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 785,
                                  "src": "14364:2:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_option_struct_$781_storage_$dyn_storage",
                                    "typeString": "struct pool.option_struct storage ref[] storage ref"
                                  }
                                },
                                "id": 1968,
                                "indexExpression": {
                                  "id": 1967,
                                  "name": "id",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 788,
                                  "src": "14367:2:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "14364:6:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_option_struct_$781_storage",
                                  "typeString": "struct pool.option_struct storage ref"
                                }
                              },
                              "id": 1969,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "order",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 780,
                              "src": "14364:12:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                "typeString": "uint256[] storage ref"
                              }
                            },
                            "id": 1971,
                            "indexExpression": {
                              "id": 1970,
                              "name": "mid",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1837,
                              "src": "14377:3:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "14364:17:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1977,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 1972,
                                  "name": "bids",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 751,
                                  "src": "14384:4:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_bid_struct_$745_storage_$dyn_storage_$",
                                    "typeString": "mapping(uint256 => struct pool.bid_struct storage ref[] storage ref)"
                                  }
                                },
                                "id": 1974,
                                "indexExpression": {
                                  "id": 1973,
                                  "name": "id",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 788,
                                  "src": "14389:2:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "14384:8:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_bid_struct_$745_storage_$dyn_storage",
                                  "typeString": "struct pool.bid_struct storage ref[] storage ref"
                                }
                              },
                              "id": 1975,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "14384:15:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 1976,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14402:1:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "14384:19:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "14364:39:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1979,
                        "nodeType": "ExpressionStatement",
                        "src": "14364:39:10"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 1983,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "insertBid",
            "nameLocation": "13074:9:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1820,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1819,
                  "mutability": "mutable",
                  "name": "newbid",
                  "nameLocation": "13092:6:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1983,
                  "src": "13084:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1818,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13084:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13083:16:10"
            },
            "returnParameters": {
              "id": 1821,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13109:0:10"
            },
            "scope": 2167,
            "src": "13065:1455:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1990,
              "nodeType": "Block",
              "src": "14591:620:10",
              "statements": [
                {
                  "expression": {
                    "id": 1988,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1986,
                      "name": "ethPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 732,
                      "src": "15189:8:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "33373939",
                      "id": 1987,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "15200:4:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_3799_by_1",
                        "typeString": "int_const 3799"
                      },
                      "value": "3799"
                    },
                    "src": "15189:15:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1989,
                  "nodeType": "ExpressionStatement",
                  "src": "15189:15:10"
                }
              ]
            },
            "functionSelector": "67c9b017",
            "id": 1991,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getEthPrice",
            "nameLocation": "14570:11:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1984,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14581:2:10"
            },
            "returnParameters": {
              "id": 1985,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14591:0:10"
            },
            "scope": 2167,
            "src": "14561:650:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2010,
              "nodeType": "Block",
              "src": "15251:120:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1998,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1995,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "15269:3:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1996,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "15269:9:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 1997,
                          "name": "MIN_DEPOSIT_SIZE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 719,
                          "src": "15282:16:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "15269:29:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d696e2073697a65203d20353030",
                        "id": 1999,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15300:16:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f93bd65ca17426d87733c7236f11afc7892da074548bde6a2b76078b72cb5f71",
                          "typeString": "literal_string \"Min size = 500\""
                        },
                        "value": "Min size = 500"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f93bd65ca17426d87733c7236f11afc7892da074548bde6a2b76078b72cb5f71",
                          "typeString": "literal_string \"Min size = 500\""
                        }
                      ],
                      "id": 1994,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "15261:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2000,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15261:56:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2001,
                  "nodeType": "ExpressionStatement",
                  "src": "15261:56:10"
                },
                {
                  "expression": {
                    "id": 2008,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2002,
                        "name": "cash_balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 738,
                        "src": "15327:12:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 2005,
                      "indexExpression": {
                        "expression": {
                          "id": 2003,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "15340:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2004,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "15340:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "15327:24:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "expression": {
                        "id": 2006,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "15355:3:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 2007,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "15355:9:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "15327:37:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2009,
                  "nodeType": "ExpressionStatement",
                  "src": "15327:37:10"
                }
              ]
            },
            "functionSelector": "d0e30db0",
            "id": 2011,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nameLocation": "15226:7:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1992,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15233:2:10"
            },
            "returnParameters": {
              "id": 1993,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15251:0:10"
            },
            "scope": 2167,
            "src": "15217:154:10",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2020,
              "nodeType": "Block",
              "src": "15430:50:10",
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "expression": {
                          "id": 2016,
                          "name": "contract_address",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 734,
                          "src": "15448:16:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 2017,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "15448:24:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 2018,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "15447:26:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2015,
                  "id": 2019,
                  "nodeType": "Return",
                  "src": "15440:33:10"
                }
              ]
            },
            "functionSelector": "1be0819c",
            "id": 2021,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "PoolBalance",
            "nameLocation": "15386:11:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2012,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15397:2:10"
            },
            "returnParameters": {
              "id": 2015,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2014,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2021,
                  "src": "15421:7:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2013,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15421:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15420:9:10"
            },
            "scope": 2167,
            "src": "15377:103:10",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2032,
              "nodeType": "Block",
              "src": "15545:36:10",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 2027,
                        "name": "op",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 785,
                        "src": "15562:2:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_option_struct_$781_storage_$dyn_storage",
                          "typeString": "struct pool.option_struct storage ref[] storage ref"
                        }
                      },
                      "id": 2029,
                      "indexExpression": {
                        "id": 2028,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 788,
                        "src": "15565:2:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "15562:6:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_option_struct_$781_storage",
                        "typeString": "struct pool.option_struct storage ref"
                      }
                    },
                    "id": 2030,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "order",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 780,
                    "src": "15562:12:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                      "typeString": "uint256[] storage ref"
                    }
                  },
                  "functionReturnParameters": 2026,
                  "id": 2031,
                  "nodeType": "Return",
                  "src": "15555:19:10"
                }
              ]
            },
            "functionSelector": "d36dedd2",
            "id": 2033,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getOrder",
            "nameLocation": "15495:8:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2022,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15503:2:10"
            },
            "returnParameters": {
              "id": 2026,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2025,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2033,
                  "src": "15527:16:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2023,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "15527:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2024,
                    "nodeType": "ArrayTypeName",
                    "src": "15527:9:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15526:18:10"
            },
            "scope": 2167,
            "src": "15486:95:10",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2043,
              "nodeType": "Block",
              "src": "15640:48:10",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 2038,
                      "name": "cash_balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 738,
                      "src": "15657:12:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 2041,
                    "indexExpression": {
                      "expression": {
                        "id": 2039,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "15670:3:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 2040,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "15670:10:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "15657:24:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2037,
                  "id": 2042,
                  "nodeType": "Return",
                  "src": "15650:31:10"
                }
              ]
            },
            "functionSelector": "bf152765",
            "id": 2044,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "userBalance",
            "nameLocation": "15596:11:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2034,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15607:2:10"
            },
            "returnParameters": {
              "id": 2037,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2036,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2044,
                  "src": "15631:7:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2035,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15631:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15630:9:10"
            },
            "scope": 2167,
            "src": "15587:101:10",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2058,
              "nodeType": "Block",
              "src": "15750:57:10",
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2055,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 2049,
                              "name": "op",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 785,
                              "src": "15768:2:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_option_struct_$781_storage_$dyn_storage",
                                "typeString": "struct pool.option_struct storage ref[] storage ref"
                              }
                            },
                            "id": 2051,
                            "indexExpression": {
                              "id": 2050,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 788,
                              "src": "15771:2:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "15768:6:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_option_struct_$781_storage",
                              "typeString": "struct pool.option_struct storage ref"
                            }
                          },
                          "id": 2052,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "expiry",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 775,
                          "src": "15768:13:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "expression": {
                            "id": 2053,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "15784:5:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 2054,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "15784:15:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "15768:31:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 2056,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "15767:33:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2048,
                  "id": 2057,
                  "nodeType": "Return",
                  "src": "15760:40:10"
                }
              ]
            },
            "functionSelector": "7e7f320d",
            "id": 2059,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "SecondToExpiry",
            "nameLocation": "15703:14:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2045,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15717:2:10"
            },
            "returnParameters": {
              "id": 2048,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2047,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2059,
                  "src": "15741:7:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2046,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15741:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15740:9:10"
            },
            "scope": 2167,
            "src": "15694:113:10",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2068,
              "nodeType": "Block",
              "src": "15854:32:10",
              "statements": [
                {
                  "expression": {
                    "id": 2066,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2064,
                      "name": "ethPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 732,
                      "src": "15864:8:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2065,
                      "name": "_eth",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2061,
                      "src": "15875:4:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "15864:15:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2067,
                  "nodeType": "ExpressionStatement",
                  "src": "15864:15:10"
                }
              ]
            },
            "functionSelector": "16ed0f72",
            "id": 2069,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setFakeETH",
            "nameLocation": "15822:10:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2062,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2061,
                  "mutability": "mutable",
                  "name": "_eth",
                  "nameLocation": "15841:4:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 2069,
                  "src": "15833:12:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2060,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15833:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15832:14:10"
            },
            "returnParameters": {
              "id": 2063,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15854:0:10"
            },
            "scope": 2167,
            "src": "15813:73:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2165,
              "nodeType": "Block",
              "src": "15926:780:10",
              "statements": [
                {
                  "assignments": [
                    2073
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2073,
                      "mutability": "mutable",
                      "name": "fake_user",
                      "nameLocation": "16087:9:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 2165,
                      "src": "16079:17:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2072,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "16079:7:10",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2075,
                  "initialValue": {
                    "hexValue": "307843413335623764393135343538454635343061446536303638644665324634344538666137333363",
                    "id": 2074,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "16099:42:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "value": "0xCA35b7d915458EF540aDe6068dFe2F44E8fa733c"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16079:62:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "333330",
                            "id": 2080,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "16193:3:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_330_by_1",
                              "typeString": "int_const 330"
                            },
                            "value": "330"
                          },
                          {
                            "hexValue": "31363530",
                            "id": 2081,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "16198:4:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1650_by_1",
                              "typeString": "int_const 1650"
                            },
                            "value": "1650"
                          },
                          {
                            "id": 2082,
                            "name": "fake_user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2073,
                            "src": "16204:9:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_330_by_1",
                              "typeString": "int_const 330"
                            },
                            {
                              "typeIdentifier": "t_rational_1650_by_1",
                              "typeString": "int_const 1650"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2079,
                          "name": "bid_struct",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 745,
                          "src": "16182:10:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_bid_struct_$745_storage_ptr_$",
                            "typeString": "type(struct pool.bid_struct storage pointer)"
                          }
                        },
                        "id": 2083,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16182:32:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_bid_struct_$745_memory_ptr",
                          "typeString": "struct pool.bid_struct memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_bid_struct_$745_memory_ptr",
                          "typeString": "struct pool.bid_struct memory"
                        }
                      ],
                      "expression": {
                        "id": 2076,
                        "name": "order_book_for_one_option",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 795,
                        "src": "16151:25:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_bid_struct_$745_storage_$dyn_storage",
                          "typeString": "struct pool.bid_struct storage ref[] storage ref"
                        }
                      },
                      "id": 2078,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "16151:30:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_bid_struct_$745_storage_$dyn_storage_ptr_$_t_struct$_bid_struct_$745_storage_$returns$__$bound_to$_t_array$_t_struct$_bid_struct_$745_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct pool.bid_struct storage ref[] storage pointer,struct pool.bid_struct storage ref)"
                      }
                    },
                    "id": 2084,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16151:64:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2085,
                  "nodeType": "ExpressionStatement",
                  "src": "16151:64:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "333936",
                            "id": 2090,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "16267:3:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_396_by_1",
                              "typeString": "int_const 396"
                            },
                            "value": "396"
                          },
                          {
                            "hexValue": "31333230",
                            "id": 2091,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "16272:4:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1320_by_1",
                              "typeString": "int_const 1320"
                            },
                            "value": "1320"
                          },
                          {
                            "id": 2092,
                            "name": "fake_user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2073,
                            "src": "16278:9:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_396_by_1",
                              "typeString": "int_const 396"
                            },
                            {
                              "typeIdentifier": "t_rational_1320_by_1",
                              "typeString": "int_const 1320"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2089,
                          "name": "bid_struct",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 745,
                          "src": "16256:10:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_bid_struct_$745_storage_ptr_$",
                            "typeString": "type(struct pool.bid_struct storage pointer)"
                          }
                        },
                        "id": 2093,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16256:32:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_bid_struct_$745_memory_ptr",
                          "typeString": "struct pool.bid_struct memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_bid_struct_$745_memory_ptr",
                          "typeString": "struct pool.bid_struct memory"
                        }
                      ],
                      "expression": {
                        "id": 2086,
                        "name": "order_book_for_one_option",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 795,
                        "src": "16225:25:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_bid_struct_$745_storage_$dyn_storage",
                          "typeString": "struct pool.bid_struct storage ref[] storage ref"
                        }
                      },
                      "id": 2088,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "16225:30:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_bid_struct_$745_storage_$dyn_storage_ptr_$_t_struct$_bid_struct_$745_storage_$returns$__$bound_to$_t_array$_t_struct$_bid_struct_$745_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct pool.bid_struct storage ref[] storage pointer,struct pool.bid_struct storage ref)"
                      }
                    },
                    "id": 2094,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16225:64:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2095,
                  "nodeType": "ExpressionStatement",
                  "src": "16225:64:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "313332",
                            "id": 2100,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "16341:3:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_132_by_1",
                              "typeString": "int_const 132"
                            },
                            "value": "132"
                          },
                          {
                            "hexValue": "36363030",
                            "id": 2101,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "16346:4:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_6600_by_1",
                              "typeString": "int_const 6600"
                            },
                            "value": "6600"
                          },
                          {
                            "id": 2102,
                            "name": "fake_user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2073,
                            "src": "16352:9:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_132_by_1",
                              "typeString": "int_const 132"
                            },
                            {
                              "typeIdentifier": "t_rational_6600_by_1",
                              "typeString": "int_const 6600"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2099,
                          "name": "bid_struct",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 745,
                          "src": "16330:10:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_bid_struct_$745_storage_ptr_$",
                            "typeString": "type(struct pool.bid_struct storage pointer)"
                          }
                        },
                        "id": 2103,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16330:32:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_bid_struct_$745_memory_ptr",
                          "typeString": "struct pool.bid_struct memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_bid_struct_$745_memory_ptr",
                          "typeString": "struct pool.bid_struct memory"
                        }
                      ],
                      "expression": {
                        "id": 2096,
                        "name": "order_book_for_one_option",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 795,
                        "src": "16299:25:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_bid_struct_$745_storage_$dyn_storage",
                          "typeString": "struct pool.bid_struct storage ref[] storage ref"
                        }
                      },
                      "id": 2098,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "16299:30:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_bid_struct_$745_storage_$dyn_storage_ptr_$_t_struct$_bid_struct_$745_storage_$returns$__$bound_to$_t_array$_t_struct$_bid_struct_$745_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct pool.bid_struct storage ref[] storage pointer,struct pool.bid_struct storage ref)"
                      }
                    },
                    "id": 2104,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16299:64:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2105,
                  "nodeType": "ExpressionStatement",
                  "src": "16299:64:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "313938",
                            "id": 2110,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "16415:3:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_198_by_1",
                              "typeString": "int_const 198"
                            },
                            "value": "198"
                          },
                          {
                            "hexValue": "3136353030",
                            "id": 2111,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "16420:5:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_16500_by_1",
                              "typeString": "int_const 16500"
                            },
                            "value": "16500"
                          },
                          {
                            "id": 2112,
                            "name": "fake_user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2073,
                            "src": "16427:9:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_198_by_1",
                              "typeString": "int_const 198"
                            },
                            {
                              "typeIdentifier": "t_rational_16500_by_1",
                              "typeString": "int_const 16500"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2109,
                          "name": "bid_struct",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 745,
                          "src": "16404:10:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_bid_struct_$745_storage_ptr_$",
                            "typeString": "type(struct pool.bid_struct storage pointer)"
                          }
                        },
                        "id": 2113,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16404:33:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_bid_struct_$745_memory_ptr",
                          "typeString": "struct pool.bid_struct memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_bid_struct_$745_memory_ptr",
                          "typeString": "struct pool.bid_struct memory"
                        }
                      ],
                      "expression": {
                        "id": 2106,
                        "name": "order_book_for_one_option",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 795,
                        "src": "16373:25:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_bid_struct_$745_storage_$dyn_storage",
                          "typeString": "struct pool.bid_struct storage ref[] storage ref"
                        }
                      },
                      "id": 2108,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "16373:30:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_bid_struct_$745_storage_$dyn_storage_ptr_$_t_struct$_bid_struct_$745_storage_$returns$__$bound_to$_t_array$_t_struct$_bid_struct_$745_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct pool.bid_struct storage ref[] storage pointer,struct pool.bid_struct storage ref)"
                      }
                    },
                    "id": 2114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16373:65:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2115,
                  "nodeType": "ExpressionStatement",
                  "src": "16373:65:10"
                },
                {
                  "expression": {
                    "id": 2120,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2116,
                        "name": "bids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 751,
                        "src": "16448:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_bid_struct_$745_storage_$dyn_storage_$",
                          "typeString": "mapping(uint256 => struct pool.bid_struct storage ref[] storage ref)"
                        }
                      },
                      "id": 2118,
                      "indexExpression": {
                        "id": 2117,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 788,
                        "src": "16453:2:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "16448:8:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_bid_struct_$745_storage_$dyn_storage",
                        "typeString": "struct pool.bid_struct storage ref[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2119,
                      "name": "order_book_for_one_option",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 795,
                      "src": "16459:25:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_bid_struct_$745_storage_$dyn_storage",
                        "typeString": "struct pool.bid_struct storage ref[] storage ref"
                      }
                    },
                    "src": "16448:36:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_bid_struct_$745_storage_$dyn_storage",
                      "typeString": "struct pool.bid_struct storage ref[] storage ref"
                    }
                  },
                  "id": 2121,
                  "nodeType": "ExpressionStatement",
                  "src": "16448:36:10"
                },
                {
                  "expression": {
                    "id": 2130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 2122,
                            "name": "user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 771,
                            "src": "16494:4:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_user_struct_$764_storage_$_$",
                              "typeString": "mapping(address => mapping(uint256 => struct pool.user_struct storage ref))"
                            }
                          },
                          "id": 2125,
                          "indexExpression": {
                            "id": 2123,
                            "name": "fake_user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2073,
                            "src": "16499:9:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "16494:15:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_user_struct_$764_storage_$",
                            "typeString": "mapping(uint256 => struct pool.user_struct storage ref)"
                          }
                        },
                        "id": 2126,
                        "indexExpression": {
                          "id": 2124,
                          "name": "id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 788,
                          "src": "16510:2:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "16494:19:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_user_struct_$764_storage",
                          "typeString": "struct pool.user_struct storage ref"
                        }
                      },
                      "id": 2127,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "side",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 761,
                      "src": "16494:24:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_option_side_$756",
                        "typeString": "enum pool.option_side"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 2128,
                        "name": "option_side",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 756,
                        "src": "16521:11:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_option_side_$756_$",
                          "typeString": "type(enum pool.option_side)"
                        }
                      },
                      "id": 2129,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "buyer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 753,
                      "src": "16521:17:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_option_side_$756",
                        "typeString": "enum pool.option_side"
                      }
                    },
                    "src": "16494:44:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_option_side_$756",
                      "typeString": "enum pool.option_side"
                    }
                  },
                  "id": 2131,
                  "nodeType": "ExpressionStatement",
                  "src": "16494:44:10"
                },
                {
                  "expression": {
                    "id": 2139,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 2132,
                            "name": "user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 771,
                            "src": "16548:4:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_user_struct_$764_storage_$_$",
                              "typeString": "mapping(address => mapping(uint256 => struct pool.user_struct storage ref))"
                            }
                          },
                          "id": 2135,
                          "indexExpression": {
                            "id": 2133,
                            "name": "fake_user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2073,
                            "src": "16553:9:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "16548:15:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_user_struct_$764_storage_$",
                            "typeString": "mapping(uint256 => struct pool.user_struct storage ref)"
                          }
                        },
                        "id": 2136,
                        "indexExpression": {
                          "id": 2134,
                          "name": "id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 788,
                          "src": "16564:2:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "16548:19:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_user_struct_$764_storage",
                          "typeString": "struct pool.user_struct storage ref"
                        }
                      },
                      "id": 2137,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "unusedpremium",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 763,
                      "src": "16548:33:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "373039",
                      "id": 2138,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "16585:3:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_709_by_1",
                        "typeString": "int_const 709"
                      },
                      "value": "709"
                    },
                    "src": "16548:40:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2140,
                  "nodeType": "ExpressionStatement",
                  "src": "16548:40:10"
                },
                {
                  "expression": {
                    "id": 2146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 2141,
                          "name": "op",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 785,
                          "src": "16598:2:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_option_struct_$781_storage_$dyn_storage",
                            "typeString": "struct pool.option_struct storage ref[] storage ref"
                          }
                        },
                        "id": 2143,
                        "indexExpression": {
                          "id": 2142,
                          "name": "id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 788,
                          "src": "16601:2:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "16598:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_option_struct_$781_storage",
                          "typeString": "struct pool.option_struct storage ref"
                        }
                      },
                      "id": 2144,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "supply",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 777,
                      "src": "16598:13:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "3236303730",
                      "id": 2145,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "16615:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_26070_by_1",
                        "typeString": "int_const 26070"
                      },
                      "value": "26070"
                    },
                    "src": "16598:22:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2147,
                  "nodeType": "ExpressionStatement",
                  "src": "16598:22:10"
                },
                {
                  "expression": {
                    "id": 2157,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 2148,
                          "name": "op",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 785,
                          "src": "16630:2:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_option_struct_$781_storage_$dyn_storage",
                            "typeString": "struct pool.option_struct storage ref[] storage ref"
                          }
                        },
                        "id": 2150,
                        "indexExpression": {
                          "id": 2149,
                          "name": "id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 788,
                          "src": "16633:2:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "16630:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_option_struct_$781_storage",
                          "typeString": "struct pool.option_struct storage ref"
                        }
                      },
                      "id": 2151,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "order",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 780,
                      "src": "16630:12:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                        "typeString": "uint256[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "components": [
                        {
                          "hexValue": "32",
                          "id": 2152,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "16646:1:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        {
                          "hexValue": "33",
                          "id": 2153,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "16649:1:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          },
                          "value": "3"
                        },
                        {
                          "hexValue": "30",
                          "id": 2154,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "16652:1:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "hexValue": "31",
                          "id": 2155,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "16655:1:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "id": 2156,
                      "isConstant": false,
                      "isInlineArray": true,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "16645:12:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint8_$4_memory_ptr",
                        "typeString": "uint8[4] memory"
                      }
                    },
                    "src": "16630:27:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                      "typeString": "uint256[] storage ref"
                    }
                  },
                  "id": 2158,
                  "nodeType": "ExpressionStatement",
                  "src": "16630:27:10"
                },
                {
                  "expression": {
                    "id": 2163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2159,
                        "name": "cash_balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 738,
                        "src": "16667:12:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 2161,
                      "indexExpression": {
                        "id": 2160,
                        "name": "fake_user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2073,
                        "src": "16680:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "16667:23:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "313030303030",
                      "id": 2162,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "16693:6:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100000_by_1",
                        "typeString": "int_const 100000"
                      },
                      "value": "100000"
                    },
                    "src": "16667:32:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2164,
                  "nodeType": "ExpressionStatement",
                  "src": "16667:32:10"
                }
              ]
            },
            "functionSelector": "547b25c1",
            "id": 2166,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createFakeBuyer",
            "nameLocation": "15901:15:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2070,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15916:2:10"
            },
            "returnParameters": {
              "id": 2071,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15926:0:10"
            },
            "scope": 2167,
            "src": "15892:814:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 2168,
        "src": "239:16469:10",
        "usedErrors": []
      }
    ],
    "src": "32:16677:10"
  },
  "bytecode": "60806040526000805460ff191681556007553480156200001e57600080fd5b50600280546001600160a01b031916301790556040805160808101909152610ce48152600090602081016200005542603c6200020e565b8152602001600081526020016008805480602002602001604051908101604052809291908181526020018280548015620000af57602002820191906000526020600020905b8154815260200190600101908083116200009a575b50505091909252505060068054600181018255600091909152815160049091027ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f81019182556020808401517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d4083015560408401517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d4183015560608401518051949550859462000187937ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d4201929190910190620001a7565b505033600090815260036020526040902062030d40905550620002359050565b828054828255906000526020600020908101928215620001e5579160200282015b82811115620001e5578251825591602001919060010190620001c8565b50620001f3929150620001f7565b5090565b5b80821115620001f35760008155600101620001f8565b600082198211156200023057634e487b7160e01b600052601160045260246000fd5b500190565b612abd80620002456000396000f3fe6080604052600436106101145760003560e01c80637b3c4baa116100a0578063d32cb0fe11610064578063d32cb0fe1461031c578063d36dedd214610331578063f14e96f114610353578063f670235614610373578063ff186b2e146103a057600080fd5b80637b3c4baa146102845780637e7f320d146102c85780639435c887146102dd578063bf152765146102f2578063d0e30db01461031457600080fd5b8063547b25c1116100e7578063547b25c11461020157806357c90de51461021657806367c9b01714610236578063704bba691461024e5780637b3889e71461026e57600080fd5b806314feaa9d1461011957806316ed0f721461017b5780631be0819c1461019d578063387eadae146101c6575b600080fd5b34801561012557600080fd5b50610163610134366004612846565b6005602090815260009283526040808420909152908252902080546001820154600290920154909160ff169083565b60405161017293929190612886565b60405180910390f35b34801561018757600080fd5b5061019b6101963660046128bc565b600155565b005b3480156101a957600080fd5b506002546001600160a01b0316315b604051908152602001610172565b3480156101d257600080fd5b506101e66101e13660046128bc565b6103b6565b60408051938452602084019290925290820152606001610172565b34801561020d57600080fd5b5061019b6103e9565b34801561022257600080fd5b5061019b6102313660046128d5565b61078f565b34801561024257600080fd5b5061019b610ed7600155565b34801561025a57600080fd5b5061019b6102693660046128bc565b610b25565b34801561027a57600080fd5b506101b8600a5481565b34801561029057600080fd5b506102a461029f3660046128d5565b611667565b6040805193845260208401929092526001600160a01b031690820152606001610172565b3480156102d457600080fd5b506101b86116b2565b3480156102e957600080fd5b5061019b6116eb565b3480156102fe57600080fd5b50336000908152600360205260409020546101b8565b61019b611b61565b34801561032857600080fd5b5061019b611bca565b34801561033d57600080fd5b50610346611fde565b60405161017291906128f7565b34801561035f57600080fd5b506101b861036e3660046128bc565b61205a565b34801561037f57600080fd5b506101b861038e36600461293b565b60036020526000908152604090205481565b3480156103ac57600080fd5b506101b860015481565b600681815481106103c657600080fd5b600091825260209091206004909102018054600182015460029092015490925083565b600073ca35b7d915458ef540ade6068dfe2f44e8fa733c90506009604051806060016040528061014a81526020016106728152602001836001600160a01b03168152509080600181540180825580915050600190039060005260206000209060030201600090919091909150600082015181600001556020820151816001015560408201518160020160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555050506009604051806060016040528061018c81526020016105288152602001836001600160a01b03168152509080600181540180825580915050600190039060005260206000209060030201600090919091909150600082015181600001556020820151816001015560408201518160020160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550505060096040518060600160405280608481526020016119c88152602001836001600160a01b03168152509080600181540180825580915050600190039060005260206000209060030201600090919091909150600082015181600001556020820151816001015560408201518160020160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555050506009604051806060016040528060c681526020016140748152602001836001600160a01b03168152509080600181540180825580915050600190039060005260206000209060030201600090919091909150600082015181600001556020820151816001015560408201518160020160006101000a8154816001600160a01b0302191690836001600160a01b031602179055505050600960046000600754815260200190815260200160002090805461067d929190612716565b506001600160a01b038116600090815260056020908152604080832060078054855292528083206001908101805460ff1916909117905590548252812060020180546102c592906106cf908490612973565b925050819055506165d66006600754815481106106ee576106ee61298b565b9060005260206000209060040201600201600082825461070e9190612973565b9091555050604080516080810182526002815260036020820152600091810191909152600160608201526007546006805490919081106107505761075061298b565b906000526020600020906004020160030190600461076f92919061279c565b506001600160a01b03166000908152600360205260409020620186a09055565b3361079b600a426129a1565b6006600754815481106107b0576107b061298b565b906000526020600020906004020160010154116107e85760405162461bcd60e51b81526004016107df906129b8565b60405180910390fd5b60026001600160a01b0382166000908152600560209081526040808320600754845290915290206001015460ff16600381111561082757610827612870565b14156108755760405162461bcd60e51b815260206004820152601b60248201527f73656c6c6572206f66206f7074696f6e2063616e6e6f7420627579000000000060448201526064016107df565b60648210156108b75760405162461bcd60e51b815260206004820152600e60248201526d04d696e2073697a65203d203130360941b60448201526064016107df565b6001600160a01b0381166000908152600360205260409020548211156109115760405162461bcd60e51b815260206004820152600f60248201526e0dcdee840cadcdeeaced040c6c2e6d608b1b60448201526064016107df565b6001600160a01b038116600090815260056020908152604080832060078054855292528083206001908101805460ff191690911790559054825281206002018054849290610960908490612973565b90915550506001600160a01b0381166000908152600360205260408120805484929061098d9084906129a1565b925050819055506000836006600754815481106109ac576109ac61298b565b906000526020600020906004020160000154846109c991906129fe565b6109d39190612a1d565b9050806006600754815481106109eb576109eb61298b565b90600052602060002090600402016002016000828254610a0b9190612973565b909155505060078054600090815260046020908152604080832081516060810183528981528084018781526001600160a01b038981169483019485528354600180820186559488529590962091516003909502909101938455519083015551600290910180546001600160a01b0319169190921617905554600680549091908110610a9857610a9861298b565b6000918252602090912060036004909202010154610b1657600660075481548110610ac557610ac561298b565b9060005260206000209060040201600301600160046000600754815260200190815260200160002080549050610afb91906129a1565b81546001810183556000928352602090922090910155610b1f565b610b1f84612398565b50505050565b60003390506000600660075481548110610b4157610b4161298b565b90600052602060002090600402016003018054905011610ba35760405162461bcd60e51b815260206004820152601e60248201527f63616e6e6f742073656c6c206966207468657265206973206e6f20626964000060448201526064016107df565b610bae600a426129a1565b600660075481548110610bc357610bc361298b565b90600052602060002090600402016001015411610bf25760405162461bcd60e51b81526004016107df906129b8565b60016001600160a01b0382166000908152600560209081526040808320600754845290915290206001015460ff166003811115610c3157610c31612870565b1415610c7f5760405162461bcd60e51b815260206004820152601b60248201527f6275796572206f66206f7074696f6e2063616e6e6f742073656c6c000000000060448201526064016107df565b6103e8821015610cc35760405162461bcd60e51b815260206004820152600f60248201526e04d696e2073697a65203d203130303608c1b60448201526064016107df565b600660075481548110610cd857610cd861298b565b906000526020600020906004020160020154821115610d265760405162461bcd60e51b815260206004820152600a6024820152696c6f7720737570706c7960b01b60448201526064016107df565b6001600160a01b038116600090815260036020526040902054821115610d805760405162461bcd60e51b815260206004820152600f60248201526e0dcdee840cadcdeeaced040c6c2e6d608b1b60448201526064016107df565b6001600160a01b03811660009081526003602052604081208054849290610da89084906129a1565b925050819055506000829050600080806001600660075481548110610dcf57610dcf61298b565b906000526020600020906004020160030180549050610dee91906129a1565b90505b83156115c557600754600081815260046020526040902060068054919290918110610e1e57610e1e61298b565b90600052602060002090600402016003018281548110610e4057610e4061298b565b906000526020600020015481548110610e5b57610e5b61298b565b906000526020600020906003020160010154915081841061123b5760075460008181526004602052604081206006805486946005949392918110610ea157610ea161298b565b90600052602060002090600402016003018581548110610ec357610ec361298b565b906000526020600020015481548110610ede57610ede61298b565b60009182526020808320600260039093020191909101546001600160a01b031683528281019390935260409182018120600754825290925281208054909190610f28908490612973565b92505081905550600660075481548110610f4457610f4461298b565b906000526020600020906004020160000154600460006007548152602001908152602001600020600660075481548110610f8057610f8061298b565b90600052602060002090600402016003018381548110610fa257610fa261298b565b906000526020600020015481548110610fbd57610fbd61298b565b90600052602060002090600302016000015483610fda91906129fe565b610fe49190612a1d565b60075460008181526004602052604081206006805460059490811061100b5761100b61298b565b9060005260206000209060040201600301858154811061102d5761102d61298b565b9060005260206000200154815481106110485761104861298b565b6000918252602080832060026003909302018201546001600160a01b031684528381019490945260409283018220600754835290935290812090910180549091906110949084906129a1565b90915550506007546000818152600460205260409020600680549192909181106110c0576110c061298b565b906000526020600020906004020160030182815481106110e2576110e261298b565b9060005260206000200154815481106110fd576110fd61298b565b9060005260206000209060030201600001548261111a91906129fe565b6111249084612973565b92508160066007548154811061113c5761113c61298b565b9060005260206000209060040201600201600082825461115c91906129a1565b909155505060075460008181526004602052604081206006805492939192909190811061118b5761118b61298b565b906000526020600020906004020160030183815481106111ad576111ad61298b565b9060005260206000200154815481106111c8576111c861298b565b9060005260206000209060030201600101819055506006600754815481106111f2576111f261298b565b906000526020600020906004020160030180548061121257611212612a3f565b60019003818190600052602060002001600090559055818461123491906129a1565b93506115b3565b600754600081815260046020526040812060068054889460059493929181106112665761126661298b565b906000526020600020906004020160030185815481106112885761128861298b565b9060005260206000200154815481106112a3576112a361298b565b60009182526020808320600260039093020191909101546001600160a01b0316835282810193909352604091820181206007548252909252812080549091906112ed908490612973565b925050819055506006600754815481106113095761130961298b565b9060005260206000209060040201600001546004600060075481526020019081526020016000206006600754815481106113455761134561298b565b906000526020600020906004020160030183815481106113675761136761298b565b9060005260206000200154815481106113825761138261298b565b9060005260206000209060030201600001548561139f91906129fe565b6113a99190612a1d565b6007546000818152600460205260408120600680546005949081106113d0576113d061298b565b906000526020600020906004020160030185815481106113f2576113f261298b565b90600052602060002001548154811061140d5761140d61298b565b6000918252602080832060026003909302018201546001600160a01b031684528381019490945260409283018220600754835290935290812090910180549091906114599084906129a1565b90915550506007546000818152600460205260409020600680549192909181106114855761148561298b565b906000526020600020906004020160030182815481106114a7576114a761298b565b9060005260206000200154815481106114c2576114c261298b565b906000526020600020906003020160000154846114df91906129fe565b6114e99084612973565b9250836006600754815481106115015761150161298b565b9060005260206000209060040201600201600082825461152191906129a1565b9091555050600754600081815260046020526040902060068054879390811061154c5761154c61298b565b9060005260206000209060040201600301838154811061156e5761156e61298b565b9060005260206000200154815481106115895761158961298b565b906000526020600020906003020160010160008282546115a991906129a1565b9091555060009450505b806115bd81612a55565b915050610df1565b6115d0610ed7600155565b6001546115dd81886129fe565b6115e79085612973565b6115f19190612a1d565b6001600160a01b0386166000908152600560209081526040808320600754845290915281208054909190611626908490612973565b909155505050506001600160a01b0392909216600090815260056020908152604080832060075484529091529020600101805460ff19166002179055505050565b6004602052816000526040600020818154811061168357600080fd5b60009182526020909120600390910201805460018201546002909201549093509091506001600160a01b031683565b6000426006600754815481106116ca576116ca61298b565b9060005260206000209060040201600101546116e691906129a1565b905090565b336000805460ff16600181111561170457611704612870565b146117515760405162461bcd60e51b815260206004820152601e60248201527f636f6e747261637420627573792c2074727920616761696e206c61746572000060448201526064016107df565b60016001600160a01b0382166000908152600560209081526040808320600754845290915290206001015460ff16600381111561179057611790612870565b146117dd5760405162461bcd60e51b815260206004820152601c60248201527f796f75206e65656420746f20627579206f7074696f6e2066697273740000000060448201526064016107df565b6001600160a01b038116600090815260056020908152604080832060075484529091529020600201546118615760405162461bcd60e51b815260206004820152602660248201527f796f7572206f64657220686173206265656e2066696c6c6564206f722063616e60448201526518d95b1b195960d21b60648201526084016107df565b6000805460ff191660011781556001600160a01b0382168082526005602090815260408084206007548552825280842060020154928452600390915282208054919290916118b0908490612973565b90915550506001600160a01b038116600090815260056020908152604080832060078054855292528220600201829055546006805490919081106118f6576118f661298b565b906000526020600020906004020160030180548060200260200160405190810160405280929190818152602001828054801561195157602002820191906000526020600020905b81548152602001906001019080831161193d575b505050505090506000805b8251811015611adb57836001600160a01b03166004600060075481526020019081526020016000208483815181106119965761199661298b565b6020026020010151815481106119ae576119ae61298b565b60009182526020909120600260039092020101546001600160a01b031614611a3f578281815181106119e2576119e261298b565b60200260200101516006600754815481106119ff576119ff61298b565b90600052602060002090600402016003018381548110611a2157611a2161298b565b60009182526020909120015581611a3781612a6c565b925050611ac9565b60075460009081526004602052604090208351849083908110611a6457611a6461298b565b602002602001015181548110611a7c57611a7c61298b565b906000526020600020906003020160010154600660075481548110611aa357611aa361298b565b90600052602060002090600402016002016000828254611ac391906129a1565b90915550505b80611ad381612a6c565b91505061195c565b5060005b818351611aec91906129a1565b811015611b5157600660075481548110611b0857611b0861298b565b9060005260206000209060040201600301805480611b2857611b28612a3f565b600190038181906000526020600020016000905590558080611b4990612a6c565b915050611adf565b50506000805460ff191690555050565b6101f4341015611ba45760405162461bcd60e51b815260206004820152600e60248201526d04d696e2073697a65203d203530360941b60448201526064016107df565b3360009081526003602052604081208054349290611bc3908490612973565b9091555050565b336000818152600560209081526040808320600754845290915290206001015460ff166002816003811115611c0157611c01612870565b1480611c1e57506001816003811115611c1c57611c1c612870565b145b611c615760405162461bcd60e51b81526020600482015260146024820152732cb7ba903430bb32903737903837b9b4ba34b7b760611b60448201526064016107df565b42600660075481548110611c7757611c7761298b565b9060005260206000209060040201600101541115611cd75760405162461bcd60e51b815260206004820152601d60248201527f43616e6e6f74206578657263697365206265666f72652065787069727900000060448201526064016107df565b6003816003811115611ceb57611ceb612870565b1415611d395760405162461bcd60e51b815260206004820152601760248201527f596f7520616c726561647920657863657263697365642000000000000000000060448201526064016107df565b6001600160a01b038216600090815260056020908152604080832060075480855292528220546006805491939290918110611d7657611d7661298b565b600091825260209091206004909102015490506001836003811115611d9d57611d9d612870565b1415611e815760008211611e065760405162461bcd60e51b815260206004820152602a60248201527f4e6f206f6e652073656c6c20796f75722062696420616e64206e6f7468696e6760448201526920746f2065787069726560b01b60648201526084016107df565b8060015410611e4b5760405162461bcd60e51b815260206004820152601160248201527045787069726520776f727468207a65726f60781b60448201526064016107df565b6001600160a01b0384166000908152600560209081526040808320600754845290915290206002015415611e8157611e816116eb565b6002836003811115611e9557611e95612870565b1415611f2657806001541015611eef57611eaf8183612a1d565b6001600160a01b03851660009081526003602052604081208054909190611ed7908490612973565b90915550611ee790508183612a1d565b600a55611fa7565b6001600160a01b03841660009081526003602052604081208054849290611f17908490612973565b9091555050600a829055611fa7565b806001541015611fa7578060015482611f3f91906129a1565b611f4990846129fe565b611f539190612a1d565b6001600160a01b03851660009081526003602052604081208054909190611f7b908490612973565b90915550506001548190611f8f90826129a1565b611f9990846129fe565b611fa39190612a1d565b600a555b5050506001600160a01b0316600090815260056020908152604080832060075484529091529020600101805460ff19166003179055565b6060600660075481548110611ff557611ff561298b565b906000526020600020906004020160030180548060200260200160405190810160405280929190818152602001828054801561205057602002820191906000526020600020905b81548152602001906001019080831161203c575b5050505050905090565b6000806006600754815481106120725761207261298b565b906000526020600020906004020160030180549050116120d45760405162461bcd60e51b815260206004820152601e60248201527f63616e6e6f742073656c6c206966207468657265206973206e6f20626964000060448201526064016107df565b6103e88210156121185760405162461bcd60e51b815260206004820152600f60248201526e06d696e2073697a65203d203130303608c1b60448201526064016107df565b60066007548154811061212d5761212d61298b565b90600052602060002090600402016002015482111561217b5760405162461bcd60e51b815260206004820152600a6024820152696c6f7720737570706c7960b01b60448201526064016107df565b600082905060008080600160066007548154811061219b5761219b61298b565b9060005260206000209060040201600301805490506121ba91906129a1565b90505b8315612384576007546000818152600460205260409020600680549192909181106121ea576121ea61298b565b9060005260206000209060040201600301828154811061220c5761220c61298b565b9060005260206000200154815481106122275761222761298b565b90600052602060002090600302016001015491508184106122e0576007546000818152600460205260409020600680549192909181106122695761226961298b565b9060005260206000209060040201600301828154811061228b5761228b61298b565b9060005260206000200154815481106122a6576122a661298b565b906000526020600020906003020160000154826122c391906129fe565b6122cd9084612973565b92506122d982856129a1565b9350612372565b6007546000818152600460205260409020600680549192909181106123075761230761298b565b906000526020600020906004020160030182815481106123295761232961298b565b9060005260206000200154815481106123445761234461298b565b9060005260206000209060030201600001548461236191906129fe565b61236b9084612973565b9250600093505b8061237c81612a55565b9150506121bd565b61238e8684612a1d565b9695505050505050565b60008060016006600754815481106123b2576123b261298b565b9060005260206000209060040201600301805490506123d191906129a1565b905060005b818310156124905760026123ea8385612973565b6123f49190612a1d565b90506004600060075481526020019081526020016000206006600754815481106124205761242061298b565b906000526020600020906004020160030182815481106124425761244261298b565b90600052602060002001548154811061245d5761245d61298b565b90600052602060002090600302016000015484111561248857612481816001612973565b92506123d6565b8091506123d6565b8183141561252a576007546000818152600460205260409020600680549192909181106124bf576124bf61298b565b906000526020600020906004020160030184815481106124e1576124e161298b565b9060005260206000200154815481106124fc576124fc61298b565b90600052602060002090600302016000015484111561252757612520836001612973565b905061252a565b50815b60066007548154811061253f5761253f61298b565b906000526020600020906004020160030160016004600060075481526020019081526020016000208054905061257591906129a1565b8154600181810184556000938452602090932001556007546006805490919081106125a2576125a261298b565b9060005260206000209060040201600301805490506125c191906129a1565b811015610b1f57600060016006600754815481106125e1576125e161298b565b90600052602060002090600402016003018054905061260091906129a1565b90505b818111156126ae576006600754815481106126205761262061298b565b906000526020600020906004020160030160018261263e91906129a1565b8154811061264e5761264e61298b565b906000526020600020015460066007548154811061266e5761266e61298b565b906000526020600020906004020160030182815481106126905761269061298b565b600091825260209091200155806126a681612a55565b915050612603565b506007546000908152600460205260409020546126cd906001906129a1565b6006600754815481106126e2576126e261298b565b906000526020600020906004020160030182815481106127045761270461298b565b60009182526020909120015550505050565b82805482825590600052602060002090600302810192821561278c5760005260206000209160030282015b8281111561278c57825482556001808401549083015560028084015490830180546001600160a01b0319166001600160a01b0390921691909117905560039283019290910190612741565b506127989291506127e8565b5090565b8280548282559060005260206000209081019282156127dc579160200282015b828111156127dc578251829060ff169055916020019190600101906127bc565b50612798929150612815565b5b8082111561279857600080825560018201556002810180546001600160a01b03191690556003016127e9565b5b808211156127985760008155600101612816565b80356001600160a01b038116811461284157600080fd5b919050565b6000806040838503121561285957600080fd5b6128628361282a565b946020939093013593505050565b634e487b7160e01b600052602160045260246000fd5b83815260608101600484106128ab57634e487b7160e01b600052602160045260246000fd5b602082019390935260400152919050565b6000602082840312156128ce57600080fd5b5035919050565b600080604083850312156128e857600080fd5b50508035926020909101359150565b6020808252825182820181905260009190848201906040850190845b8181101561292f57835183529284019291840191600101612913565b50909695505050505050565b60006020828403121561294d57600080fd5b6129568261282a565b9392505050565b634e487b7160e01b600052601160045260246000fd5b600082198211156129865761298661295d565b500190565b634e487b7160e01b600052603260045260246000fd5b6000828210156129b3576129b361295d565b500390565b60208082526026908201527f416c72656164792065787069726564206f7220746f6f20636c6f736520746f2060408201526565787069727960d01b606082015260800190565b6000816000190483118215151615612a1857612a1861295d565b500290565b600082612a3a57634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603160045260246000fd5b600081612a6457612a6461295d565b506000190190565b6000600019821415612a8057612a8061295d565b506001019056fea2646970667358221220f08277a54daa27d07daa96374e05278011e1f3ca4a73135686ac18c5f4ac0e5464736f6c634300080a0033",
  "bytecodeSha1": "79bc2d0078d7b97ef2e000f688dd6bca5953e42b",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.10+commit.fc410830"
  },
  "contractName": "pool",
  "coverageMap": {
    "branches": {
      "10": {
        "pool.cancelBid": {
          "110": [
            5752,
            5782,
            true
          ],
          "111": [
            5869,
            5910,
            true
          ],
          "112": [
            6516,
            6555,
            false
          ]
        },
        "pool.deposit": {
          "113": [
            15269,
            15298,
            true
          ]
        },
        "pool.exercise": {
          "114": [
            11110,
            11137,
            true
          ],
          "115": [
            11141,
            11167,
            true
          ],
          "116": [
            11244,
            11276,
            true
          ],
          "117": [
            11349,
            11379,
            true
          ],
          "118": [
            11508,
            11534,
            false
          ],
          "119": [
            11558,
            11567,
            true
          ],
          "120": [
            11636,
            11654,
            true
          ],
          "121": [
            11694,
            11727,
            false
          ],
          "122": [
            11796,
            11823,
            false
          ],
          "123": [
            11843,
            11861,
            false
          ],
          "124": [
            12457,
            12475,
            false
          ]
        },
        "pool.getBestBid": {
          "125": [
            10037,
            10060,
            true
          ],
          "126": [
            10113,
            10143,
            true
          ],
          "127": [
            10181,
            10209,
            true
          ],
          "128": [
            10481,
            10506,
            false
          ]
        },
        "pool.insertBid": {
          "129": [
            13419,
            13461,
            false
          ],
          "130": [
            13737,
            13750,
            false
          ],
          "131": [
            13770,
            13813,
            false
          ],
          "132": [
            14065,
            14094,
            false
          ]
        },
        "pool.placeBid": {
          "99": [
            4103,
            4161,
            true
          ],
          "100": [
            4256,
            4298,
            true
          ],
          "101": [
            4369,
            4394,
            true
          ],
          "102": [
            4431,
            4461,
            true
          ]
        },
        "pool.sellBid": {
          "103": [
            7214,
            7237,
            true
          ],
          "104": [
            7303,
            7361,
            true
          ],
          "105": [
            7456,
            7497,
            true
          ],
          "106": [
            7568,
            7598,
            true
          ],
          "107": [
            7636,
            7664,
            true
          ],
          "108": [
            7697,
            7731,
            true
          ],
          "109": [
            8159,
            8178,
            false
          ]
        }
      }
    },
    "statements": {
      "10": {
        "pool.PoolBalance": {
          "1": [
            15440,
            15473
          ]
        },
        "pool.SecondToExpiry": {
          "50": [
            15760,
            15800
          ]
        },
        "pool.cancelBid": {
          "51": [
            5731,
            5838
          ],
          "52": [
            5848,
            5964
          ],
          "53": [
            5974,
            6092
          ],
          "54": [
            6102,
            6133
          ],
          "55": [
            6224,
            6276
          ],
          "56": [
            6286,
            6319
          ],
          "57": [
            6628,
            6658
          ],
          "58": [
            6729,
            6732
          ],
          "59": [
            6771,
            6815
          ],
          "60": [
            6493,
            6496
          ],
          "61": [
            6914,
            6932
          ],
          "62": [
            6895,
            6898
          ],
          "63": [
            6952,
            6981
          ]
        },
        "pool.createFakeBuyer": {
          "4": [
            16151,
            16215
          ],
          "5": [
            16225,
            16289
          ],
          "6": [
            16299,
            16363
          ],
          "7": [
            16373,
            16438
          ],
          "8": [
            16448,
            16484
          ],
          "9": [
            16494,
            16538
          ],
          "10": [
            16548,
            16588
          ],
          "11": [
            16598,
            16620
          ],
          "12": [
            16630,
            16657
          ],
          "13": [
            16667,
            16699
          ]
        },
        "pool.deposit": {
          "64": [
            15261,
            15317
          ],
          "65": [
            15327,
            15364
          ]
        },
        "pool.exercise": {
          "66": [
            11089,
            11213
          ],
          "67": [
            11223,
            11331
          ],
          "68": [
            11341,
            11407
          ],
          "69": [
            11550,
            11614
          ],
          "70": [
            11628,
            11676
          ],
          "71": [
            11747,
            11758
          ],
          "72": [
            12066,
            12104
          ],
          "73": [
            12172,
            12207
          ],
          "74": [
            12287,
            12315
          ],
          "75": [
            12383,
            12408
          ],
          "76": [
            12723,
            12808
          ],
          "77": [
            12876,
            12936
          ],
          "78": [
            13008,
            13052
          ]
        },
        "pool.getBestBid": {
          "80": [
            10029,
            10095
          ],
          "81": [
            10105,
            10163
          ],
          "82": [
            10173,
            10224
          ],
          "83": [
            10415,
            10463
          ],
          "84": [
            10526,
            10611
          ],
          "85": [
            10629,
            10654
          ],
          "86": [
            10693,
            10749
          ],
          "87": [
            10767,
            10777
          ],
          "88": [
            10805,
            10808
          ],
          "89": [
            10828,
            10866
          ]
        },
        "pool.getEthPrice": {
          "2": [
            15189,
            15204
          ]
        },
        "pool.getOrder": {
          "79": [
            15555,
            15574
          ]
        },
        "pool.insertBid": {
          "90": [
            13377,
            13401
          ],
          "91": [
            13481,
            13495
          ],
          "92": [
            13534,
            13545
          ],
          "93": [
            13833,
            13847
          ],
          "94": [
            13886,
            13896
          ],
          "95": [
            14013,
            14051
          ],
          "96": [
            14244,
            14281
          ],
          "97": [
            14161,
            14164
          ],
          "98": [
            14364,
            14403
          ]
        },
        "pool.placeBid": {
          "14": [
            4082,
            4225
          ],
          "15": [
            4235,
            4351
          ],
          "16": [
            4361,
            4413
          ],
          "17": [
            4423,
            4481
          ],
          "18": [
            4635,
            4675
          ],
          "19": [
            4685,
            4725
          ],
          "20": [
            4779,
            4809
          ],
          "21": [
            5241,
            5263
          ],
          "22": [
            5303,
            5350
          ],
          "23": [
            5404,
            5442
          ],
          "24": [
            5473,
            5490
          ]
        },
        "pool.sellBid": {
          "25": [
            7206,
            7272
          ],
          "26": [
            7282,
            7425
          ],
          "27": [
            7435,
            7550
          ],
          "28": [
            7560,
            7618
          ],
          "29": [
            7628,
            7679
          ],
          "30": [
            7689,
            7751
          ],
          "31": [
            7800,
            7834
          ],
          "32": [
            8099,
            8141
          ],
          "33": [
            8230,
            8291
          ],
          "34": [
            8309,
            8474
          ],
          "35": [
            8525,
            8584
          ],
          "36": [
            8635,
            8661
          ],
          "37": [
            8716,
            8750
          ],
          "38": [
            8836,
            8854
          ],
          "39": [
            8872,
            8891
          ],
          "40": [
            8962,
            9020
          ],
          "41": [
            9038,
            9200
          ],
          "42": [
            9251,
            9307
          ],
          "43": [
            9358,
            9381
          ],
          "44": [
            9436,
            9476
          ],
          "45": [
            9494,
            9504
          ],
          "46": [
            9532,
            9535
          ],
          "47": [
            9580,
            9593
          ],
          "48": [
            9678,
            9764
          ],
          "49": [
            9774,
            9815
          ]
        },
        "pool.setFakeETH": {
          "0": [
            15864,
            15879
          ]
        },
        "pool.userBalance": {
          "3": [
            15650,
            15681
          ]
        }
      }
    }
  },
  "dependencies": [],
  "deployedBytecode": "",
  "deployedSourceMap": "239:16469:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2063:63;;;;;;;;;;-1:-1:-1;2063:63:10;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;15813:73;;;;;;;;;;-1:-1:-1;15813:73:10;;;;;:::i;:::-;15864:8;:15;15813:73;;;15377:103;;;;;;;;;;-1:-1:-1;15448:16:10;;-1:-1:-1;;;;;15448:16:10;:24;15377:103;;;1404:25:13;;;1392:2;1377:18;15377:103:10;1258:177:13;2591:25:10;;;;;;;;;;-1:-1:-1;2591:25:10;;;;;:::i;:::-;;:::i;:::-;;;;1642::13;;;1698:2;1683:18;;1676:34;;;;1726:18;;;1719:34;1630:2;1615:18;2591:25:10;1440:319:13;15892:814:10;;;;;;;;;;;;;:::i;3879:1628::-;;;;;;;;;;-1:-1:-1;3879:1628:10;;;;;:::i;:::-;;:::i;14561:650::-;;;;;;;;;;;;15200:4;15189:8;:15;14561:650;6994:2828;;;;;;;;;;-1:-1:-1;6994:2828:10;;;;;:::i;:::-;;:::i;2918:32::-;;;;;;;;;;;;;;;;1395:44;;;;;;;;;;-1:-1:-1;1395:44:10;;;;;:::i;:::-;;:::i;:::-;;;;2219:25:13;;;2275:2;2260:18;;2253:34;;;;-1:-1:-1;;;;;2323:32:13;2303:18;;;2296:60;2207:2;2192:18;1395:44:10;2017:345:13;15694:113:10;;;;;;;;;;;;;:::i;5513:1475::-;;;;;;;;;;;;;:::i;15587:101::-;;;;;;;;;;-1:-1:-1;15670:10:10;15631:7;15657:24;;;:12;:24;;;;;;15587:101;;15217:154;;;:::i;10907:2152::-;;;;;;;;;;;;;:::i;15486:95::-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;9828:1073::-;;;;;;;;;;-1:-1:-1;9828:1073:10;;;;;:::i;:::-;;:::i;1048:47::-;;;;;;;;;;-1:-1:-1;1048:47:10;;;;;:::i;:::-;;;;;;;;;;;;;;906:23;;;;;;;;;;;;;;;;2591:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2591:25:10;:::o;15892:814::-;16079:17;16099:42;16079:62;;16151:25;16182:32;;;;;;;;16193:3;16182:32;;;;16198:4;16182:32;;;;16204:9;-1:-1:-1;;;;;16182:32:10;;;;16151:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;16151:64:10;;;;;-1:-1:-1;;;;;16151:64:10;;;;;;;;16225:25;16256:32;;;;;;;;16267:3;16256:32;;;;16272:4;16256:32;;;;16278:9;-1:-1:-1;;;;;16256:32:10;;;;16225:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;16225:64:10;;;;;-1:-1:-1;;;;;16225:64:10;;;;;;;;16299:25;16330:32;;;;;;;;16341:3;16330:32;;;;16346:4;16330:32;;;;16352:9;-1:-1:-1;;;;;16330:32:10;;;;16299:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;16299:64:10;;;;;-1:-1:-1;;;;;16299:64:10;;;;;;;;16373:25;16404:33;;;;;;;;16415:3;16404:33;;;;16420:5;16404:33;;;;16427:9;-1:-1:-1;;;;;16404:33:10;;;;16373:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;16373:65:10;;;;;-1:-1:-1;;;;;16373:65:10;;;;;;;;16459:25;16448:4;:8;16453:2;;16448:8;;;;;;;;;;;:36;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;16494:15:10;;;;;;:4;:15;;;;;;;;16510:2;;;16494:19;;;;;;;16521:17;16494:24;;;:44;;-1:-1:-1;;16494:44:10;;;;;;16564:2;;16548:19;;;;:33;;:40;;16585:3;;16494:15;16548:40;;16585:3;;16548:40;:::i;:::-;;;;;;;;16615:5;16598:2;16601;;16598:6;;;;;;;;:::i;:::-;;;;;;;;;;;:13;;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;16630:27:10;;;;;;;;16646:1;16630:27;;16649:1;16630:27;;;;-1:-1:-1;16630:27:10;;;;;;;16655:1;16630:27;;;;16633:2;;16630;:6;;:2;;16633;16630:6;;;;;;:::i;:::-;;;;;;;;;;;:12;;:27;;;;;;;:::i;:::-;-1:-1:-1;;;;;;16667:23:10;;;;;:12;:23;;;;;16693:6;16667:32;;15892:814::o;3879:1628::-;4062:10;4119:42;311:2;4119:15;:42;:::i;:::-;4103:2;4106;;4103:6;;;;;;;;:::i;:::-;;;;;;;;;;;:13;;;:58;4082:143;;;;-1:-1:-1;;;4082:143:10;;;;;;;:::i;:::-;;;;;;;;;4280:18;-1:-1:-1;;;;;4256:11:10;;;;;;:4;:11;;;;;;;;4268:2;;4256:15;;;;;;;:20;;;;;:42;;;;;;;;:::i;:::-;;;4235:116;;;;-1:-1:-1;;;4235:116:10;;4331:2:13;4235:116:10;;;4313:21:13;4370:2;4350:18;;;4343:30;4409:29;4389:18;;;4382:57;4456:18;;4235:116:10;4129:351:13;4235:116:10;371:3;4369:7;:25;;4361:52;;;;-1:-1:-1;;;4361:52:10;;4687:2:13;4361:52:10;;;4669:21:13;4726:2;4706:18;;;4699:30;-1:-1:-1;;;4745:18:13;;;4738:44;4799:18;;4361:52:10;4485:338:13;4361:52:10;-1:-1:-1;;;;;4442:19:10;;;;;;:12;:19;;;;;;4431:30;;;4423:58;;;;-1:-1:-1;;;4423:58:10;;5030:2:13;4423:58:10;;;5012:21:13;5069:2;5049:18;;;5042:30;-1:-1:-1;;;5088:18:13;;;5081:45;5143:18;;4423:58:10;4828:339:13;4423:58:10;-1:-1:-1;;;;;4635:11:10;;;;;;:4;:11;;;;;;;;4647:2;;;4635:15;;;;;;;4658:17;4635:20;;;:40;;-1:-1:-1;;4635:40:10;;;;;;4697:2;;4685:15;;;;:29;;:40;;4718:7;;4635:11;4685:40;;4718:7;;4685:40;:::i;:::-;;;;-1:-1:-1;;;;;;;4779:19:10;;;;;;:12;:19;;;;;:30;;4802:7;;4779:19;:30;;4802:7;;4779:30;:::i;:::-;;;;;;;;5181:13;5225:6;5208:2;5211;;5208:6;;;;;;;;:::i;:::-;;;;;;;;;;;:13;;;5198:7;:23;;;;:::i;:::-;5197:34;;;;:::i;:::-;5181:50;;5258:5;5241:2;5244;;5241:6;;;;;;;;:::i;:::-;;;;;;;;;;;:13;;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;5308:2:10;;;5303:8;;;;:4;:8;;;;;;;;5317:32;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5317:32:10;;;;;;;;;5303:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;5303:47:10;;;;;;;;5367:2;5364;:6;;:2;;5367;5364:6;;;;;;:::i;:::-;;;;;;;;;:12;:6;;;;;:12;:19;5360:141;;5404:2;5407;;5404:6;;;;;;;;:::i;:::-;;;;;;;;;;;:12;;5440:1;5422:4;:8;5427:2;;5422:8;;;;;;;;;;;:15;;;;:19;;;;:::i;:::-;5404:38;;;;;;;-1:-1:-1;5404:38:10;;;;;;;;;;;5360:141;;;5473:17;5483:6;5473:9;:17::i;:::-;3937:1570;;3879:1628;;:::o;6994:2828::-;7170:13;7186:10;7170:26;;7236:1;7214:2;7217;;7214:6;;;;;;;;:::i;:::-;;;;;;;;;;;:12;;:19;;;;:23;7206:66;;;;-1:-1:-1;;;7206:66:10;;5769:2:13;7206:66:10;;;5751:21:13;5808:2;5788:18;;;5781:30;5847:32;5827:18;;;5820:60;5897:18;;7206:66:10;5567:354:13;7206:66:10;7319:42;311:2;7319:15;:42;:::i;:::-;7303:2;7306;;7303:6;;;;;;;;:::i;:::-;;;;;;;;;;;:13;;;:58;7282:143;;;;-1:-1:-1;;;7282:143:10;;;;;;;:::i;:::-;7480:17;-1:-1:-1;;;;;7456:11:10;;;;;;:4;:11;;;;;;;;7468:2;;7456:15;;;;;;;:20;;;;;:41;;;;;;;;:::i;:::-;;;7435:115;;;;-1:-1:-1;;;7435:115:10;;6128:2:13;7435:115:10;;;6110:21:13;6167:2;6147:18;;;6140:30;6206:29;6186:18;;;6179:57;6253:18;;7435:115:10;5926:351:13;7435:115:10;423:3;7568:11;:30;;7560:58;;;;-1:-1:-1;;;7560:58:10;;6484:2:13;7560:58:10;;;6466:21:13;6523:2;6503:18;;;6496:30;-1:-1:-1;;;6542:18:13;;;6535:45;6597:18;;7560:58:10;6282:339:13;7560:58:10;7651:2;7654;;7651:6;;;;;;;;:::i;:::-;;;;;;;;;;;:13;;;7636:11;:28;;7628:51;;;;-1:-1:-1;;;7628:51:10;;6828:2:13;7628:51:10;;;6810:21:13;6867:2;6847:18;;;6840:30;-1:-1:-1;;;6886:18:13;;;6879:40;6936:18;;7628:51:10;6626:334:13;7628:51:10;-1:-1:-1;;;;;7712:19:10;;;;;;:12;:19;;;;;;7697:34;;;7689:62;;;;-1:-1:-1;;;7689:62:10;;5030:2:13;7689:62:10;;;5012:21:13;5069:2;5049:18;;;5042:30;-1:-1:-1;;;5088:18:13;;;5081:45;5143:18;;7689:62:10;4828:339:13;7689:62:10;-1:-1:-1;;;;;7800:19:10;;;;;;:12;:19;;;;;:34;;7823:11;;7800:19;:34;;7823:11;;7800:34;:::i;:::-;;;;;;;;7874:14;7891:11;7874:28;;7912:18;7944:17;7971:9;8005:1;7983:2;7986;;7983:6;;;;;;;;:::i;:::-;;;;;;;;;;;:12;;:19;;;;:23;;;;:::i;:::-;7971:35;;8066:1480;8073:10;;8066:1480;;8116:2;;8111:8;;;;:4;:8;;;;;8120:2;:6;;8111:8;;8120:2;;:6;;;;;;:::i;:::-;;;;;;;;;;;:12;;8133:1;8120:15;;;;;;;;:::i;:::-;;;;;;;;;8111:25;;;;;;;;:::i;:::-;;;;;;;;;;;:30;;;8099:42;;8169:9;8159:6;:19;8155:1364;;8240:2;;8230:39;8235:8;;;:4;:8;;;;;8244:2;:6;;8282:9;;8230:4;;:39;8235:8;8244:2;:6;;;;;;:::i;:::-;;;;;;;;;;;:12;;8257:1;8244:15;;;;;;;;:::i;:::-;;;;;;;;;8235:25;;;;;;;;:::i;:::-;;;;;;;;;:33;:25;;;;;:33;;;;;-1:-1:-1;;;;;8235:33:10;8230:39;;;;;;;;;;;;;;;8270:2;;8230:43;;;;;;;:61;;:43;;8235:25;8230:61;;;;;:::i;:::-;;;;;;;;8460:2;8463;;8460:6;;;;;;;;:::i;:::-;;;;;;;;;;;:13;;;8425:4;:8;8430:2;;8425:8;;;;;;;;;;;8434:2;8437;;8434:6;;;;;;;;:::i;:::-;;;;;;;;;;;:12;;8447:1;8434:15;;;;;;;;:::i;:::-;;;;;;;;;8425:25;;;;;;;;:::i;:::-;;;;;;;;;;;:31;;;8393:9;:63;;;;:::i;:::-;8392:81;;;;:::i;:::-;8319:2;;8309:39;8314:8;;;:4;:8;;;;;8323:2;:6;;8309:4;;8319:2;8323:6;;;;;;:::i;:::-;;;;;;;;;;;:12;;8336:1;8323:15;;;;;;;;:::i;:::-;;;;;;;;;8314:25;;;;;;;;:::i;:::-;;;;;;;;;:33;:25;;;;;:33;;;-1:-1:-1;;;;;8314:33:10;8309:39;;;;;;;;;;;;;;;8349:2;;8309:43;;;;;;;;:78;;;:165;;:78;;8314:25;8309:165;;;;;:::i;:::-;;;;-1:-1:-1;;8557:2:10;;8552:8;;;;:4;:8;;;;;8561:2;:6;;8552:8;;8561:2;;:6;;;;;;:::i;:::-;;;;;;;;;;;:12;;8574:1;8561:15;;;;;;;;:::i;:::-;;;;;;;;;8552:25;;;;;;;;:::i;:::-;;;;;;;;;;;:31;;;8540:9;:43;;;;:::i;:::-;8525:59;;;;:::i;:::-;;;8652:9;8635:2;8638;;8635:6;;;;;;;;:::i;:::-;;;;;;;;;;;:13;;;:26;;;;;;;:::i;:::-;;;;-1:-1:-1;;8721:2:10;;8749:1;8716:8;;;:4;:8;;;;;8725:2;:6;;8749:1;;8716:8;;8725:2;;8721;8725:6;;;;;;:::i;:::-;;;;;;;;;;;:12;;8738:1;8725:15;;;;;;;;:::i;:::-;;;;;;;;;8716:25;;;;;;;;:::i;:::-;;;;;;;;;;;:30;;:34;;;;8836:2;8839;;8836:6;;;;;;;;:::i;:::-;;;;;;;;;;;:12;;:18;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;8882:9;8872:19;;;;;:::i;:::-;;;8155:1364;;;8972:2;;8962:39;8967:8;;;:4;:8;;;;;8976:2;:6;;9014;;8962:4;;:39;8967:8;8976:2;:6;;;;;;:::i;:::-;;;;;;;;;;;:12;;8989:1;8976:15;;;;;;;;:::i;:::-;;;;;;;;;8967:25;;;;;;;;:::i;:::-;;;;;;;;;:33;:25;;;;;:33;;;;;-1:-1:-1;;;;;8967:33:10;8962:39;;;;;;;;;;;;;;;9002:2;;8962:43;;;;;;;:58;;:43;;8967:25;8962:58;;;;;:::i;:::-;;;;;;;;9186:2;9189;;9186:6;;;;;;;;:::i;:::-;;;;;;;;;;;:13;;;9151:4;:8;9156:2;;9151:8;;;;;;;;;;;9160:2;9163;;9160:6;;;;;;;;:::i;:::-;;;;;;;;;;;:12;;9173:1;9160:15;;;;;;;;:::i;:::-;;;;;;;;;9151:25;;;;;;;;:::i;:::-;;;;;;;;;;;:31;;;9122:6;:60;;;;:::i;:::-;9121:78;;;;:::i;:::-;9048:2;;9038:39;9043:8;;;:4;:8;;;;;9052:2;:6;;9038:4;;9048:2;9052:6;;;;;;:::i;:::-;;;;;;;;;;;:12;;9065:1;9052:15;;;;;;;;:::i;:::-;;;;;;;;;9043:25;;;;;;;;:::i;:::-;;;;;;;;;:33;:25;;;;;:33;;;-1:-1:-1;;;;;9043:33:10;9038:39;;;;;;;;;;;;;;;9078:2;;9038:43;;;;;;;;:78;;;:162;;:78;;9043:25;9038:162;;;;;:::i;:::-;;;;-1:-1:-1;;9280:2:10;;9275:8;;;;:4;:8;;;;;9284:2;:6;;9275:8;;9284:2;;:6;;;;;;:::i;:::-;;;;;;;;;;;:12;;9297:1;9284:15;;;;;;;;:::i;:::-;;;;;;;;;9275:25;;;;;;;;:::i;:::-;;;;;;;;;;;:31;;;9266:6;:40;;;;:::i;:::-;9251:56;;;;:::i;:::-;;;9375:6;9358:2;9361;;9358:6;;;;;;;;:::i;:::-;;;;;;;;;;;:13;;;:23;;;;;;;:::i;:::-;;;;-1:-1:-1;;9441:2:10;;9436:8;;;;:4;:8;;;;;9445:2;:6;;9470;;9441:2;9445:6;;;;;;:::i;:::-;;;;;;;;;;;:12;;9458:1;9445:15;;;;;;;;:::i;:::-;;;;;;;;;9436:25;;;;;;;;:::i;:::-;;;;;;;;;;;:30;;;:40;;;;;;;:::i;:::-;;;;-1:-1:-1;9503:1:10;;-1:-1:-1;;8155:1364:10;9532:3;;;;:::i;:::-;;;;8066:1480;;;9580:13;15200:4;15189:8;:15;14561:650;9580:13;9755:8;;9717:22;9755:8;9717:11;:22;:::i;:::-;9704:35;;:10;:35;:::i;:::-;9703:60;;;;:::i;:::-;-1:-1:-1;;;;;9678:11:10;;;;;;:4;:11;;;;;;;;9690:2;;9678:15;;;;;;;:86;;:15;;:11;:86;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;;;9774:11:10;;;;;;;;:4;:11;;;;;;;;9786:2;;9774:15;;;;;;;:20;;:41;;-1:-1:-1;;9774:41:10;9797:18;9774:41;;;-1:-1:-1;;;6994:2828:10:o;1395:44::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1395:44:10;;-1:-1:-1;;;;;;1395:44:10;;:::o;15694:113::-;15741:7;15784:15;15768:2;15771;;15768:6;;;;;;;;:::i;:::-;;;;;;;;;;;:13;;;:31;;;;:::i;:::-;15760:40;;15694:113;:::o;5513:1475::-;5710:10;5678:21;5752:6;;;;;:30;;;;;;;:::i;:::-;;5731:107;;;;-1:-1:-1;;;5731:107:10;;7440:2:13;5731:107:10;;;7422:21:13;7479:2;7459:18;;;7452:30;7518:32;7498:18;;;7491:60;7568:18;;5731:107:10;7238:354:13;5731:107:10;5893:17;-1:-1:-1;;;;;5869:11:10;;;;;;:4;:11;;;;;;;;5881:2;;5869:15;;;;;;;:20;;;;;:41;;;;;;;;:::i;:::-;;5848:116;;;;-1:-1:-1;;;5848:116:10;;7799:2:13;5848:116:10;;;7781:21:13;7838:2;7818:18;;;7811:30;7877;7857:18;;;7850:58;7925:18;;5848:116:10;7597:352:13;5848:116:10;-1:-1:-1;;;;;5995:11:10;;6027:1;5995:11;;;:4;:11;;;;;;;;6007:2;;5995:15;;;;;;;:29;;;5974:118;;;;-1:-1:-1;;;5974:118:10;;8156:2:13;5974:118:10;;;8138:21:13;8195:2;8175:18;;;8168:30;8234:34;8214:18;;;8207:62;-1:-1:-1;;;8285:18:13;;;8278:36;8331:19;;5974:118:10;7954:402:13;5974:118:10;6102:6;:31;;-1:-1:-1;;6102:31:10;6111:22;6102:31;;;-1:-1:-1;;;;;6247:11:10;;;;;:4;:11;;;;;;;;6259:2;;6247:15;;;;;;;:29;;;6224:19;;;:12;:19;;;;;:52;;6247:29;;6224:19;;:52;;6247:29;;6224:52;:::i;:::-;;;;-1:-1:-1;;;;;;;6286:11:10;;6318:1;6286:11;;;:4;:11;;;;;;;;6298:2;;;6286:15;;;;;;:29;;:33;;;6409:2;6406;:6;;:2;;6409;6406:6;;;;;;:::i;:::-;;;;;;;;;;;:12;;6377:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6428:9;6456;6451:389;6475:9;:16;6471:1;:20;6451:389;;;6550:5;-1:-1:-1;;;;;6516:39:10;:4;:8;6521:2;;6516:8;;;;;;;;;;;6525:9;6535:1;6525:12;;;;;;;;:::i;:::-;;;;;;;6516:22;;;;;;;;:::i;:::-;;;;;;;;;:30;:22;;;;;:30;;-1:-1:-1;;;;;6516:30:10;:39;6512:318;;6646:9;6656:1;6646:12;;;;;;;;:::i;:::-;;;;;;;6628:2;6631;;6628:6;;;;;;;;:::i;:::-;;;;;;;;;;;:12;;6641:1;6628:15;;;;;;;;:::i;:::-;;;;;;;;;;:30;6729:3;;;;:::i;:::-;;;;6512:318;;;6793:2;;6788:8;;;;:4;:8;;;;;6797:12;;:9;;6807:1;;6797:12;;;;;;:::i;:::-;;;;;;;6788:22;;;;;;;;:::i;:::-;;;;;;;;;;;:27;;;6771:2;6774;;6771:6;;;;;;;;:::i;:::-;;;;;;;;;;;:13;;;:44;;;;;;;:::i;:::-;;;;-1:-1:-1;;6512:318:10;6493:3;;;;:::i;:::-;;;;6451:389;;;;6854:9;6849:94;6892:1;6873:9;:16;:20;;;;:::i;:::-;6869:1;:24;6849:94;;;6914:2;6917;;6914:6;;;;;;;;:::i;:::-;;;;;;;;;;;:12;;:18;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;6895:3;;;;;:::i;:::-;;;;6849:94;;;-1:-1:-1;;6961:20:10;6952:29;;-1:-1:-1;;6952:29:10;;;-1:-1:-1;;5513:1475:10:o;15217:154::-;476:3;15269:9;:29;;15261:56;;;;-1:-1:-1;;;15261:56:10;;8703:2:13;15261:56:10;;;8685:21:13;8742:2;8722:18;;;8715:30;-1:-1:-1;;;8761:18:13;;;8754:44;8815:18;;15261:56:10;8501:338:13;15261:56:10;15340:10;15327:24;;;;:12;:24;;;;;:37;;15355:9;;15327:24;:37;;15355:9;;15327:37;:::i;:::-;;;;-1:-1:-1;;15217:154:10:o;10907:2152::-;11019:10;11003:13;11059:11;;;:4;:11;;;;;;;;11071:2;;11059:15;;;;;;;:20;;;;;11119:18;11110:5;:27;;;;;;;;:::i;:::-;;:57;;;-1:-1:-1;11150:17:10;11141:5;:26;;;;;;;;:::i;:::-;;11110:57;11089:124;;;;-1:-1:-1;;;11089:124:10;;9046:2:13;11089:124:10;;;9028:21:13;9085:2;9065:18;;;9058:30;-1:-1:-1;;;9104:18:13;;;9097:50;9164:18;;11089:124:10;8844:344:13;11089:124:10;11261:15;11244:2;11247;;11244:6;;;;;;;;:::i;:::-;;;;;;;;;;;:13;;;:32;;11223:108;;;;-1:-1:-1;;;11223:108:10;;9395:2:13;11223:108:10;;;9377:21:13;9434:2;9414:18;;;9407:30;9473:31;9453:18;;;9446:59;9522:18;;11223:108:10;9193:353:13;11223:108:10;11358:21;11349:5;:30;;;;;;;;:::i;:::-;;;11341:66;;;;-1:-1:-1;;;11341:66:10;;9753:2:13;11341:66:10;;;9735:21:13;9792:2;9772:18;;;9765:30;9831:25;9811:18;;;9804:53;9874:18;;11341:66:10;9551:347:13;11341:66:10;-1:-1:-1;;;;;11433:11:10;;11417:13;11433:11;;;:4;:11;;;;;;;;11445:2;;11433:15;;;;;;;:20;11481:2;:6;;11433:20;;11417:13;11481:2;;:6;;;;;;:::i;:::-;;;;;;;;;;;;;;:13;;-1:-1:-1;11517:17:10;11508:5;:26;;;;;;;;:::i;:::-;;11504:279;;;11566:1;11558:5;:9;11550:64;;;;-1:-1:-1;;;11550:64:10;;10105:2:13;11550:64:10;;;10087:21:13;10144:2;10124:18;;;10117:30;10183:34;10163:18;;;10156:62;-1:-1:-1;;;10234:18:13;;;10227:40;10284:19;;11550:64:10;9903:406:13;11550:64:10;11647:7;11636:8;;:18;11628:48;;;;-1:-1:-1;;;11628:48:10;;10516:2:13;11628:48:10;;;10498:21:13;10555:2;10535:18;;;10528:30;-1:-1:-1;;;10574:18:13;;;10567:47;10631:18;;11628:48:10;10314:341:13;11628:48:10;-1:-1:-1;;;;;11694:11:10;;11726:1;11694:11;;;:4;:11;;;;;;;;11706:2;;11694:15;;;;;;;:29;;;:33;11690:83;;11747:11;:9;:11::i;:::-;11805:18;11796:5;:27;;;;;;;;:::i;:::-;;11792:1207;;;11854:7;11843:8;;:18;11839:584;;;12089:15;12097:7;12089:5;:15;:::i;:::-;-1:-1:-1;;;;;12066:19:10;;;;;;:12;:19;;;;;:38;;:19;;;:38;;;;;:::i;:::-;;;;-1:-1:-1;12192:15:10;;-1:-1:-1;12200:7:10;12192:5;:15;:::i;:::-;12172:17;:35;11792:1207;;11839:584;-1:-1:-1;;;;;12287:19:10;;;;;;:12;:19;;;;;:28;;12310:5;;12287:19;:28;;12310:5;;12287:28;:::i;:::-;;;;-1:-1:-1;;12383:17:10;:25;;;11792:1207;;;12468:7;12457:8;;:18;12453:498;;;12800:7;12767:8;;12757:7;:18;;;;:::i;:::-;12748:28;;:5;:28;:::i;:::-;12747:60;;;;:::i;:::-;-1:-1:-1;;;;;12723:19:10;;;;;;:12;:19;;;;;:85;;:19;;;:85;;;;;:::i;:::-;;;;-1:-1:-1;;12916:8:10;;12929:7;;12906:18;;12929:7;12906:18;:::i;:::-;12897:28;;:5;:28;:::i;:::-;12896:40;;;;:::i;:::-;12876:17;:60;12453:498;-1:-1:-1;;;;;;;;13008:11:10;;;;;:4;:11;;;;;;;;13020:2;;13008:15;;;;;;;:20;;:44;;-1:-1:-1;;13008:44:10;13031:21;13008:44;;;10907:2152::o;15486:95::-;15527:16;15562:2;15565;;15562:6;;;;;;;;:::i;:::-;;;;;;;;;;;:12;;15555:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15486:95;:::o;9828:1073::-;9914:19;10059:1;10037:2;10040;;10037:6;;;;;;;;:::i;:::-;;;;;;;;;;;:12;;:19;;;;:23;10029:66;;;;-1:-1:-1;;;10029:66:10;;5769:2:13;10029:66:10;;;5751:21:13;5808:2;5788:18;;;5781:30;5847:32;5827:18;;;5820:60;5897:18;;10029:66:10;5567:354:13;10029:66:10;423:3;10113:11;:30;;10105:58;;;;-1:-1:-1;;;10105:58:10;;10862:2:13;10105:58:10;;;10844:21:13;10901:2;10881:18;;;10874:30;-1:-1:-1;;;10920:18:13;;;10913:45;10975:18;;10105:58:10;10660:339:13;10105:58:10;10196:2;10199;;10196:6;;;;;;;;:::i;:::-;;;;;;;;;;;:13;;;10181:11;:28;;10173:51;;;;-1:-1:-1;;;10173:51:10;;6828:2:13;10173:51:10;;;6810:21:13;6867:2;6847:18;;;6840:30;-1:-1:-1;;;6886:18:13;;;6879:40;6936:18;;10173:51:10;6626:334:13;10173:51:10;10234:14;10251:11;10234:28;;10272:18;10304:23;10337:9;10371:1;10349:2;10352;;10349:6;;;;;;;;:::i;:::-;;;;;;;;;;;:12;;:19;;;;:23;;;;:::i;:::-;10337:35;;10382:437;10389:10;;10382:437;;10438:2;;10433:8;;;;:4;:8;;;;;10442:2;:6;;10433:8;;10442:2;;:6;;;;;;:::i;:::-;;;;;;;;;;;:12;;10455:1;10442:15;;;;;;;;:::i;:::-;;;;;;;;;10433:25;;;;;;;;:::i;:::-;;;;;;;;;;;:30;;;10415:48;;10491:15;10481:6;:25;10477:315;;10584:2;;10579:8;;;;:4;:8;;;;;10588:2;:6;;10579:8;;10588:2;;:6;;;;;;:::i;:::-;;;;;;;;;;;:12;;10601:1;10588:15;;;;;;;;:::i;:::-;;;;;;;;;10579:25;;;;;;;;:::i;:::-;;;;;;;;;;;:31;;;10541:15;:69;;;;:::i;:::-;10526:85;;;;:::i;:::-;;-1:-1:-1;10629:25:10;10639:15;10629:25;;:::i;:::-;;;10477:315;;;10722:2;;10717:8;;;;:4;:8;;;;;10726:2;:6;;10717:8;;10726:2;;:6;;;;;;:::i;:::-;;;;;;;;;;;:12;;10739:1;10726:15;;;;;;;;:::i;:::-;;;;;;;;;10717:25;;;;;;;;:::i;:::-;;;;;;;;;;;:31;;;10708:6;:40;;;;:::i;:::-;10693:56;;;;:::i;:::-;;;10776:1;10767:10;;10477:315;10805:3;;;;:::i;:::-;;;;10382:437;;;10842:24;10855:11;10842:10;:24;:::i;:::-;10828:38;9828:1073;-1:-1:-1;;;;;;9828:1073:10:o;13065:1455::-;13215:12;13241:13;13279:1;13257:2;13260;;13257:6;;;;;;;;:::i;:::-;;;;;;;;;;;:12;;:19;;;;:23;;;;:::i;:::-;13241:39;;13290:11;13342:228;13356:5;13349:4;:12;13342:228;;;13400:1;13384:12;13391:5;13384:4;:12;:::i;:::-;13383:18;;;;:::i;:::-;13377:24;;13428:4;:8;13433:2;;13428:8;;;;;;;;;;;13437:2;13440;;13437:6;;;;;;;;:::i;:::-;;;;;;;;;;;:12;;13450:3;13437:17;;;;;;;;:::i;:::-;;;;;;;;;13428:27;;;;;;;;:::i;:::-;;;;;;;;;;;:33;;;13419:6;:42;13415:145;;;13488:7;:3;13494:1;13488:7;:::i;:::-;13481:14;;13342:228;;13415:145;13542:3;13534:11;;13342:228;;;13745:5;13737:4;:13;13733:188;;;13784:2;;13779:8;;;;:4;:8;;;;;13788:2;:6;;13779:8;;13788:2;;:6;;;;;;:::i;:::-;;;;;;;;;;;:12;;13801:4;13788:18;;;;;;;;:::i;:::-;;;;;;;;;13779:28;;;;;;;;:::i;:::-;;;;;;;;;;;:34;;;13770:6;:43;13766:145;;;13839:8;:4;13846:1;13839:8;:::i;:::-;13833:14;;13766:145;;;-1:-1:-1;13892:4:10;13766:145;14013:2;14016;;14013:6;;;;;;;;:::i;:::-;;;;;;;;;;;:12;;14049:1;14031:4;:8;14036:2;;14031:8;;;;;;;;;;;:15;;;;:19;;;;:::i;:::-;14013:38;;;;;;;;-1:-1:-1;14013:38:10;;;;;;;;;14074:2;;14071;:6;;:2;;14074;14071:6;;;;;;:::i;:::-;;;;;;;;;;;:12;;:19;;;;:23;;;;:::i;:::-;14065:3;:29;14061:353;;;14115:9;14149:1;14127:2;14130;;14127:6;;;;;;;;:::i;:::-;;;;;;;;;;;:12;;:19;;;;:23;;;;:::i;:::-;14115:35;;14110:186;14156:3;14152:1;:7;14110:186;;;14262:2;14265;;14262:6;;;;;;;;:::i;:::-;;;;;;;;;;;:12;;14279:1;14275;:5;;;;:::i;:::-;14262:19;;;;;;;;:::i;:::-;;;;;;;;;14244:2;14247;;14244:6;;;;;;;;:::i;:::-;;;;;;;;;;;:12;;14257:1;14244:15;;;;;;;;:::i;:::-;;;;;;;;;;:37;14161:3;;;;:::i;:::-;;;;14110:186;;;-1:-1:-1;14389:2:10;;14384:8;;;;:4;:8;;;;;:15;:19;;14402:1;;14384:19;:::i;:::-;14364:2;14367;;14364:6;;;;;;;;:::i;:::-;;;;;;;;;;;:12;;14377:3;14364:17;;;;;;;;:::i;:::-;;;;;;;;;;:39;13109:1411;;;13065:1455;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14:173:13;82:20;;-1:-1:-1;;;;;131:31:13;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:254::-;260:6;268;321:2;309:9;300:7;296:23;292:32;289:52;;;337:1;334;327:12;289:52;360:29;379:9;360:29;:::i;:::-;350:39;436:2;421:18;;;;408:32;;-1:-1:-1;;;192:254:13:o;451:127::-;512:10;507:3;503:20;500:1;493:31;543:4;540:1;533:15;567:4;564:1;557:15;583:485;798:25;;;786:2;771:18;;853:1;842:13;;832:144;;898:10;893:3;889:20;886:1;879:31;933:4;930:1;923:15;961:4;958:1;951:15;832:144;1007:2;992:18;;985:34;;;;1050:2;1035:18;1028:34;583:485;;-1:-1:-1;583:485:13:o;1073:180::-;1132:6;1185:2;1173:9;1164:7;1160:23;1156:32;1153:52;;;1201:1;1198;1191:12;1153:52;-1:-1:-1;1224:23:13;;1073:180;-1:-1:-1;1073:180:13:o;1764:248::-;1832:6;1840;1893:2;1881:9;1872:7;1868:23;1864:32;1861:52;;;1909:1;1906;1899:12;1861:52;-1:-1:-1;;1932:23:13;;;2002:2;1987:18;;;1974:32;;-1:-1:-1;1764:248:13:o;2367:632::-;2538:2;2590:21;;;2660:13;;2563:18;;;2682:22;;;2509:4;;2538:2;2761:15;;;;2735:2;2720:18;;;2509:4;2804:169;2818:6;2815:1;2812:13;2804:169;;;2879:13;;2867:26;;2948:15;;;;2913:12;;;;2840:1;2833:9;2804:169;;;-1:-1:-1;2990:3:13;;2367:632;-1:-1:-1;;;;;;2367:632:13:o;3004:186::-;3063:6;3116:2;3104:9;3095:7;3091:23;3087:32;3084:52;;;3132:1;3129;3122:12;3084:52;3155:29;3174:9;3155:29;:::i;:::-;3145:39;3004:186;-1:-1:-1;;;3004:186:13:o;3195:127::-;3256:10;3251:3;3247:20;3244:1;3237:31;3287:4;3284:1;3277:15;3311:4;3308:1;3301:15;3327:128;3367:3;3398:1;3394:6;3391:1;3388:13;3385:39;;;3404:18;;:::i;:::-;-1:-1:-1;3440:9:13;;3327:128::o;3460:127::-;3521:10;3516:3;3512:20;3509:1;3502:31;3552:4;3549:1;3542:15;3576:4;3573:1;3566:15;3592:125;3632:4;3660:1;3657;3654:8;3651:34;;;3665:18;;:::i;:::-;-1:-1:-1;3702:9:13;;3592:125::o;3722:402::-;3924:2;3906:21;;;3963:2;3943:18;;;3936:30;4002:34;3997:2;3982:18;;3975:62;-1:-1:-1;;;4068:2:13;4053:18;;4046:36;4114:3;4099:19;;3722:402::o;5172:168::-;5212:7;5278:1;5274;5270:6;5266:14;5263:1;5260:21;5255:1;5248:9;5241:17;5237:45;5234:71;;;5285:18;;:::i;:::-;-1:-1:-1;5325:9:13;;5172:168::o;5345:217::-;5385:1;5411;5401:132;;5455:10;5450:3;5446:20;5443:1;5436:31;5490:4;5487:1;5480:15;5518:4;5515:1;5508:15;5401:132;-1:-1:-1;5547:9:13;;5345:217::o;6965:127::-;7026:10;7021:3;7017:20;7014:1;7007:31;7057:4;7054:1;7047:15;7081:4;7078:1;7071:15;7097:136;7136:3;7164:5;7154:39;;7173:18;;:::i;:::-;-1:-1:-1;;;7209:18:13;;7097:136::o;8361:135::-;8400:3;-1:-1:-1;;8421:17:13;;8418:43;;;8441:18;;:::i;:::-;-1:-1:-1;8488:1:13;8477:13;;8361:135::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    239,
    16708
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x114 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7B3C4BAA GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xD32CB0FE GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xD32CB0FE EQ PUSH2 0x31C JUMPI DUP1 PUSH4 0xD36DEDD2 EQ PUSH2 0x331 JUMPI DUP1 PUSH4 0xF14E96F1 EQ PUSH2 0x353 JUMPI DUP1 PUSH4 0xF6702356 EQ PUSH2 0x373 JUMPI DUP1 PUSH4 0xFF186B2E EQ PUSH2 0x3A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7B3C4BAA EQ PUSH2 0x284 JUMPI DUP1 PUSH4 0x7E7F320D EQ PUSH2 0x2C8 JUMPI DUP1 PUSH4 0x9435C887 EQ PUSH2 0x2DD JUMPI DUP1 PUSH4 0xBF152765 EQ PUSH2 0x2F2 JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0x314 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x547B25C1 GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x547B25C1 EQ PUSH2 0x201 JUMPI DUP1 PUSH4 0x57C90DE5 EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0x67C9B017 EQ PUSH2 0x236 JUMPI DUP1 PUSH4 0x704BBA69 EQ PUSH2 0x24E JUMPI DUP1 PUSH4 0x7B3889E7 EQ PUSH2 0x26E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x14FEAA9D EQ PUSH2 0x119 JUMPI DUP1 PUSH4 0x16ED0F72 EQ PUSH2 0x17B JUMPI DUP1 PUSH4 0x1BE0819C EQ PUSH2 0x19D JUMPI DUP1 PUSH4 0x387EADAE EQ PUSH2 0x1C6 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x125 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x163 PUSH2 0x134 CALLDATASIZE PUSH1 0x4 PUSH2 0x2846 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP2 PUSH1 0xFF AND SWAP1 DUP4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x172 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2886 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x187 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19B PUSH2 0x196 CALLDATASIZE PUSH1 0x4 PUSH2 0x28BC JUMP JUMPDEST PUSH1 0x1 SSTORE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND BALANCE JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x172 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E6 PUSH2 0x1E1 CALLDATASIZE PUSH1 0x4 PUSH2 0x28BC JUMP JUMPDEST PUSH2 0x3B6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x172 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19B PUSH2 0x3E9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x222 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19B PUSH2 0x231 CALLDATASIZE PUSH1 0x4 PUSH2 0x28D5 JUMP JUMPDEST PUSH2 0x78F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x242 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19B PUSH2 0xED7 PUSH1 0x1 SSTORE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19B PUSH2 0x269 CALLDATASIZE PUSH1 0x4 PUSH2 0x28BC JUMP JUMPDEST PUSH2 0xB25 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B8 PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x290 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A4 PUSH2 0x29F CALLDATASIZE PUSH1 0x4 PUSH2 0x28D5 JUMP JUMPDEST PUSH2 0x1667 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x172 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B8 PUSH2 0x16B2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19B PUSH2 0x16EB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1B8 JUMP JUMPDEST PUSH2 0x19B PUSH2 0x1B61 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x328 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19B PUSH2 0x1BCA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x346 PUSH2 0x1FDE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x172 SWAP2 SWAP1 PUSH2 0x28F7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x35F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B8 PUSH2 0x36E CALLDATASIZE PUSH1 0x4 PUSH2 0x28BC JUMP JUMPDEST PUSH2 0x205A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B8 PUSH2 0x38E CALLDATASIZE PUSH1 0x4 PUSH2 0x293B JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B8 PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x3C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x4 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP3 POP DUP4 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xCA35B7D915458EF540ADE6068DFE2F44E8FA733C SWAP1 POP PUSH1 0x9 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x14A DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x672 DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP POP POP PUSH1 0x9 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x18C DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x528 DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP POP POP PUSH1 0x9 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x84 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x19C8 DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP POP POP PUSH1 0x9 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xC6 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x4074 DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP POP POP PUSH1 0x9 PUSH1 0x4 PUSH1 0x0 PUSH1 0x7 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP1 SLOAD PUSH2 0x67D SWAP3 SWAP2 SWAP1 PUSH2 0x2716 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x7 DUP1 SLOAD DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 PUSH1 0x1 SWAP1 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE SWAP1 SLOAD DUP3 MSTORE DUP2 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x2C5 SWAP3 SWAP1 PUSH2 0x6CF SWAP1 DUP5 SWAP1 PUSH2 0x2973 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x65D6 PUSH1 0x6 PUSH1 0x7 SLOAD DUP2 SLOAD DUP2 LT PUSH2 0x6EE JUMPI PUSH2 0x6EE PUSH2 0x298B JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x70E SWAP2 SWAP1 PUSH2 0x2973 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH1 0x2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x7 SLOAD PUSH1 0x6 DUP1 SLOAD SWAP1 SWAP2 SWAP1 DUP2 LT PUSH2 0x750 JUMPI PUSH2 0x750 PUSH2 0x298B JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x3 ADD SWAP1 PUSH1 0x4 PUSH2 0x76F SWAP3 SWAP2 SWAP1 PUSH2 0x279C JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH3 0x186A0 SWAP1 SSTORE JUMP JUMPDEST CALLER PUSH2 0x79B PUSH1 0xA TIMESTAMP PUSH2 0x29A1 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x7 SLOAD DUP2 SLOAD DUP2 LT PUSH2 0x7B0 JUMPI PUSH2 0x7B0 PUSH2 0x298B JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x1 ADD SLOAD GT PUSH2 0x7E8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7DF SWAP1 PUSH2 0x29B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x7 SLOAD DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x827 JUMPI PUSH2 0x827 PUSH2 0x2870 JUMP JUMPDEST EQ ISZERO PUSH2 0x875 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x73656C6C6572206F66206F7074696F6E2063616E6E6F74206275790000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7DF JUMP JUMPDEST PUSH1 0x64 DUP3 LT ISZERO PUSH2 0x8B7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x4D696E2073697A65203D2031303 PUSH1 0x94 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7DF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x911 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0xDCDEE840CADCDEEACED040C6C2E6D PUSH1 0x8B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7DF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x7 DUP1 SLOAD DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 PUSH1 0x1 SWAP1 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE SWAP1 SLOAD DUP3 MSTORE DUP2 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x960 SWAP1 DUP5 SWAP1 PUSH2 0x2973 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x98D SWAP1 DUP5 SWAP1 PUSH2 0x29A1 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP4 PUSH1 0x6 PUSH1 0x7 SLOAD DUP2 SLOAD DUP2 LT PUSH2 0x9AC JUMPI PUSH2 0x9AC PUSH2 0x298B JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x0 ADD SLOAD DUP5 PUSH2 0x9C9 SWAP2 SWAP1 PUSH2 0x29FE JUMP JUMPDEST PUSH2 0x9D3 SWAP2 SWAP1 PUSH2 0x2A1D JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x6 PUSH1 0x7 SLOAD DUP2 SLOAD DUP2 LT PUSH2 0x9EB JUMPI PUSH2 0x9EB PUSH2 0x298B JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xA0B SWAP2 SWAP1 PUSH2 0x2973 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x7 DUP1 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD PUSH1 0x60 DUP2 ADD DUP4 MSTORE DUP10 DUP2 MSTORE DUP1 DUP5 ADD DUP8 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND SWAP5 DUP4 ADD SWAP5 DUP6 MSTORE DUP4 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP7 SSTORE SWAP5 DUP9 MSTORE SWAP6 SWAP1 SWAP7 KECCAK256 SWAP2 MLOAD PUSH1 0x3 SWAP1 SWAP6 MUL SWAP1 SWAP2 ADD SWAP4 DUP5 SSTORE MLOAD SWAP1 DUP4 ADD SSTORE MLOAD PUSH1 0x2 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP2 SWAP1 SWAP3 AND OR SWAP1 SSTORE SLOAD PUSH1 0x6 DUP1 SLOAD SWAP1 SWAP2 SWAP1 DUP2 LT PUSH2 0xA98 JUMPI PUSH2 0xA98 PUSH2 0x298B JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 PUSH1 0x4 SWAP1 SWAP3 MUL ADD ADD SLOAD PUSH2 0xB16 JUMPI PUSH1 0x6 PUSH1 0x7 SLOAD DUP2 SLOAD DUP2 LT PUSH2 0xAC5 JUMPI PUSH2 0xAC5 PUSH2 0x298B JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x3 ADD PUSH1 0x1 PUSH1 0x4 PUSH1 0x0 PUSH1 0x7 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP PUSH2 0xAFB SWAP2 SWAP1 PUSH2 0x29A1 JUMP JUMPDEST DUP2 SLOAD PUSH1 0x1 DUP2 ADD DUP4 SSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x20 SWAP1 SWAP3 KECCAK256 SWAP1 SWAP2 ADD SSTORE PUSH2 0xB1F JUMP JUMPDEST PUSH2 0xB1F DUP5 PUSH2 0x2398 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x7 SLOAD DUP2 SLOAD DUP2 LT PUSH2 0xB41 JUMPI PUSH2 0xB41 PUSH2 0x298B JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x3 ADD DUP1 SLOAD SWAP1 POP GT PUSH2 0xBA3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x63616E6E6F742073656C6C206966207468657265206973206E6F206269640000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7DF JUMP JUMPDEST PUSH2 0xBAE PUSH1 0xA TIMESTAMP PUSH2 0x29A1 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x7 SLOAD DUP2 SLOAD DUP2 LT PUSH2 0xBC3 JUMPI PUSH2 0xBC3 PUSH2 0x298B JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x1 ADD SLOAD GT PUSH2 0xBF2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7DF SWAP1 PUSH2 0x29B8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x7 SLOAD DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xC31 JUMPI PUSH2 0xC31 PUSH2 0x2870 JUMP JUMPDEST EQ ISZERO PUSH2 0xC7F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6275796572206F66206F7074696F6E2063616E6E6F742073656C6C0000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7DF JUMP JUMPDEST PUSH2 0x3E8 DUP3 LT ISZERO PUSH2 0xCC3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x4D696E2073697A65203D203130303 PUSH1 0x8C SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7DF JUMP JUMPDEST PUSH1 0x6 PUSH1 0x7 SLOAD DUP2 SLOAD DUP2 LT PUSH2 0xCD8 JUMPI PUSH2 0xCD8 PUSH2 0x298B JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x2 ADD SLOAD DUP3 GT ISZERO PUSH2 0xD26 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x6C6F7720737570706C79 PUSH1 0xB0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7DF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0xD80 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0xDCDEE840CADCDEEACED040C6C2E6D PUSH1 0x8B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7DF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0xDA8 SWAP1 DUP5 SWAP1 PUSH2 0x29A1 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP3 SWAP1 POP PUSH1 0x0 DUP1 DUP1 PUSH1 0x1 PUSH1 0x6 PUSH1 0x7 SLOAD DUP2 SLOAD DUP2 LT PUSH2 0xDCF JUMPI PUSH2 0xDCF PUSH2 0x298B JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x3 ADD DUP1 SLOAD SWAP1 POP PUSH2 0xDEE SWAP2 SWAP1 PUSH2 0x29A1 JUMP JUMPDEST SWAP1 POP JUMPDEST DUP4 ISZERO PUSH2 0x15C5 JUMPI PUSH1 0x7 SLOAD PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x6 DUP1 SLOAD SWAP2 SWAP3 SWAP1 SWAP2 DUP2 LT PUSH2 0xE1E JUMPI PUSH2 0xE1E PUSH2 0x298B JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x3 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xE40 JUMPI PUSH2 0xE40 PUSH2 0x298B JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP2 SLOAD DUP2 LT PUSH2 0xE5B JUMPI PUSH2 0xE5B PUSH2 0x298B JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x1 ADD SLOAD SWAP2 POP DUP2 DUP5 LT PUSH2 0x123B JUMPI PUSH1 0x7 SLOAD PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x6 DUP1 SLOAD DUP7 SWAP5 PUSH1 0x5 SWAP5 SWAP4 SWAP3 SWAP2 DUP2 LT PUSH2 0xEA1 JUMPI PUSH2 0xEA1 PUSH2 0x298B JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x3 ADD DUP6 DUP2 SLOAD DUP2 LT PUSH2 0xEC3 JUMPI PUSH2 0xEC3 PUSH2 0x298B JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP2 SLOAD DUP2 LT PUSH2 0xEDE JUMPI PUSH2 0xEDE PUSH2 0x298B JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x2 PUSH1 0x3 SWAP1 SWAP4 MUL ADD SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD DUP2 KECCAK256 PUSH1 0x7 SLOAD DUP3 MSTORE SWAP1 SWAP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0xF28 SWAP1 DUP5 SWAP1 PUSH2 0x2973 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x6 PUSH1 0x7 SLOAD DUP2 SLOAD DUP2 LT PUSH2 0xF44 JUMPI PUSH2 0xF44 PUSH2 0x298B JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x0 ADD SLOAD PUSH1 0x4 PUSH1 0x0 PUSH1 0x7 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 PUSH1 0x7 SLOAD DUP2 SLOAD DUP2 LT PUSH2 0xF80 JUMPI PUSH2 0xF80 PUSH2 0x298B JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x3 ADD DUP4 DUP2 SLOAD DUP2 LT PUSH2 0xFA2 JUMPI PUSH2 0xFA2 PUSH2 0x298B JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP2 SLOAD DUP2 LT PUSH2 0xFBD JUMPI PUSH2 0xFBD PUSH2 0x298B JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x0 ADD SLOAD DUP4 PUSH2 0xFDA SWAP2 SWAP1 PUSH2 0x29FE JUMP JUMPDEST PUSH2 0xFE4 SWAP2 SWAP1 PUSH2 0x2A1D JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x6 DUP1 SLOAD PUSH1 0x5 SWAP5 SWAP1 DUP2 LT PUSH2 0x100B JUMPI PUSH2 0x100B PUSH2 0x298B JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x3 ADD DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x102D JUMPI PUSH2 0x102D PUSH2 0x298B JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP2 SLOAD DUP2 LT PUSH2 0x1048 JUMPI PUSH2 0x1048 PUSH2 0x298B JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x2 PUSH1 0x3 SWAP1 SWAP4 MUL ADD DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE DUP4 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x40 SWAP3 DUP4 ADD DUP3 KECCAK256 PUSH1 0x7 SLOAD DUP4 MSTORE SWAP1 SWAP4 MSTORE SWAP1 DUP2 KECCAK256 SWAP1 SWAP2 ADD DUP1 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x1094 SWAP1 DUP5 SWAP1 PUSH2 0x29A1 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x7 SLOAD PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x6 DUP1 SLOAD SWAP2 SWAP3 SWAP1 SWAP2 DUP2 LT PUSH2 0x10C0 JUMPI PUSH2 0x10C0 PUSH2 0x298B JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x3 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x10E2 JUMPI PUSH2 0x10E2 PUSH2 0x298B JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP2 SLOAD DUP2 LT PUSH2 0x10FD JUMPI PUSH2 0x10FD PUSH2 0x298B JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x0 ADD SLOAD DUP3 PUSH2 0x111A SWAP2 SWAP1 PUSH2 0x29FE JUMP JUMPDEST PUSH2 0x1124 SWAP1 DUP5 PUSH2 0x2973 JUMP JUMPDEST SWAP3 POP DUP2 PUSH1 0x6 PUSH1 0x7 SLOAD DUP2 SLOAD DUP2 LT PUSH2 0x113C JUMPI PUSH2 0x113C PUSH2 0x298B JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x115C SWAP2 SWAP1 PUSH2 0x29A1 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x7 SLOAD PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x6 DUP1 SLOAD SWAP3 SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 DUP2 LT PUSH2 0x118B JUMPI PUSH2 0x118B PUSH2 0x298B JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x3 ADD DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x11AD JUMPI PUSH2 0x11AD PUSH2 0x298B JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP2 SLOAD DUP2 LT PUSH2 0x11C8 JUMPI PUSH2 0x11C8 PUSH2 0x298B JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x6 PUSH1 0x7 SLOAD DUP2 SLOAD DUP2 LT PUSH2 0x11F2 JUMPI PUSH2 0x11F2 PUSH2 0x298B JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x3 ADD DUP1 SLOAD DUP1 PUSH2 0x1212 JUMPI PUSH2 0x1212 PUSH2 0x2A3F JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP2 DUP5 PUSH2 0x1234 SWAP2 SWAP1 PUSH2 0x29A1 JUMP JUMPDEST SWAP4 POP PUSH2 0x15B3 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x6 DUP1 SLOAD DUP9 SWAP5 PUSH1 0x5 SWAP5 SWAP4 SWAP3 SWAP2 DUP2 LT PUSH2 0x1266 JUMPI PUSH2 0x1266 PUSH2 0x298B JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x3 ADD DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x1288 JUMPI PUSH2 0x1288 PUSH2 0x298B JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP2 SLOAD DUP2 LT PUSH2 0x12A3 JUMPI PUSH2 0x12A3 PUSH2 0x298B JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x2 PUSH1 0x3 SWAP1 SWAP4 MUL ADD SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD DUP2 KECCAK256 PUSH1 0x7 SLOAD DUP3 MSTORE SWAP1 SWAP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x12ED SWAP1 DUP5 SWAP1 PUSH2 0x2973 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x6 PUSH1 0x7 SLOAD DUP2 SLOAD DUP2 LT PUSH2 0x1309 JUMPI PUSH2 0x1309 PUSH2 0x298B JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x0 ADD SLOAD PUSH1 0x4 PUSH1 0x0 PUSH1 0x7 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 PUSH1 0x7 SLOAD DUP2 SLOAD DUP2 LT PUSH2 0x1345 JUMPI PUSH2 0x1345 PUSH2 0x298B JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x3 ADD DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1367 JUMPI PUSH2 0x1367 PUSH2 0x298B JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP2 SLOAD DUP2 LT PUSH2 0x1382 JUMPI PUSH2 0x1382 PUSH2 0x298B JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x0 ADD SLOAD DUP6 PUSH2 0x139F SWAP2 SWAP1 PUSH2 0x29FE JUMP JUMPDEST PUSH2 0x13A9 SWAP2 SWAP1 PUSH2 0x2A1D JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x6 DUP1 SLOAD PUSH1 0x5 SWAP5 SWAP1 DUP2 LT PUSH2 0x13D0 JUMPI PUSH2 0x13D0 PUSH2 0x298B JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x3 ADD DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x13F2 JUMPI PUSH2 0x13F2 PUSH2 0x298B JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP2 SLOAD DUP2 LT PUSH2 0x140D JUMPI PUSH2 0x140D PUSH2 0x298B JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x2 PUSH1 0x3 SWAP1 SWAP4 MUL ADD DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE DUP4 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x40 SWAP3 DUP4 ADD DUP3 KECCAK256 PUSH1 0x7 SLOAD DUP4 MSTORE SWAP1 SWAP4 MSTORE SWAP1 DUP2 KECCAK256 SWAP1 SWAP2 ADD DUP1 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x1459 SWAP1 DUP5 SWAP1 PUSH2 0x29A1 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x7 SLOAD PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x6 DUP1 SLOAD SWAP2 SWAP3 SWAP1 SWAP2 DUP2 LT PUSH2 0x1485 JUMPI PUSH2 0x1485 PUSH2 0x298B JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x3 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x14A7 JUMPI PUSH2 0x14A7 PUSH2 0x298B JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP2 SLOAD DUP2 LT PUSH2 0x14C2 JUMPI PUSH2 0x14C2 PUSH2 0x298B JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x0 ADD SLOAD DUP5 PUSH2 0x14DF SWAP2 SWAP1 PUSH2 0x29FE JUMP JUMPDEST PUSH2 0x14E9 SWAP1 DUP5 PUSH2 0x2973 JUMP JUMPDEST SWAP3 POP DUP4 PUSH1 0x6 PUSH1 0x7 SLOAD DUP2 SLOAD DUP2 LT PUSH2 0x1501 JUMPI PUSH2 0x1501 PUSH2 0x298B JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1521 SWAP2 SWAP1 PUSH2 0x29A1 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x7 SLOAD PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x6 DUP1 SLOAD DUP8 SWAP4 SWAP1 DUP2 LT PUSH2 0x154C JUMPI PUSH2 0x154C PUSH2 0x298B JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x3 ADD DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x156E JUMPI PUSH2 0x156E PUSH2 0x298B JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP2 SLOAD DUP2 LT PUSH2 0x1589 JUMPI PUSH2 0x1589 PUSH2 0x298B JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x15A9 SWAP2 SWAP1 PUSH2 0x29A1 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH1 0x0 SWAP5 POP POP JUMPDEST DUP1 PUSH2 0x15BD DUP2 PUSH2 0x2A55 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xDF1 JUMP JUMPDEST PUSH2 0x15D0 PUSH2 0xED7 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x15DD DUP2 DUP9 PUSH2 0x29FE JUMP JUMPDEST PUSH2 0x15E7 SWAP1 DUP6 PUSH2 0x2973 JUMP JUMPDEST PUSH2 0x15F1 SWAP2 SWAP1 PUSH2 0x2A1D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x7 SLOAD DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x1626 SWAP1 DUP5 SWAP1 PUSH2 0x2973 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x7 SLOAD DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x2 OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1683 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP4 POP SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 JUMP JUMPDEST PUSH1 0x0 TIMESTAMP PUSH1 0x6 PUSH1 0x7 SLOAD DUP2 SLOAD DUP2 LT PUSH2 0x16CA JUMPI PUSH2 0x16CA PUSH2 0x298B JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x1 ADD SLOAD PUSH2 0x16E6 SWAP2 SWAP1 PUSH2 0x29A1 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1704 JUMPI PUSH2 0x1704 PUSH2 0x2870 JUMP JUMPDEST EQ PUSH2 0x1751 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x636F6E747261637420627573792C2074727920616761696E206C617465720000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7DF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x7 SLOAD DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1790 JUMPI PUSH2 0x1790 PUSH2 0x2870 JUMP JUMPDEST EQ PUSH2 0x17DD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x796F75206E65656420746F20627579206F7074696F6E20666972737400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7DF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x7 SLOAD DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x1861 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x796F7572206F64657220686173206265656E2066696C6C6564206F722063616E PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x18D95B1B1959 PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x7DF JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR DUP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP1 DUP3 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x7 SLOAD DUP6 MSTORE DUP3 MSTORE DUP1 DUP5 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP3 DUP5 MSTORE PUSH1 0x3 SWAP1 SWAP2 MSTORE DUP3 KECCAK256 DUP1 SLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH2 0x18B0 SWAP1 DUP5 SWAP1 PUSH2 0x2973 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x7 DUP1 SLOAD DUP6 MSTORE SWAP3 MSTORE DUP3 KECCAK256 PUSH1 0x2 ADD DUP3 SWAP1 SSTORE SLOAD PUSH1 0x6 DUP1 SLOAD SWAP1 SWAP2 SWAP1 DUP2 LT PUSH2 0x18F6 JUMPI PUSH2 0x18F6 PUSH2 0x298B JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x3 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x1951 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x193D JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 DUP1 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x1ADB JUMPI DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x4 PUSH1 0x0 PUSH1 0x7 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1996 JUMPI PUSH2 0x1996 PUSH2 0x298B JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 SLOAD DUP2 LT PUSH2 0x19AE JUMPI PUSH2 0x19AE PUSH2 0x298B JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 PUSH1 0x3 SWAP1 SWAP3 MUL ADD ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1A3F JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x19E2 JUMPI PUSH2 0x19E2 PUSH2 0x298B JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x6 PUSH1 0x7 SLOAD DUP2 SLOAD DUP2 LT PUSH2 0x19FF JUMPI PUSH2 0x19FF PUSH2 0x298B JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x3 ADD DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1A21 JUMPI PUSH2 0x1A21 PUSH2 0x298B JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SSTORE DUP2 PUSH2 0x1A37 DUP2 PUSH2 0x2A6C JUMP JUMPDEST SWAP3 POP POP PUSH2 0x1AC9 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 MLOAD DUP5 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x1A64 JUMPI PUSH2 0x1A64 PUSH2 0x298B JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 SLOAD DUP2 LT PUSH2 0x1A7C JUMPI PUSH2 0x1A7C PUSH2 0x298B JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x1 ADD SLOAD PUSH1 0x6 PUSH1 0x7 SLOAD DUP2 SLOAD DUP2 LT PUSH2 0x1AA3 JUMPI PUSH2 0x1AA3 PUSH2 0x298B JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1AC3 SWAP2 SWAP1 PUSH2 0x29A1 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST DUP1 PUSH2 0x1AD3 DUP2 PUSH2 0x2A6C JUMP JUMPDEST SWAP2 POP POP PUSH2 0x195C JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST DUP2 DUP4 MLOAD PUSH2 0x1AEC SWAP2 SWAP1 PUSH2 0x29A1 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x1B51 JUMPI PUSH1 0x6 PUSH1 0x7 SLOAD DUP2 SLOAD DUP2 LT PUSH2 0x1B08 JUMPI PUSH2 0x1B08 PUSH2 0x298B JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x3 ADD DUP1 SLOAD DUP1 PUSH2 0x1B28 JUMPI PUSH2 0x1B28 PUSH2 0x2A3F JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP1 DUP1 PUSH2 0x1B49 SWAP1 PUSH2 0x2A6C JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1ADF JUMP JUMPDEST POP POP PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x1F4 CALLVALUE LT ISZERO PUSH2 0x1BA4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x4D696E2073697A65203D2035303 PUSH1 0x94 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7DF JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD CALLVALUE SWAP3 SWAP1 PUSH2 0x1BC3 SWAP1 DUP5 SWAP1 PUSH2 0x2973 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x7 SLOAD DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1C01 JUMPI PUSH2 0x1C01 PUSH2 0x2870 JUMP JUMPDEST EQ DUP1 PUSH2 0x1C1E JUMPI POP PUSH1 0x1 DUP2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1C1C JUMPI PUSH2 0x1C1C PUSH2 0x2870 JUMP JUMPDEST EQ JUMPDEST PUSH2 0x1C61 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x2CB7BA903430BB32903737903837B9B4BA34B7B7 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7DF JUMP JUMPDEST TIMESTAMP PUSH1 0x6 PUSH1 0x7 SLOAD DUP2 SLOAD DUP2 LT PUSH2 0x1C77 JUMPI PUSH2 0x1C77 PUSH2 0x298B JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x1 ADD SLOAD GT ISZERO PUSH2 0x1CD7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74206578657263697365206265666F726520657870697279000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7DF JUMP JUMPDEST PUSH1 0x3 DUP2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1CEB JUMPI PUSH2 0x1CEB PUSH2 0x2870 JUMP JUMPDEST EQ ISZERO PUSH2 0x1D39 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520616C7265616479206578636572636973656420000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7DF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x7 SLOAD DUP1 DUP6 MSTORE SWAP3 MSTORE DUP3 KECCAK256 SLOAD PUSH1 0x6 DUP1 SLOAD SWAP2 SWAP4 SWAP3 SWAP1 SWAP2 DUP2 LT PUSH2 0x1D76 JUMPI PUSH2 0x1D76 PUSH2 0x298B JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x4 SWAP1 SWAP2 MUL ADD SLOAD SWAP1 POP PUSH1 0x1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1D9D JUMPI PUSH2 0x1D9D PUSH2 0x2870 JUMP JUMPDEST EQ ISZERO PUSH2 0x1E81 JUMPI PUSH1 0x0 DUP3 GT PUSH2 0x1E06 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F206F6E652073656C6C20796F75722062696420616E64206E6F7468696E67 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x20746F20657870697265 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x7DF JUMP JUMPDEST DUP1 PUSH1 0x1 SLOAD LT PUSH2 0x1E4B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x45787069726520776F727468207A65726F PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7DF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x7 SLOAD DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD ISZERO PUSH2 0x1E81 JUMPI PUSH2 0x1E81 PUSH2 0x16EB JUMP JUMPDEST PUSH1 0x2 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1E95 JUMPI PUSH2 0x1E95 PUSH2 0x2870 JUMP JUMPDEST EQ ISZERO PUSH2 0x1F26 JUMPI DUP1 PUSH1 0x1 SLOAD LT ISZERO PUSH2 0x1EEF JUMPI PUSH2 0x1EAF DUP2 DUP4 PUSH2 0x2A1D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x1ED7 SWAP1 DUP5 SWAP1 PUSH2 0x2973 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x1EE7 SWAP1 POP DUP2 DUP4 PUSH2 0x2A1D JUMP JUMPDEST PUSH1 0xA SSTORE PUSH2 0x1FA7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x1F17 SWAP1 DUP5 SWAP1 PUSH2 0x2973 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0xA DUP3 SWAP1 SSTORE PUSH2 0x1FA7 JUMP JUMPDEST DUP1 PUSH1 0x1 SLOAD LT ISZERO PUSH2 0x1FA7 JUMPI DUP1 PUSH1 0x1 SLOAD DUP3 PUSH2 0x1F3F SWAP2 SWAP1 PUSH2 0x29A1 JUMP JUMPDEST PUSH2 0x1F49 SWAP1 DUP5 PUSH2 0x29FE JUMP JUMPDEST PUSH2 0x1F53 SWAP2 SWAP1 PUSH2 0x2A1D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x1F7B SWAP1 DUP5 SWAP1 PUSH2 0x2973 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 SLOAD DUP2 SWAP1 PUSH2 0x1F8F SWAP1 DUP3 PUSH2 0x29A1 JUMP JUMPDEST PUSH2 0x1F99 SWAP1 DUP5 PUSH2 0x29FE JUMP JUMPDEST PUSH2 0x1FA3 SWAP2 SWAP1 PUSH2 0x2A1D JUMP JUMPDEST PUSH1 0xA SSTORE JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x7 SLOAD DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x3 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH1 0x6 PUSH1 0x7 SLOAD DUP2 SLOAD DUP2 LT PUSH2 0x1FF5 JUMPI PUSH2 0x1FF5 PUSH2 0x298B JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x3 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x2050 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x203C JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x6 PUSH1 0x7 SLOAD DUP2 SLOAD DUP2 LT PUSH2 0x2072 JUMPI PUSH2 0x2072 PUSH2 0x298B JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x3 ADD DUP1 SLOAD SWAP1 POP GT PUSH2 0x20D4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x63616E6E6F742073656C6C206966207468657265206973206E6F206269640000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7DF JUMP JUMPDEST PUSH2 0x3E8 DUP3 LT ISZERO PUSH2 0x2118 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x6D696E2073697A65203D203130303 PUSH1 0x8C SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7DF JUMP JUMPDEST PUSH1 0x6 PUSH1 0x7 SLOAD DUP2 SLOAD DUP2 LT PUSH2 0x212D JUMPI PUSH2 0x212D PUSH2 0x298B JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x2 ADD SLOAD DUP3 GT ISZERO PUSH2 0x217B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x6C6F7720737570706C79 PUSH1 0xB0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7DF JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP PUSH1 0x0 DUP1 DUP1 PUSH1 0x1 PUSH1 0x6 PUSH1 0x7 SLOAD DUP2 SLOAD DUP2 LT PUSH2 0x219B JUMPI PUSH2 0x219B PUSH2 0x298B JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x3 ADD DUP1 SLOAD SWAP1 POP PUSH2 0x21BA SWAP2 SWAP1 PUSH2 0x29A1 JUMP JUMPDEST SWAP1 POP JUMPDEST DUP4 ISZERO PUSH2 0x2384 JUMPI PUSH1 0x7 SLOAD PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x6 DUP1 SLOAD SWAP2 SWAP3 SWAP1 SWAP2 DUP2 LT PUSH2 0x21EA JUMPI PUSH2 0x21EA PUSH2 0x298B JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x3 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x220C JUMPI PUSH2 0x220C PUSH2 0x298B JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP2 SLOAD DUP2 LT PUSH2 0x2227 JUMPI PUSH2 0x2227 PUSH2 0x298B JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x1 ADD SLOAD SWAP2 POP DUP2 DUP5 LT PUSH2 0x22E0 JUMPI PUSH1 0x7 SLOAD PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x6 DUP1 SLOAD SWAP2 SWAP3 SWAP1 SWAP2 DUP2 LT PUSH2 0x2269 JUMPI PUSH2 0x2269 PUSH2 0x298B JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x3 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x228B JUMPI PUSH2 0x228B PUSH2 0x298B JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP2 SLOAD DUP2 LT PUSH2 0x22A6 JUMPI PUSH2 0x22A6 PUSH2 0x298B JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x0 ADD SLOAD DUP3 PUSH2 0x22C3 SWAP2 SWAP1 PUSH2 0x29FE JUMP JUMPDEST PUSH2 0x22CD SWAP1 DUP5 PUSH2 0x2973 JUMP JUMPDEST SWAP3 POP PUSH2 0x22D9 DUP3 DUP6 PUSH2 0x29A1 JUMP JUMPDEST SWAP4 POP PUSH2 0x2372 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x6 DUP1 SLOAD SWAP2 SWAP3 SWAP1 SWAP2 DUP2 LT PUSH2 0x2307 JUMPI PUSH2 0x2307 PUSH2 0x298B JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x3 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x2329 JUMPI PUSH2 0x2329 PUSH2 0x298B JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP2 SLOAD DUP2 LT PUSH2 0x2344 JUMPI PUSH2 0x2344 PUSH2 0x298B JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x0 ADD SLOAD DUP5 PUSH2 0x2361 SWAP2 SWAP1 PUSH2 0x29FE JUMP JUMPDEST PUSH2 0x236B SWAP1 DUP5 PUSH2 0x2973 JUMP JUMPDEST SWAP3 POP PUSH1 0x0 SWAP4 POP JUMPDEST DUP1 PUSH2 0x237C DUP2 PUSH2 0x2A55 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x21BD JUMP JUMPDEST PUSH2 0x238E DUP7 DUP5 PUSH2 0x2A1D JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0x6 PUSH1 0x7 SLOAD DUP2 SLOAD DUP2 LT PUSH2 0x23B2 JUMPI PUSH2 0x23B2 PUSH2 0x298B JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x3 ADD DUP1 SLOAD SWAP1 POP PUSH2 0x23D1 SWAP2 SWAP1 PUSH2 0x29A1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP4 LT ISZERO PUSH2 0x2490 JUMPI PUSH1 0x2 PUSH2 0x23EA DUP4 DUP6 PUSH2 0x2973 JUMP JUMPDEST PUSH2 0x23F4 SWAP2 SWAP1 PUSH2 0x2A1D JUMP JUMPDEST SWAP1 POP PUSH1 0x4 PUSH1 0x0 PUSH1 0x7 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 PUSH1 0x7 SLOAD DUP2 SLOAD DUP2 LT PUSH2 0x2420 JUMPI PUSH2 0x2420 PUSH2 0x298B JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x3 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x2442 JUMPI PUSH2 0x2442 PUSH2 0x298B JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP2 SLOAD DUP2 LT PUSH2 0x245D JUMPI PUSH2 0x245D PUSH2 0x298B JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x0 ADD SLOAD DUP5 GT ISZERO PUSH2 0x2488 JUMPI PUSH2 0x2481 DUP2 PUSH1 0x1 PUSH2 0x2973 JUMP JUMPDEST SWAP3 POP PUSH2 0x23D6 JUMP JUMPDEST DUP1 SWAP2 POP PUSH2 0x23D6 JUMP JUMPDEST DUP2 DUP4 EQ ISZERO PUSH2 0x252A JUMPI PUSH1 0x7 SLOAD PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x6 DUP1 SLOAD SWAP2 SWAP3 SWAP1 SWAP2 DUP2 LT PUSH2 0x24BF JUMPI PUSH2 0x24BF PUSH2 0x298B JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x3 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x24E1 JUMPI PUSH2 0x24E1 PUSH2 0x298B JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP2 SLOAD DUP2 LT PUSH2 0x24FC JUMPI PUSH2 0x24FC PUSH2 0x298B JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x0 ADD SLOAD DUP5 GT ISZERO PUSH2 0x2527 JUMPI PUSH2 0x2520 DUP4 PUSH1 0x1 PUSH2 0x2973 JUMP JUMPDEST SWAP1 POP PUSH2 0x252A JUMP JUMPDEST POP DUP2 JUMPDEST PUSH1 0x6 PUSH1 0x7 SLOAD DUP2 SLOAD DUP2 LT PUSH2 0x253F JUMPI PUSH2 0x253F PUSH2 0x298B JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x3 ADD PUSH1 0x1 PUSH1 0x4 PUSH1 0x0 PUSH1 0x7 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP PUSH2 0x2575 SWAP2 SWAP1 PUSH2 0x29A1 JUMP JUMPDEST DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 SWAP4 DUP5 MSTORE PUSH1 0x20 SWAP1 SWAP4 KECCAK256 ADD SSTORE PUSH1 0x7 SLOAD PUSH1 0x6 DUP1 SLOAD SWAP1 SWAP2 SWAP1 DUP2 LT PUSH2 0x25A2 JUMPI PUSH2 0x25A2 PUSH2 0x298B JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x3 ADD DUP1 SLOAD SWAP1 POP PUSH2 0x25C1 SWAP2 SWAP1 PUSH2 0x29A1 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0xB1F JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x6 PUSH1 0x7 SLOAD DUP2 SLOAD DUP2 LT PUSH2 0x25E1 JUMPI PUSH2 0x25E1 PUSH2 0x298B JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x3 ADD DUP1 SLOAD SWAP1 POP PUSH2 0x2600 SWAP2 SWAP1 PUSH2 0x29A1 JUMP JUMPDEST SWAP1 POP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x26AE JUMPI PUSH1 0x6 PUSH1 0x7 SLOAD DUP2 SLOAD DUP2 LT PUSH2 0x2620 JUMPI PUSH2 0x2620 PUSH2 0x298B JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x3 ADD PUSH1 0x1 DUP3 PUSH2 0x263E SWAP2 SWAP1 PUSH2 0x29A1 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x264E JUMPI PUSH2 0x264E PUSH2 0x298B JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0x6 PUSH1 0x7 SLOAD DUP2 SLOAD DUP2 LT PUSH2 0x266E JUMPI PUSH2 0x266E PUSH2 0x298B JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x3 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x2690 JUMPI PUSH2 0x2690 PUSH2 0x298B JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SSTORE DUP1 PUSH2 0x26A6 DUP2 PUSH2 0x2A55 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2603 JUMP JUMPDEST POP PUSH1 0x7 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x26CD SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x29A1 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x7 SLOAD DUP2 SLOAD DUP2 LT PUSH2 0x26E2 JUMPI PUSH2 0x26E2 PUSH2 0x298B JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x3 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x2704 JUMPI PUSH2 0x2704 PUSH2 0x298B JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SSTORE POP POP POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x278C JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x3 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x278C JUMPI DUP3 SLOAD DUP3 SSTORE PUSH1 0x1 DUP1 DUP5 ADD SLOAD SWAP1 DUP4 ADD SSTORE PUSH1 0x2 DUP1 DUP5 ADD SLOAD SWAP1 DUP4 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x3 SWAP3 DUP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x2741 JUMP JUMPDEST POP PUSH2 0x2798 SWAP3 SWAP2 POP PUSH2 0x27E8 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x27DC JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x27DC JUMPI DUP3 MLOAD DUP3 SWAP1 PUSH1 0xFF AND SWAP1 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x27BC JUMP JUMPDEST POP PUSH2 0x2798 SWAP3 SWAP2 POP PUSH2 0x2815 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x2798 JUMPI PUSH1 0x0 DUP1 DUP3 SSTORE PUSH1 0x1 DUP3 ADD SSTORE PUSH1 0x2 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE PUSH1 0x3 ADD PUSH2 0x27E9 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x2798 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2816 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2841 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2859 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2862 DUP4 PUSH2 0x282A JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x60 DUP2 ADD PUSH1 0x4 DUP5 LT PUSH2 0x28AB JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 ADD MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x28CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x28E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x292F JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x2913 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x294D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2956 DUP3 PUSH2 0x282A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x2986 JUMPI PUSH2 0x2986 PUSH2 0x295D JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x29B3 JUMPI PUSH2 0x29B3 PUSH2 0x295D JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x416C72656164792065787069726564206F7220746F6F20636C6F736520746F20 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x657870697279 PUSH1 0xD0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x2A18 JUMPI PUSH2 0x2A18 PUSH2 0x295D JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2A3A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x2A64 JUMPI PUSH2 0x2A64 PUSH2 0x295D JUMP JUMPDEST POP PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x2A80 JUMPI PUSH2 0x2A80 PUSH2 0x295D JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE DUP3 PUSH24 0xA54DAA27D07DAA96374E05278011E1F3CA4A73135686AC18 0xC5 DELEGATECALL 0xAC 0xE SLOAD PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        239,
        16708
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        239,
        16708
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        239,
        16708
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "5": {
      "fn": null,
      "offset": [
        239,
        16708
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        239,
        16708
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "8": {
      "fn": null,
      "offset": [
        239,
        16708
      ],
      "op": "LT",
      "path": "10"
    },
    "9": {
      "fn": null,
      "offset": [
        239,
        16708
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x114"
    },
    "12": {
      "fn": null,
      "offset": [
        239,
        16708
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "13": {
      "fn": null,
      "offset": [
        239,
        16708
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        239,
        16708
      ],
      "op": "CALLDATALOAD",
      "path": "10"
    },
    "16": {
      "fn": null,
      "offset": [
        239,
        16708
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        239,
        16708
      ],
      "op": "SHR",
      "path": "10"
    },
    "19": {
      "fn": null,
      "offset": [
        239,
        16708
      ],
      "op": "DUP1",
      "path": "10"
    },
    "20": {
      "fn": null,
      "offset": [
        239,
        16708
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x7B3C4BAA"
    },
    "25": {
      "fn": null,
      "offset": [
        239,
        16708
      ],
      "op": "GT",
      "path": "10"
    },
    "26": {
      "fn": null,
      "offset": [
        239,
        16708
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xA0"
    },
    "29": {
      "fn": null,
      "offset": [
        239,
        16708
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "30": {
      "fn": null,
      "offset": [
        239,
        16708
      ],
      "op": "DUP1",
      "path": "10"
    },
    "31": {
      "fn": null,
      "offset": [
        239,
        16708
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xD32CB0FE"
    },
    "36": {
      "fn": null,
      "offset": [
        239,
        16708
      ],
      "op": "GT",
      "path": "10"
    },
    "37": {
      "fn": null,
      "offset": [
        239,
        16708
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x64"
    },
    "40": {
      "fn": null,
      "offset": [
        239,
        16708
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "41": {
      "fn": null,
      "offset": [
        239,
        16708
      ],
      "op": "DUP1",
      "path": "10"
    },
    "42": {
      "fn": null,
      "offset": [
        239,
        16708
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xD32CB0FE"
    },
    "47": {
      "fn": null,
      "offset": [
        239,
        16708
      ],
      "op": "EQ",
      "path": "10"
    },
    "48": {
      "fn": null,
      "offset": [
        239,
        16708
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x31C"
    },
    "51": {
      "fn": null,
      "offset": [
        239,
        16708
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "52": {
      "fn": null,
      "offset": [
        239,
        16708
      ],
      "op": "DUP1",
      "path": "10"
    },
    "53": {
      "fn": null,
      "offset": [
        239,
        16708
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xD36DEDD2"
    },
    "58": {
      "fn": null,
      "offset": [
        239,
        16708
      ],
      "op": "EQ",
      "path": "10"
    },
    "59": {
      "fn": null,
      "offset": [
        239,
        16708
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x331"
    },
    "62": {
      "fn": null,
      "offset": [
        239,
        16708
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "63": {
      "fn": null,
      "offset": [
        239,
        16708
      ],
      "op": "DUP1",
      "path": "10"
    },
    "64": {
      "fn": null,
      "offset": [
        239,
        16708
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xF14E96F1"
    },
    "69": {
      "fn": null,
      "offset": [
        239,
        16708
      ],
      "op": "EQ",
      "path": "10"
    },
    "70": {
      "fn": null,
      "offset": [
        239,
        16708
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x353"
    },
    "73": {
      "fn": null,
      "offset": [
        239,
        16708
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "74": {
      "fn": null,
      "offset": [
        239,
        16708
      ],
      "op": "DUP1",
      "path": "10"
    },
    "75": {
      "fn": null,
      "offset": [
        239,
        16708
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xF6702356"
    },
    "80": {
      "fn": null,
      "offset": [
        239,
        16708
      ],
      "op": "EQ",
      "path": "10"
    },
    "81": {
      "fn": null,
      "offset": [
        239,
        16708
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x373"
    },
    "84": {
      "fn": null,
      "offset": [
        239,
        16708
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "85": {
      "fn": null,
      "offset": [
        239,
        16708
      ],
      "op": "DUP1",
      "path": "10"
    },
    "86": {
      "fn": null,
      "offset": [
        239,
        16708
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xFF186B2E"
    },
    "91": {
      "fn": null,
      "offset": [
        239,
        16708
      ],
      "op": "EQ",
      "path": "10"
    },
    "92": {
      "fn": null,
      "offset": [
        239,
        16708
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3A0"
    },
    "95": {
      "fn": null,
      "offset": [
        239,
        16708
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "96": {
      "fn": null,
      "offset": [
        239,
        16708
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "98": {
      "fn": null,
      "offset": [
        239,
        16708
      ],
      "op": "DUP1",
      "path": "10"
    },
    "99": {
      "fn": null,
      "offset": [
        239,
        16708
      ],
      "op": "REVERT",
      "path": "10"
    },
    "100": {
      "fn": null,
      "offset": [
        239,
        16708
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "101": {
      "fn": null,
      "offset": [
        239,
        16708
      ],
      "op": "DUP1",
      "path": "10"
    },
    "102": {
      "fn": null,
      "offset": [
        239,
        16708
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x7B3C4BAA"
    },
    "107": {
      "fn": null,
      "offset": [
        239,
        16708
      ],
      "op": "EQ",
      "path": "10"
    },
    "108": {
      "fn": null,
      "offset": [
        239,
        16708
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x284"
    },
    "111": {
      "fn": null,
      "offset": [
        239,
        16708
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "112": {
      "fn": null,
      "offset": [
        239,
        16708
      ],
      "op": "DUP1",
      "path": "10"
    },
    "113": {
      "fn": null,
      "offset": [
        239,
        16708
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x7E7F320D"
    },
    "118": {
      "fn": null,
      "offset": [
        239,
        16708
      ],
      "op": "EQ",
      "path": "10"
    },
    "119": {
      "fn": null,
      "offset": [
        239,
        16708
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2C8"
    },
    "122": {
      "fn": null,
      "offset": [
        239,
        16708
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "123": {
      "fn": null,
      "offset": [
        239,
        16708
      ],
      "op": "DUP1",
      "path": "10"
    },
    "124": {
      "fn": null,
      "offset": [
        239,
        16708
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x9435C887"
    },
    "129": {
      "fn": null,
      "offset": [
        239,
        16708
      ],
      "op": "EQ",
      "path": "10"
    },
    "130": {
      "fn": null,
      "offset": [
        239,
        16708
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2DD"
    },
    "133": {
      "fn": null,
      "offset": [
        239,
        16708
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "134": {
      "fn": null,
      "offset": [
        239,
        16708
      ],
      "op": "DUP1",
      "path": "10"
    },
    "135": {
      "fn": null,
      "offset": [
        239,
        16708
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xBF152765"
    },
    "140": {
      "fn": null,
      "offset": [
        239,
        16708
      ],
      "op": "EQ",
      "path": "10"
    },
    "141": {
      "fn": null,
      "offset": [
        239,
        16708
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2F2"
    },
    "144": {
      "fn": null,
      "offset": [
        239,
        16708
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "145": {
      "fn": null,
      "offset": [
        239,
        16708
      ],
      "op": "DUP1",
      "path": "10"
    },
    "146": {
      "fn": null,
      "offset": [
        239,
        16708
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xD0E30DB0"
    },
    "151": {
      "fn": null,
      "offset": [
        239,
        16708
      ],
      "op": "EQ",
      "path": "10"
    },
    "152": {
      "fn": null,
      "offset": [
        239,
        16708
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x314"
    },
    "155": {
      "fn": null,
      "offset": [
        239,
        16708
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "156": {
      "fn": null,
      "offset": [
        239,
        16708
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "158": {
      "fn": null,
      "offset": [
        239,
        16708
      ],
      "op": "DUP1",
      "path": "10"
    },
    "159": {
      "fn": null,
      "offset": [
        239,
        16708
      ],
      "op": "REVERT",
      "path": "10"
    },
    "160": {
      "fn": null,
      "offset": [
        239,
        16708
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "161": {
      "fn": null,
      "offset": [
        239,
        16708
      ],
      "op": "DUP1",
      "path": "10"
    },
    "162": {
      "fn": null,
      "offset": [
        239,
        16708
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x547B25C1"
    },
    "167": {
      "fn": null,
      "offset": [
        239,
        16708
      ],
      "op": "GT",
      "path": "10"
    },
    "168": {
      "fn": null,
      "offset": [
        239,
        16708
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xE7"
    },
    "171": {
      "fn": null,
      "offset": [
        239,
        16708
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "172": {
      "fn": null,
      "offset": [
        239,
        16708
      ],
      "op": "DUP1",
      "path": "10"
    },
    "173": {
      "fn": null,
      "offset": [
        239,
        16708
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x547B25C1"
    },
    "178": {
      "fn": null,
      "offset": [
        239,
        16708
      ],
      "op": "EQ",
      "path": "10"
    },
    "179": {
      "fn": null,
      "offset": [
        239,
        16708
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x201"
    },
    "182": {
      "fn": null,
      "offset": [
        239,
        16708
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "183": {
      "fn": null,
      "offset": [
        239,
        16708
      ],
      "op": "DUP1",
      "path": "10"
    },
    "184": {
      "fn": null,
      "offset": [
        239,
        16708
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x57C90DE5"
    },
    "189": {
      "fn": null,
      "offset": [
        239,
        16708
      ],
      "op": "EQ",
      "path": "10"
    },
    "190": {
      "fn": null,
      "offset": [
        239,
        16708
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x216"
    },
    "193": {
      "fn": null,
      "offset": [
        239,
        16708
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "194": {
      "fn": null,
      "offset": [
        239,
        16708
      ],
      "op": "DUP1",
      "path": "10"
    },
    "195": {
      "fn": null,
      "offset": [
        239,
        16708
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x67C9B017"
    },
    "200": {
      "fn": null,
      "offset": [
        239,
        16708
      ],
      "op": "EQ",
      "path": "10"
    },
    "201": {
      "fn": null,
      "offset": [
        239,
        16708
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x236"
    },
    "204": {
      "fn": null,
      "offset": [
        239,
        16708
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "205": {
      "fn": null,
      "offset": [
        239,
        16708
      ],
      "op": "DUP1",
      "path": "10"
    },
    "206": {
      "fn": null,
      "offset": [
        239,
        16708
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x704BBA69"
    },
    "211": {
      "fn": null,
      "offset": [
        239,
        16708
      ],
      "op": "EQ",
      "path": "10"
    },
    "212": {
      "fn": null,
      "offset": [
        239,
        16708
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x24E"
    },
    "215": {
      "fn": null,
      "offset": [
        239,
        16708
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "216": {
      "fn": null,
      "offset": [
        239,
        16708
      ],
      "op": "DUP1",
      "path": "10"
    },
    "217": {
      "fn": null,
      "offset": [
        239,
        16708
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x7B3889E7"
    },
    "222": {
      "fn": null,
      "offset": [
        239,
        16708
      ],
      "op": "EQ",
      "path": "10"
    },
    "223": {
      "fn": null,
      "offset": [
        239,
        16708
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x26E"
    },
    "226": {
      "fn": null,
      "offset": [
        239,
        16708
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "227": {
      "fn": null,
      "offset": [
        239,
        16708
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "229": {
      "fn": null,
      "offset": [
        239,
        16708
      ],
      "op": "DUP1",
      "path": "10"
    },
    "230": {
      "fn": null,
      "offset": [
        239,
        16708
      ],
      "op": "REVERT",
      "path": "10"
    },
    "231": {
      "fn": null,
      "offset": [
        239,
        16708
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "232": {
      "fn": null,
      "offset": [
        239,
        16708
      ],
      "op": "DUP1",
      "path": "10"
    },
    "233": {
      "fn": null,
      "offset": [
        239,
        16708
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x14FEAA9D"
    },
    "238": {
      "fn": null,
      "offset": [
        239,
        16708
      ],
      "op": "EQ",
      "path": "10"
    },
    "239": {
      "fn": null,
      "offset": [
        239,
        16708
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x119"
    },
    "242": {
      "fn": null,
      "offset": [
        239,
        16708
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "243": {
      "fn": null,
      "offset": [
        239,
        16708
      ],
      "op": "DUP1",
      "path": "10"
    },
    "244": {
      "fn": null,
      "offset": [
        239,
        16708
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x16ED0F72"
    },
    "249": {
      "fn": null,
      "offset": [
        239,
        16708
      ],
      "op": "EQ",
      "path": "10"
    },
    "250": {
      "fn": null,
      "offset": [
        239,
        16708
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x17B"
    },
    "253": {
      "fn": null,
      "offset": [
        239,
        16708
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "254": {
      "fn": null,
      "offset": [
        239,
        16708
      ],
      "op": "DUP1",
      "path": "10"
    },
    "255": {
      "fn": null,
      "offset": [
        239,
        16708
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x1BE0819C"
    },
    "260": {
      "fn": null,
      "offset": [
        239,
        16708
      ],
      "op": "EQ",
      "path": "10"
    },
    "261": {
      "fn": null,
      "offset": [
        239,
        16708
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x19D"
    },
    "264": {
      "fn": null,
      "offset": [
        239,
        16708
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "265": {
      "fn": null,
      "offset": [
        239,
        16708
      ],
      "op": "DUP1",
      "path": "10"
    },
    "266": {
      "fn": null,
      "offset": [
        239,
        16708
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x387EADAE"
    },
    "271": {
      "fn": null,
      "offset": [
        239,
        16708
      ],
      "op": "EQ",
      "path": "10"
    },
    "272": {
      "fn": null,
      "offset": [
        239,
        16708
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1C6"
    },
    "275": {
      "fn": null,
      "offset": [
        239,
        16708
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "276": {
      "fn": null,
      "offset": [
        239,
        16708
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "277": {
      "fn": null,
      "offset": [
        239,
        16708
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "279": {
      "fn": null,
      "offset": [
        239,
        16708
      ],
      "op": "DUP1",
      "path": "10"
    },
    "280": {
      "first_revert": true,
      "fn": null,
      "offset": [
        239,
        16708
      ],
      "op": "REVERT",
      "path": "10"
    },
    "281": {
      "offset": [
        2063,
        2126
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "282": {
      "fn": null,
      "offset": [
        2063,
        2126
      ],
      "op": "CALLVALUE",
      "path": "10"
    },
    "283": {
      "fn": null,
      "offset": [
        2063,
        2126
      ],
      "op": "DUP1",
      "path": "10"
    },
    "284": {
      "fn": null,
      "offset": [
        2063,
        2126
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "285": {
      "fn": null,
      "offset": [
        2063,
        2126
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x125"
    },
    "288": {
      "fn": null,
      "offset": [
        2063,
        2126
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "289": {
      "fn": null,
      "offset": [
        2063,
        2126
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "291": {
      "fn": null,
      "offset": [
        2063,
        2126
      ],
      "op": "DUP1",
      "path": "10"
    },
    "292": {
      "fn": null,
      "offset": [
        2063,
        2126
      ],
      "op": "REVERT",
      "path": "10"
    },
    "293": {
      "fn": null,
      "offset": [
        2063,
        2126
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "294": {
      "op": "POP"
    },
    "295": {
      "offset": [
        2063,
        2126
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x163"
    },
    "298": {
      "fn": null,
      "offset": [
        2063,
        2126
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x134"
    },
    "301": {
      "fn": null,
      "offset": [
        2063,
        2126
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "302": {
      "fn": null,
      "offset": [
        2063,
        2126
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "304": {
      "fn": null,
      "offset": [
        2063,
        2126
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2846"
    },
    "307": {
      "fn": null,
      "jump": "i",
      "offset": [
        2063,
        2126
      ],
      "op": "JUMP",
      "path": "10"
    },
    "308": {
      "fn": null,
      "offset": [
        2063,
        2126
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "309": {
      "fn": null,
      "offset": [
        2063,
        2126
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x5"
    },
    "311": {
      "fn": null,
      "offset": [
        2063,
        2126
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "313": {
      "fn": null,
      "offset": [
        2063,
        2126
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "314": {
      "fn": null,
      "offset": [
        2063,
        2126
      ],
      "op": "DUP2",
      "path": "10"
    },
    "315": {
      "fn": null,
      "offset": [
        2063,
        2126
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "316": {
      "fn": null,
      "offset": [
        2063,
        2126
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "318": {
      "fn": null,
      "offset": [
        2063,
        2126
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "319": {
      "fn": null,
      "offset": [
        2063,
        2126
      ],
      "op": "DUP4",
      "path": "10"
    },
    "320": {
      "fn": null,
      "offset": [
        2063,
        2126
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "321": {
      "fn": null,
      "offset": [
        2063,
        2126
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "323": {
      "fn": null,
      "offset": [
        2063,
        2126
      ],
      "op": "DUP1",
      "path": "10"
    },
    "324": {
      "fn": null,
      "offset": [
        2063,
        2126
      ],
      "op": "DUP5",
      "path": "10"
    },
    "325": {
      "fn": null,
      "offset": [
        2063,
        2126
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "326": {
      "fn": null,
      "offset": [
        2063,
        2126
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "327": {
      "fn": null,
      "offset": [
        2063,
        2126
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "328": {
      "fn": null,
      "offset": [
        2063,
        2126
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "329": {
      "fn": null,
      "offset": [
        2063,
        2126
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "330": {
      "fn": null,
      "offset": [
        2063,
        2126
      ],
      "op": "DUP3",
      "path": "10"
    },
    "331": {
      "fn": null,
      "offset": [
        2063,
        2126
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "332": {
      "fn": null,
      "offset": [
        2063,
        2126
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "333": {
      "fn": null,
      "offset": [
        2063,
        2126
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "334": {
      "fn": null,
      "offset": [
        2063,
        2126
      ],
      "op": "DUP1",
      "path": "10"
    },
    "335": {
      "fn": null,
      "offset": [
        2063,
        2126
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "336": {
      "fn": null,
      "offset": [
        2063,
        2126
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "338": {
      "fn": null,
      "offset": [
        2063,
        2126
      ],
      "op": "DUP3",
      "path": "10"
    },
    "339": {
      "fn": null,
      "offset": [
        2063,
        2126
      ],
      "op": "ADD",
      "path": "10"
    },
    "340": {
      "fn": null,
      "offset": [
        2063,
        2126
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "341": {
      "fn": null,
      "offset": [
        2063,
        2126
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x2"
    },
    "343": {
      "fn": null,
      "offset": [
        2063,
        2126
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "344": {
      "fn": null,
      "offset": [
        2063,
        2126
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "345": {
      "fn": null,
      "offset": [
        2063,
        2126
      ],
      "op": "ADD",
      "path": "10"
    },
    "346": {
      "fn": null,
      "offset": [
        2063,
        2126
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "347": {
      "fn": null,
      "offset": [
        2063,
        2126
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "348": {
      "fn": null,
      "offset": [
        2063,
        2126
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "349": {
      "fn": null,
      "offset": [
        2063,
        2126
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xFF"
    },
    "351": {
      "fn": null,
      "offset": [
        2063,
        2126
      ],
      "op": "AND",
      "path": "10"
    },
    "352": {
      "fn": null,
      "offset": [
        2063,
        2126
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "353": {
      "fn": null,
      "offset": [
        2063,
        2126
      ],
      "op": "DUP4",
      "path": "10"
    },
    "354": {
      "fn": null,
      "offset": [
        2063,
        2126
      ],
      "op": "JUMP",
      "path": "10"
    },
    "355": {
      "fn": null,
      "offset": [
        2063,
        2126
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "356": {
      "fn": null,
      "offset": [
        2063,
        2126
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "358": {
      "fn": null,
      "offset": [
        2063,
        2126
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "359": {
      "fn": null,
      "offset": [
        2063,
        2126
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x172"
    },
    "362": {
      "fn": null,
      "offset": [
        2063,
        2126
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "363": {
      "fn": null,
      "offset": [
        2063,
        2126
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "364": {
      "fn": null,
      "offset": [
        2063,
        2126
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "365": {
      "fn": null,
      "offset": [
        2063,
        2126
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "366": {
      "fn": null,
      "offset": [
        2063,
        2126
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2886"
    },
    "369": {
      "fn": null,
      "jump": "i",
      "offset": [
        2063,
        2126
      ],
      "op": "JUMP",
      "path": "10"
    },
    "370": {
      "fn": null,
      "offset": [
        2063,
        2126
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "371": {
      "fn": null,
      "offset": [
        2063,
        2126
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "373": {
      "fn": null,
      "offset": [
        2063,
        2126
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "374": {
      "fn": null,
      "offset": [
        2063,
        2126
      ],
      "op": "DUP1",
      "path": "10"
    },
    "375": {
      "fn": null,
      "offset": [
        2063,
        2126
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "376": {
      "fn": null,
      "offset": [
        2063,
        2126
      ],
      "op": "SUB",
      "path": "10"
    },
    "377": {
      "fn": null,
      "offset": [
        2063,
        2126
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "378": {
      "fn": null,
      "offset": [
        2063,
        2126
      ],
      "op": "RETURN",
      "path": "10"
    },
    "379": {
      "fn": "pool.setFakeETH",
      "offset": [
        15813,
        15886
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "380": {
      "fn": "pool.setFakeETH",
      "offset": [
        15813,
        15886
      ],
      "op": "CALLVALUE",
      "path": "10"
    },
    "381": {
      "fn": "pool.setFakeETH",
      "offset": [
        15813,
        15886
      ],
      "op": "DUP1",
      "path": "10"
    },
    "382": {
      "fn": "pool.setFakeETH",
      "offset": [
        15813,
        15886
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "383": {
      "fn": "pool.setFakeETH",
      "offset": [
        15813,
        15886
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x187"
    },
    "386": {
      "fn": "pool.setFakeETH",
      "offset": [
        15813,
        15886
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "387": {
      "fn": "pool.setFakeETH",
      "offset": [
        15813,
        15886
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "389": {
      "fn": "pool.setFakeETH",
      "offset": [
        15813,
        15886
      ],
      "op": "DUP1",
      "path": "10"
    },
    "390": {
      "fn": "pool.setFakeETH",
      "offset": [
        15813,
        15886
      ],
      "op": "REVERT",
      "path": "10"
    },
    "391": {
      "fn": "pool.setFakeETH",
      "offset": [
        15813,
        15886
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "392": {
      "op": "POP"
    },
    "393": {
      "fn": "pool.setFakeETH",
      "offset": [
        15813,
        15886
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x19B"
    },
    "396": {
      "fn": "pool.setFakeETH",
      "offset": [
        15813,
        15886
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x196"
    },
    "399": {
      "fn": "pool.setFakeETH",
      "offset": [
        15813,
        15886
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "400": {
      "fn": "pool.setFakeETH",
      "offset": [
        15813,
        15886
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "402": {
      "fn": "pool.setFakeETH",
      "offset": [
        15813,
        15886
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x28BC"
    },
    "405": {
      "fn": "pool.setFakeETH",
      "jump": "i",
      "offset": [
        15813,
        15886
      ],
      "op": "JUMP",
      "path": "10"
    },
    "406": {
      "fn": "pool.setFakeETH",
      "offset": [
        15813,
        15886
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "407": {
      "fn": "pool.setFakeETH",
      "offset": [
        15864,
        15872
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 0,
      "value": "0x1"
    },
    "409": {
      "fn": "pool.setFakeETH",
      "offset": [
        15864,
        15879
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "410": {
      "fn": "pool.setFakeETH",
      "offset": [
        15813,
        15886
      ],
      "op": "JUMP",
      "path": "10"
    },
    "411": {
      "fn": "pool.setFakeETH",
      "offset": [
        15813,
        15886
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "412": {
      "fn": "pool.setFakeETH",
      "offset": [
        15813,
        15886
      ],
      "op": "STOP",
      "path": "10"
    },
    "413": {
      "fn": "pool.PoolBalance",
      "offset": [
        15377,
        15480
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "414": {
      "fn": "pool.PoolBalance",
      "offset": [
        15377,
        15480
      ],
      "op": "CALLVALUE",
      "path": "10"
    },
    "415": {
      "fn": "pool.PoolBalance",
      "offset": [
        15377,
        15480
      ],
      "op": "DUP1",
      "path": "10"
    },
    "416": {
      "fn": "pool.PoolBalance",
      "offset": [
        15377,
        15480
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "417": {
      "fn": "pool.PoolBalance",
      "offset": [
        15377,
        15480
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1A9"
    },
    "420": {
      "fn": "pool.PoolBalance",
      "offset": [
        15377,
        15480
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "421": {
      "fn": "pool.PoolBalance",
      "offset": [
        15377,
        15480
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "423": {
      "fn": "pool.PoolBalance",
      "offset": [
        15377,
        15480
      ],
      "op": "DUP1",
      "path": "10"
    },
    "424": {
      "fn": "pool.PoolBalance",
      "offset": [
        15377,
        15480
      ],
      "op": "REVERT",
      "path": "10"
    },
    "425": {
      "fn": "pool.PoolBalance",
      "offset": [
        15377,
        15480
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "426": {
      "op": "POP"
    },
    "427": {
      "fn": "pool.PoolBalance",
      "offset": [
        15448,
        15464
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 1,
      "value": "0x2"
    },
    "429": {
      "fn": "pool.PoolBalance",
      "offset": [
        15448,
        15464
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "430": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "432": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "434": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "436": {
      "op": "SHL"
    },
    "437": {
      "op": "SUB"
    },
    "438": {
      "fn": "pool.PoolBalance",
      "offset": [
        15448,
        15464
      ],
      "op": "AND",
      "path": "10"
    },
    "439": {
      "fn": "pool.PoolBalance",
      "offset": [
        15448,
        15472
      ],
      "op": "BALANCE",
      "path": "10"
    },
    "440": {
      "fn": "pool.PoolBalance",
      "offset": [
        15377,
        15480
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "441": {
      "fn": "pool.PoolBalance",
      "offset": [
        15377,
        15480
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "443": {
      "fn": "pool.PoolBalance",
      "offset": [
        15377,
        15480
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "444": {
      "op": "SWAP1"
    },
    "445": {
      "op": "DUP2"
    },
    "446": {
      "op": "MSTORE"
    },
    "447": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "449": {
      "op": "ADD"
    },
    "450": {
      "fn": "pool.PoolBalance",
      "offset": [
        15377,
        15480
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x172"
    },
    "453": {
      "op": "JUMP"
    },
    "454": {
      "offset": [
        2591,
        2616
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "455": {
      "fn": "pool.PoolBalance",
      "offset": [
        2591,
        2616
      ],
      "op": "CALLVALUE",
      "path": "10"
    },
    "456": {
      "fn": "pool.PoolBalance",
      "offset": [
        2591,
        2616
      ],
      "op": "DUP1",
      "path": "10"
    },
    "457": {
      "fn": "pool.PoolBalance",
      "offset": [
        2591,
        2616
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "458": {
      "fn": "pool.PoolBalance",
      "offset": [
        2591,
        2616
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1D2"
    },
    "461": {
      "fn": "pool.PoolBalance",
      "offset": [
        2591,
        2616
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "462": {
      "fn": "pool.PoolBalance",
      "offset": [
        2591,
        2616
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "464": {
      "fn": "pool.PoolBalance",
      "offset": [
        2591,
        2616
      ],
      "op": "DUP1",
      "path": "10"
    },
    "465": {
      "fn": "pool.PoolBalance",
      "offset": [
        2591,
        2616
      ],
      "op": "REVERT",
      "path": "10"
    },
    "466": {
      "fn": "pool.PoolBalance",
      "offset": [
        2591,
        2616
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "467": {
      "op": "POP"
    },
    "468": {
      "offset": [
        2591,
        2616
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1E6"
    },
    "471": {
      "fn": "pool.PoolBalance",
      "offset": [
        2591,
        2616
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1E1"
    },
    "474": {
      "fn": "pool.PoolBalance",
      "offset": [
        2591,
        2616
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "475": {
      "fn": "pool.PoolBalance",
      "offset": [
        2591,
        2616
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "477": {
      "fn": "pool.PoolBalance",
      "offset": [
        2591,
        2616
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x28BC"
    },
    "480": {
      "fn": "pool.PoolBalance",
      "jump": "i",
      "offset": [
        2591,
        2616
      ],
      "op": "JUMP",
      "path": "10"
    },
    "481": {
      "fn": "pool.PoolBalance",
      "offset": [
        2591,
        2616
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "482": {
      "fn": "pool.PoolBalance",
      "offset": [
        2591,
        2616
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3B6"
    },
    "485": {
      "fn": "pool.PoolBalance",
      "jump": "i",
      "offset": [
        2591,
        2616
      ],
      "op": "JUMP",
      "path": "10"
    },
    "486": {
      "fn": "pool.PoolBalance",
      "offset": [
        2591,
        2616
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "487": {
      "fn": "pool.PoolBalance",
      "offset": [
        2591,
        2616
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "489": {
      "fn": "pool.PoolBalance",
      "offset": [
        2591,
        2616
      ],
      "op": "DUP1",
      "path": "10"
    },
    "490": {
      "fn": "pool.PoolBalance",
      "offset": [
        2591,
        2616
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "491": {
      "op": "SWAP4"
    },
    "492": {
      "op": "DUP5"
    },
    "493": {
      "op": "MSTORE"
    },
    "494": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "496": {
      "op": "DUP5"
    },
    "497": {
      "op": "ADD"
    },
    "498": {
      "op": "SWAP3"
    },
    "499": {
      "op": "SWAP1"
    },
    "500": {
      "op": "SWAP3"
    },
    "501": {
      "op": "MSTORE"
    },
    "502": {
      "op": "SWAP1"
    },
    "503": {
      "op": "DUP3"
    },
    "504": {
      "op": "ADD"
    },
    "505": {
      "op": "MSTORE"
    },
    "506": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "508": {
      "op": "ADD"
    },
    "509": {
      "offset": [
        2591,
        2616
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x172"
    },
    "512": {
      "op": "JUMP"
    },
    "513": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        15892,
        16706
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "514": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        15892,
        16706
      ],
      "op": "CALLVALUE",
      "path": "10"
    },
    "515": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        15892,
        16706
      ],
      "op": "DUP1",
      "path": "10"
    },
    "516": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        15892,
        16706
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "517": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        15892,
        16706
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x20D"
    },
    "520": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        15892,
        16706
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "521": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        15892,
        16706
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "523": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        15892,
        16706
      ],
      "op": "DUP1",
      "path": "10"
    },
    "524": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        15892,
        16706
      ],
      "op": "REVERT",
      "path": "10"
    },
    "525": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        15892,
        16706
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "526": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        15892,
        16706
      ],
      "op": "POP",
      "path": "10"
    },
    "527": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        15892,
        16706
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x19B"
    },
    "530": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        15892,
        16706
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3E9"
    },
    "533": {
      "fn": "pool.createFakeBuyer",
      "jump": "i",
      "offset": [
        15892,
        16706
      ],
      "op": "JUMP",
      "path": "10"
    },
    "534": {
      "fn": "pool.placeBid",
      "offset": [
        3879,
        5507
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "535": {
      "fn": "pool.placeBid",
      "offset": [
        3879,
        5507
      ],
      "op": "CALLVALUE",
      "path": "10"
    },
    "536": {
      "fn": "pool.placeBid",
      "offset": [
        3879,
        5507
      ],
      "op": "DUP1",
      "path": "10"
    },
    "537": {
      "fn": "pool.placeBid",
      "offset": [
        3879,
        5507
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "538": {
      "fn": "pool.placeBid",
      "offset": [
        3879,
        5507
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x222"
    },
    "541": {
      "fn": "pool.placeBid",
      "offset": [
        3879,
        5507
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "542": {
      "fn": "pool.placeBid",
      "offset": [
        3879,
        5507
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "544": {
      "fn": "pool.placeBid",
      "offset": [
        3879,
        5507
      ],
      "op": "DUP1",
      "path": "10"
    },
    "545": {
      "fn": "pool.placeBid",
      "offset": [
        3879,
        5507
      ],
      "op": "REVERT",
      "path": "10"
    },
    "546": {
      "fn": "pool.placeBid",
      "offset": [
        3879,
        5507
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "547": {
      "op": "POP"
    },
    "548": {
      "fn": "pool.placeBid",
      "offset": [
        3879,
        5507
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x19B"
    },
    "551": {
      "fn": "pool.placeBid",
      "offset": [
        3879,
        5507
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x231"
    },
    "554": {
      "fn": "pool.placeBid",
      "offset": [
        3879,
        5507
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "555": {
      "fn": "pool.placeBid",
      "offset": [
        3879,
        5507
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "557": {
      "fn": "pool.placeBid",
      "offset": [
        3879,
        5507
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x28D5"
    },
    "560": {
      "fn": "pool.placeBid",
      "jump": "i",
      "offset": [
        3879,
        5507
      ],
      "op": "JUMP",
      "path": "10"
    },
    "561": {
      "fn": "pool.placeBid",
      "offset": [
        3879,
        5507
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "562": {
      "fn": "pool.placeBid",
      "offset": [
        3879,
        5507
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x78F"
    },
    "565": {
      "fn": "pool.placeBid",
      "jump": "i",
      "offset": [
        3879,
        5507
      ],
      "op": "JUMP",
      "path": "10"
    },
    "566": {
      "fn": "pool.getEthPrice",
      "offset": [
        14561,
        15211
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "567": {
      "fn": "pool.getEthPrice",
      "offset": [
        14561,
        15211
      ],
      "op": "CALLVALUE",
      "path": "10"
    },
    "568": {
      "fn": "pool.getEthPrice",
      "offset": [
        14561,
        15211
      ],
      "op": "DUP1",
      "path": "10"
    },
    "569": {
      "fn": "pool.getEthPrice",
      "offset": [
        14561,
        15211
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "570": {
      "fn": "pool.getEthPrice",
      "offset": [
        14561,
        15211
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x242"
    },
    "573": {
      "fn": "pool.getEthPrice",
      "offset": [
        14561,
        15211
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "574": {
      "fn": "pool.getEthPrice",
      "offset": [
        14561,
        15211
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "576": {
      "fn": "pool.getEthPrice",
      "offset": [
        14561,
        15211
      ],
      "op": "DUP1",
      "path": "10"
    },
    "577": {
      "fn": "pool.getEthPrice",
      "offset": [
        14561,
        15211
      ],
      "op": "REVERT",
      "path": "10"
    },
    "578": {
      "fn": "pool.getEthPrice",
      "offset": [
        14561,
        15211
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "579": {
      "fn": "pool.getEthPrice",
      "offset": [
        14561,
        15211
      ],
      "op": "POP",
      "path": "10"
    },
    "580": {
      "fn": "pool.getEthPrice",
      "offset": [
        14561,
        15211
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x19B"
    },
    "583": {
      "fn": "pool.getEthPrice",
      "offset": [
        15200,
        15204
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 2,
      "value": "0xED7"
    },
    "586": {
      "fn": "pool.getEthPrice",
      "offset": [
        15189,
        15197
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "588": {
      "fn": "pool.getEthPrice",
      "offset": [
        15189,
        15204
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "589": {
      "fn": "pool.getEthPrice",
      "offset": [
        14561,
        15211
      ],
      "op": "JUMP",
      "path": "10"
    },
    "590": {
      "fn": "pool.sellBid",
      "offset": [
        6994,
        9822
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "591": {
      "fn": "pool.sellBid",
      "offset": [
        6994,
        9822
      ],
      "op": "CALLVALUE",
      "path": "10"
    },
    "592": {
      "fn": "pool.sellBid",
      "offset": [
        6994,
        9822
      ],
      "op": "DUP1",
      "path": "10"
    },
    "593": {
      "fn": "pool.sellBid",
      "offset": [
        6994,
        9822
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "594": {
      "fn": "pool.sellBid",
      "offset": [
        6994,
        9822
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x25A"
    },
    "597": {
      "fn": "pool.sellBid",
      "offset": [
        6994,
        9822
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "598": {
      "fn": "pool.sellBid",
      "offset": [
        6994,
        9822
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "600": {
      "fn": "pool.sellBid",
      "offset": [
        6994,
        9822
      ],
      "op": "DUP1",
      "path": "10"
    },
    "601": {
      "fn": "pool.sellBid",
      "offset": [
        6994,
        9822
      ],
      "op": "REVERT",
      "path": "10"
    },
    "602": {
      "fn": "pool.sellBid",
      "offset": [
        6994,
        9822
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "603": {
      "op": "POP"
    },
    "604": {
      "fn": "pool.sellBid",
      "offset": [
        6994,
        9822
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x19B"
    },
    "607": {
      "fn": "pool.sellBid",
      "offset": [
        6994,
        9822
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x269"
    },
    "610": {
      "fn": "pool.sellBid",
      "offset": [
        6994,
        9822
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "611": {
      "fn": "pool.sellBid",
      "offset": [
        6994,
        9822
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "613": {
      "fn": "pool.sellBid",
      "offset": [
        6994,
        9822
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x28BC"
    },
    "616": {
      "fn": "pool.sellBid",
      "jump": "i",
      "offset": [
        6994,
        9822
      ],
      "op": "JUMP",
      "path": "10"
    },
    "617": {
      "fn": "pool.sellBid",
      "offset": [
        6994,
        9822
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "618": {
      "fn": "pool.sellBid",
      "offset": [
        6994,
        9822
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xB25"
    },
    "621": {
      "fn": "pool.sellBid",
      "jump": "i",
      "offset": [
        6994,
        9822
      ],
      "op": "JUMP",
      "path": "10"
    },
    "622": {
      "offset": [
        2918,
        2950
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "623": {
      "fn": "pool.sellBid",
      "offset": [
        2918,
        2950
      ],
      "op": "CALLVALUE",
      "path": "10"
    },
    "624": {
      "fn": "pool.sellBid",
      "offset": [
        2918,
        2950
      ],
      "op": "DUP1",
      "path": "10"
    },
    "625": {
      "fn": "pool.sellBid",
      "offset": [
        2918,
        2950
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "626": {
      "fn": "pool.sellBid",
      "offset": [
        2918,
        2950
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x27A"
    },
    "629": {
      "fn": "pool.sellBid",
      "offset": [
        2918,
        2950
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "630": {
      "fn": "pool.sellBid",
      "offset": [
        2918,
        2950
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "632": {
      "fn": "pool.sellBid",
      "offset": [
        2918,
        2950
      ],
      "op": "DUP1",
      "path": "10"
    },
    "633": {
      "fn": "pool.sellBid",
      "offset": [
        2918,
        2950
      ],
      "op": "REVERT",
      "path": "10"
    },
    "634": {
      "fn": "pool.sellBid",
      "offset": [
        2918,
        2950
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "635": {
      "fn": "pool.sellBid",
      "offset": [
        2918,
        2950
      ],
      "op": "POP",
      "path": "10"
    },
    "636": {
      "fn": "pool.sellBid",
      "offset": [
        2918,
        2950
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1B8"
    },
    "639": {
      "fn": "pool.sellBid",
      "offset": [
        2918,
        2950
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xA"
    },
    "641": {
      "fn": "pool.sellBid",
      "offset": [
        2918,
        2950
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "642": {
      "fn": "pool.sellBid",
      "offset": [
        2918,
        2950
      ],
      "op": "DUP2",
      "path": "10"
    },
    "643": {
      "fn": "pool.sellBid",
      "offset": [
        2918,
        2950
      ],
      "op": "JUMP",
      "path": "10"
    },
    "644": {
      "offset": [
        1395,
        1439
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "645": {
      "fn": "pool.sellBid",
      "offset": [
        1395,
        1439
      ],
      "op": "CALLVALUE",
      "path": "10"
    },
    "646": {
      "fn": "pool.sellBid",
      "offset": [
        1395,
        1439
      ],
      "op": "DUP1",
      "path": "10"
    },
    "647": {
      "fn": "pool.sellBid",
      "offset": [
        1395,
        1439
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "648": {
      "fn": "pool.sellBid",
      "offset": [
        1395,
        1439
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x290"
    },
    "651": {
      "fn": "pool.sellBid",
      "offset": [
        1395,
        1439
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "652": {
      "fn": "pool.sellBid",
      "offset": [
        1395,
        1439
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "654": {
      "fn": "pool.sellBid",
      "offset": [
        1395,
        1439
      ],
      "op": "DUP1",
      "path": "10"
    },
    "655": {
      "fn": "pool.sellBid",
      "offset": [
        1395,
        1439
      ],
      "op": "REVERT",
      "path": "10"
    },
    "656": {
      "fn": "pool.sellBid",
      "offset": [
        1395,
        1439
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "657": {
      "op": "POP"
    },
    "658": {
      "offset": [
        1395,
        1439
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2A4"
    },
    "661": {
      "fn": "pool.sellBid",
      "offset": [
        1395,
        1439
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x29F"
    },
    "664": {
      "fn": "pool.sellBid",
      "offset": [
        1395,
        1439
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "665": {
      "fn": "pool.sellBid",
      "offset": [
        1395,
        1439
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "667": {
      "fn": "pool.sellBid",
      "offset": [
        1395,
        1439
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x28D5"
    },
    "670": {
      "fn": "pool.sellBid",
      "jump": "i",
      "offset": [
        1395,
        1439
      ],
      "op": "JUMP",
      "path": "10"
    },
    "671": {
      "fn": "pool.sellBid",
      "offset": [
        1395,
        1439
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "672": {
      "fn": "pool.sellBid",
      "offset": [
        1395,
        1439
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1667"
    },
    "675": {
      "fn": "pool.sellBid",
      "jump": "i",
      "offset": [
        1395,
        1439
      ],
      "op": "JUMP",
      "path": "10"
    },
    "676": {
      "fn": "pool.sellBid",
      "offset": [
        1395,
        1439
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "677": {
      "fn": "pool.sellBid",
      "offset": [
        1395,
        1439
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "679": {
      "fn": "pool.sellBid",
      "offset": [
        1395,
        1439
      ],
      "op": "DUP1",
      "path": "10"
    },
    "680": {
      "fn": "pool.sellBid",
      "offset": [
        1395,
        1439
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "681": {
      "op": "SWAP4"
    },
    "682": {
      "op": "DUP5"
    },
    "683": {
      "op": "MSTORE"
    },
    "684": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "686": {
      "op": "DUP5"
    },
    "687": {
      "op": "ADD"
    },
    "688": {
      "op": "SWAP3"
    },
    "689": {
      "op": "SWAP1"
    },
    "690": {
      "op": "SWAP3"
    },
    "691": {
      "op": "MSTORE"
    },
    "692": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "694": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "696": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "698": {
      "op": "SHL"
    },
    "699": {
      "op": "SUB"
    },
    "700": {
      "op": "AND"
    },
    "701": {
      "op": "SWAP1"
    },
    "702": {
      "op": "DUP3"
    },
    "703": {
      "op": "ADD"
    },
    "704": {
      "op": "MSTORE"
    },
    "705": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "707": {
      "op": "ADD"
    },
    "708": {
      "offset": [
        1395,
        1439
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x172"
    },
    "711": {
      "op": "JUMP"
    },
    "712": {
      "fn": "pool.SecondToExpiry",
      "offset": [
        15694,
        15807
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "713": {
      "fn": "pool.SecondToExpiry",
      "offset": [
        15694,
        15807
      ],
      "op": "CALLVALUE",
      "path": "10"
    },
    "714": {
      "fn": "pool.SecondToExpiry",
      "offset": [
        15694,
        15807
      ],
      "op": "DUP1",
      "path": "10"
    },
    "715": {
      "fn": "pool.SecondToExpiry",
      "offset": [
        15694,
        15807
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "716": {
      "fn": "pool.SecondToExpiry",
      "offset": [
        15694,
        15807
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2D4"
    },
    "719": {
      "fn": "pool.SecondToExpiry",
      "offset": [
        15694,
        15807
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "720": {
      "fn": "pool.SecondToExpiry",
      "offset": [
        15694,
        15807
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "722": {
      "fn": "pool.SecondToExpiry",
      "offset": [
        15694,
        15807
      ],
      "op": "DUP1",
      "path": "10"
    },
    "723": {
      "fn": "pool.SecondToExpiry",
      "offset": [
        15694,
        15807
      ],
      "op": "REVERT",
      "path": "10"
    },
    "724": {
      "fn": "pool.SecondToExpiry",
      "offset": [
        15694,
        15807
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "725": {
      "fn": "pool.SecondToExpiry",
      "offset": [
        15694,
        15807
      ],
      "op": "POP",
      "path": "10"
    },
    "726": {
      "fn": "pool.SecondToExpiry",
      "offset": [
        15694,
        15807
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1B8"
    },
    "729": {
      "fn": "pool.SecondToExpiry",
      "offset": [
        15694,
        15807
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x16B2"
    },
    "732": {
      "fn": "pool.SecondToExpiry",
      "jump": "i",
      "offset": [
        15694,
        15807
      ],
      "op": "JUMP",
      "path": "10"
    },
    "733": {
      "fn": "pool.cancelBid",
      "offset": [
        5513,
        6988
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "734": {
      "fn": "pool.cancelBid",
      "offset": [
        5513,
        6988
      ],
      "op": "CALLVALUE",
      "path": "10"
    },
    "735": {
      "fn": "pool.cancelBid",
      "offset": [
        5513,
        6988
      ],
      "op": "DUP1",
      "path": "10"
    },
    "736": {
      "fn": "pool.cancelBid",
      "offset": [
        5513,
        6988
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "737": {
      "fn": "pool.cancelBid",
      "offset": [
        5513,
        6988
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2E9"
    },
    "740": {
      "fn": "pool.cancelBid",
      "offset": [
        5513,
        6988
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "741": {
      "fn": "pool.cancelBid",
      "offset": [
        5513,
        6988
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "743": {
      "fn": "pool.cancelBid",
      "offset": [
        5513,
        6988
      ],
      "op": "DUP1",
      "path": "10"
    },
    "744": {
      "fn": "pool.cancelBid",
      "offset": [
        5513,
        6988
      ],
      "op": "REVERT",
      "path": "10"
    },
    "745": {
      "fn": "pool.cancelBid",
      "offset": [
        5513,
        6988
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "746": {
      "fn": "pool.cancelBid",
      "offset": [
        5513,
        6988
      ],
      "op": "POP",
      "path": "10"
    },
    "747": {
      "fn": "pool.cancelBid",
      "offset": [
        5513,
        6988
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x19B"
    },
    "750": {
      "fn": "pool.cancelBid",
      "offset": [
        5513,
        6988
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x16EB"
    },
    "753": {
      "fn": "pool.cancelBid",
      "jump": "i",
      "offset": [
        5513,
        6988
      ],
      "op": "JUMP",
      "path": "10"
    },
    "754": {
      "fn": "pool.userBalance",
      "offset": [
        15587,
        15688
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "755": {
      "fn": "pool.userBalance",
      "offset": [
        15587,
        15688
      ],
      "op": "CALLVALUE",
      "path": "10"
    },
    "756": {
      "fn": "pool.userBalance",
      "offset": [
        15587,
        15688
      ],
      "op": "DUP1",
      "path": "10"
    },
    "757": {
      "fn": "pool.userBalance",
      "offset": [
        15587,
        15688
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "758": {
      "fn": "pool.userBalance",
      "offset": [
        15587,
        15688
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2FE"
    },
    "761": {
      "fn": "pool.userBalance",
      "offset": [
        15587,
        15688
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "762": {
      "fn": "pool.userBalance",
      "offset": [
        15587,
        15688
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "764": {
      "fn": "pool.userBalance",
      "offset": [
        15587,
        15688
      ],
      "op": "DUP1",
      "path": "10"
    },
    "765": {
      "fn": "pool.userBalance",
      "offset": [
        15587,
        15688
      ],
      "op": "REVERT",
      "path": "10"
    },
    "766": {
      "fn": "pool.userBalance",
      "offset": [
        15587,
        15688
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "767": {
      "op": "POP"
    },
    "768": {
      "fn": "pool.userBalance",
      "offset": [
        15670,
        15680
      ],
      "op": "CALLER",
      "path": "10",
      "statement": 3
    },
    "769": {
      "fn": "pool.userBalance",
      "offset": [
        15631,
        15638
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "771": {
      "fn": "pool.userBalance",
      "offset": [
        15657,
        15681
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "772": {
      "fn": "pool.userBalance",
      "offset": [
        15657,
        15681
      ],
      "op": "DUP2",
      "path": "10"
    },
    "773": {
      "fn": "pool.userBalance",
      "offset": [
        15657,
        15681
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "774": {
      "fn": "pool.userBalance",
      "offset": [
        15657,
        15669
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "776": {
      "fn": "pool.userBalance",
      "offset": [
        15657,
        15681
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "778": {
      "fn": "pool.userBalance",
      "offset": [
        15657,
        15681
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "779": {
      "fn": "pool.userBalance",
      "offset": [
        15657,
        15681
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "781": {
      "fn": "pool.userBalance",
      "offset": [
        15657,
        15681
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "782": {
      "fn": "pool.userBalance",
      "offset": [
        15657,
        15681
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "783": {
      "fn": "pool.userBalance",
      "offset": [
        15657,
        15681
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "784": {
      "fn": "pool.userBalance",
      "offset": [
        15587,
        15688
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1B8"
    },
    "787": {
      "fn": "pool.userBalance",
      "offset": [
        15587,
        15688
      ],
      "op": "JUMP",
      "path": "10"
    },
    "788": {
      "fn": "pool.deposit",
      "offset": [
        15217,
        15371
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "789": {
      "fn": "pool.deposit",
      "offset": [
        15217,
        15371
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x19B"
    },
    "792": {
      "fn": "pool.deposit",
      "offset": [
        15217,
        15371
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1B61"
    },
    "795": {
      "fn": "pool.deposit",
      "jump": "i",
      "offset": [
        15217,
        15371
      ],
      "op": "JUMP",
      "path": "10"
    },
    "796": {
      "fn": "pool.exercise",
      "offset": [
        10907,
        13059
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "797": {
      "fn": "pool.exercise",
      "offset": [
        10907,
        13059
      ],
      "op": "CALLVALUE",
      "path": "10"
    },
    "798": {
      "fn": "pool.exercise",
      "offset": [
        10907,
        13059
      ],
      "op": "DUP1",
      "path": "10"
    },
    "799": {
      "fn": "pool.exercise",
      "offset": [
        10907,
        13059
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "800": {
      "fn": "pool.exercise",
      "offset": [
        10907,
        13059
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x328"
    },
    "803": {
      "fn": "pool.exercise",
      "offset": [
        10907,
        13059
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "804": {
      "fn": "pool.exercise",
      "offset": [
        10907,
        13059
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "806": {
      "fn": "pool.exercise",
      "offset": [
        10907,
        13059
      ],
      "op": "DUP1",
      "path": "10"
    },
    "807": {
      "fn": "pool.exercise",
      "offset": [
        10907,
        13059
      ],
      "op": "REVERT",
      "path": "10"
    },
    "808": {
      "fn": "pool.exercise",
      "offset": [
        10907,
        13059
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "809": {
      "fn": "pool.exercise",
      "offset": [
        10907,
        13059
      ],
      "op": "POP",
      "path": "10"
    },
    "810": {
      "fn": "pool.exercise",
      "offset": [
        10907,
        13059
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x19B"
    },
    "813": {
      "fn": "pool.exercise",
      "offset": [
        10907,
        13059
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1BCA"
    },
    "816": {
      "fn": "pool.exercise",
      "jump": "i",
      "offset": [
        10907,
        13059
      ],
      "op": "JUMP",
      "path": "10"
    },
    "817": {
      "fn": "pool.getOrder",
      "offset": [
        15486,
        15581
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "818": {
      "fn": "pool.getOrder",
      "offset": [
        15486,
        15581
      ],
      "op": "CALLVALUE",
      "path": "10"
    },
    "819": {
      "fn": "pool.getOrder",
      "offset": [
        15486,
        15581
      ],
      "op": "DUP1",
      "path": "10"
    },
    "820": {
      "fn": "pool.getOrder",
      "offset": [
        15486,
        15581
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "821": {
      "fn": "pool.getOrder",
      "offset": [
        15486,
        15581
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x33D"
    },
    "824": {
      "fn": "pool.getOrder",
      "offset": [
        15486,
        15581
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "825": {
      "fn": "pool.getOrder",
      "offset": [
        15486,
        15581
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "827": {
      "fn": "pool.getOrder",
      "offset": [
        15486,
        15581
      ],
      "op": "DUP1",
      "path": "10"
    },
    "828": {
      "fn": "pool.getOrder",
      "offset": [
        15486,
        15581
      ],
      "op": "REVERT",
      "path": "10"
    },
    "829": {
      "fn": "pool.getOrder",
      "offset": [
        15486,
        15581
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "830": {
      "fn": "pool.getOrder",
      "offset": [
        15486,
        15581
      ],
      "op": "POP",
      "path": "10"
    },
    "831": {
      "fn": "pool.getOrder",
      "offset": [
        15486,
        15581
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x346"
    },
    "834": {
      "fn": "pool.getOrder",
      "offset": [
        15486,
        15581
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1FDE"
    },
    "837": {
      "fn": "pool.getOrder",
      "jump": "i",
      "offset": [
        15486,
        15581
      ],
      "op": "JUMP",
      "path": "10"
    },
    "838": {
      "fn": "pool.getOrder",
      "offset": [
        15486,
        15581
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "839": {
      "fn": "pool.getOrder",
      "offset": [
        15486,
        15581
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "841": {
      "fn": "pool.getOrder",
      "offset": [
        15486,
        15581
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "842": {
      "fn": "pool.getOrder",
      "offset": [
        15486,
        15581
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x172"
    },
    "845": {
      "fn": "pool.getOrder",
      "offset": [
        15486,
        15581
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "846": {
      "fn": "pool.getOrder",
      "offset": [
        15486,
        15581
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "847": {
      "fn": "pool.getOrder",
      "offset": [
        15486,
        15581
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x28F7"
    },
    "850": {
      "fn": "pool.getOrder",
      "jump": "i",
      "offset": [
        15486,
        15581
      ],
      "op": "JUMP",
      "path": "10"
    },
    "851": {
      "fn": "pool.getBestBid",
      "offset": [
        9828,
        10901
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "852": {
      "fn": "pool.getBestBid",
      "offset": [
        9828,
        10901
      ],
      "op": "CALLVALUE",
      "path": "10"
    },
    "853": {
      "fn": "pool.getBestBid",
      "offset": [
        9828,
        10901
      ],
      "op": "DUP1",
      "path": "10"
    },
    "854": {
      "fn": "pool.getBestBid",
      "offset": [
        9828,
        10901
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "855": {
      "fn": "pool.getBestBid",
      "offset": [
        9828,
        10901
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x35F"
    },
    "858": {
      "fn": "pool.getBestBid",
      "offset": [
        9828,
        10901
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "859": {
      "fn": "pool.getBestBid",
      "offset": [
        9828,
        10901
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "861": {
      "fn": "pool.getBestBid",
      "offset": [
        9828,
        10901
      ],
      "op": "DUP1",
      "path": "10"
    },
    "862": {
      "fn": "pool.getBestBid",
      "offset": [
        9828,
        10901
      ],
      "op": "REVERT",
      "path": "10"
    },
    "863": {
      "fn": "pool.getBestBid",
      "offset": [
        9828,
        10901
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "864": {
      "op": "POP"
    },
    "865": {
      "fn": "pool.getBestBid",
      "offset": [
        9828,
        10901
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1B8"
    },
    "868": {
      "fn": "pool.getBestBid",
      "offset": [
        9828,
        10901
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x36E"
    },
    "871": {
      "fn": "pool.getBestBid",
      "offset": [
        9828,
        10901
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "872": {
      "fn": "pool.getBestBid",
      "offset": [
        9828,
        10901
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "874": {
      "fn": "pool.getBestBid",
      "offset": [
        9828,
        10901
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x28BC"
    },
    "877": {
      "fn": "pool.getBestBid",
      "jump": "i",
      "offset": [
        9828,
        10901
      ],
      "op": "JUMP",
      "path": "10"
    },
    "878": {
      "fn": "pool.getBestBid",
      "offset": [
        9828,
        10901
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "879": {
      "fn": "pool.getBestBid",
      "offset": [
        9828,
        10901
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x205A"
    },
    "882": {
      "fn": "pool.getBestBid",
      "jump": "i",
      "offset": [
        9828,
        10901
      ],
      "op": "JUMP",
      "path": "10"
    },
    "883": {
      "offset": [
        1048,
        1095
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "884": {
      "fn": "pool.getBestBid",
      "offset": [
        1048,
        1095
      ],
      "op": "CALLVALUE",
      "path": "10"
    },
    "885": {
      "fn": "pool.getBestBid",
      "offset": [
        1048,
        1095
      ],
      "op": "DUP1",
      "path": "10"
    },
    "886": {
      "fn": "pool.getBestBid",
      "offset": [
        1048,
        1095
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "887": {
      "fn": "pool.getBestBid",
      "offset": [
        1048,
        1095
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x37F"
    },
    "890": {
      "fn": "pool.getBestBid",
      "offset": [
        1048,
        1095
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "891": {
      "fn": "pool.getBestBid",
      "offset": [
        1048,
        1095
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "893": {
      "fn": "pool.getBestBid",
      "offset": [
        1048,
        1095
      ],
      "op": "DUP1",
      "path": "10"
    },
    "894": {
      "fn": "pool.getBestBid",
      "offset": [
        1048,
        1095
      ],
      "op": "REVERT",
      "path": "10"
    },
    "895": {
      "fn": "pool.getBestBid",
      "offset": [
        1048,
        1095
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "896": {
      "op": "POP"
    },
    "897": {
      "offset": [
        1048,
        1095
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1B8"
    },
    "900": {
      "fn": "pool.getBestBid",
      "offset": [
        1048,
        1095
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x38E"
    },
    "903": {
      "fn": "pool.getBestBid",
      "offset": [
        1048,
        1095
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "904": {
      "fn": "pool.getBestBid",
      "offset": [
        1048,
        1095
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "906": {
      "fn": "pool.getBestBid",
      "offset": [
        1048,
        1095
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x293B"
    },
    "909": {
      "fn": "pool.getBestBid",
      "jump": "i",
      "offset": [
        1048,
        1095
      ],
      "op": "JUMP",
      "path": "10"
    },
    "910": {
      "fn": "pool.getBestBid",
      "offset": [
        1048,
        1095
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "911": {
      "fn": "pool.getBestBid",
      "offset": [
        1048,
        1095
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "913": {
      "fn": "pool.getBestBid",
      "offset": [
        1048,
        1095
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "915": {
      "fn": "pool.getBestBid",
      "offset": [
        1048,
        1095
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "916": {
      "fn": "pool.getBestBid",
      "offset": [
        1048,
        1095
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "918": {
      "fn": "pool.getBestBid",
      "offset": [
        1048,
        1095
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "919": {
      "fn": "pool.getBestBid",
      "offset": [
        1048,
        1095
      ],
      "op": "DUP2",
      "path": "10"
    },
    "920": {
      "fn": "pool.getBestBid",
      "offset": [
        1048,
        1095
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "921": {
      "fn": "pool.getBestBid",
      "offset": [
        1048,
        1095
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "923": {
      "fn": "pool.getBestBid",
      "offset": [
        1048,
        1095
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "924": {
      "fn": "pool.getBestBid",
      "offset": [
        1048,
        1095
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "925": {
      "fn": "pool.getBestBid",
      "offset": [
        1048,
        1095
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "926": {
      "fn": "pool.getBestBid",
      "offset": [
        1048,
        1095
      ],
      "op": "DUP2",
      "path": "10"
    },
    "927": {
      "fn": "pool.getBestBid",
      "offset": [
        1048,
        1095
      ],
      "op": "JUMP",
      "path": "10"
    },
    "928": {
      "offset": [
        906,
        929
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "929": {
      "fn": "pool.getBestBid",
      "offset": [
        906,
        929
      ],
      "op": "CALLVALUE",
      "path": "10"
    },
    "930": {
      "fn": "pool.getBestBid",
      "offset": [
        906,
        929
      ],
      "op": "DUP1",
      "path": "10"
    },
    "931": {
      "fn": "pool.getBestBid",
      "offset": [
        906,
        929
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "932": {
      "fn": "pool.getBestBid",
      "offset": [
        906,
        929
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3AC"
    },
    "935": {
      "fn": "pool.getBestBid",
      "offset": [
        906,
        929
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "936": {
      "fn": "pool.getBestBid",
      "offset": [
        906,
        929
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "938": {
      "fn": "pool.getBestBid",
      "offset": [
        906,
        929
      ],
      "op": "DUP1",
      "path": "10"
    },
    "939": {
      "fn": "pool.getBestBid",
      "offset": [
        906,
        929
      ],
      "op": "REVERT",
      "path": "10"
    },
    "940": {
      "fn": "pool.getBestBid",
      "offset": [
        906,
        929
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "941": {
      "fn": "pool.getBestBid",
      "offset": [
        906,
        929
      ],
      "op": "POP",
      "path": "10"
    },
    "942": {
      "fn": "pool.getBestBid",
      "offset": [
        906,
        929
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1B8"
    },
    "945": {
      "fn": "pool.getBestBid",
      "offset": [
        906,
        929
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "947": {
      "fn": "pool.getBestBid",
      "offset": [
        906,
        929
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "948": {
      "fn": "pool.getBestBid",
      "offset": [
        906,
        929
      ],
      "op": "DUP2",
      "path": "10"
    },
    "949": {
      "fn": "pool.getBestBid",
      "offset": [
        906,
        929
      ],
      "op": "JUMP",
      "path": "10"
    },
    "950": {
      "offset": [
        2591,
        2616
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "951": {
      "fn": "pool.getBestBid",
      "offset": [
        2591,
        2616
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x6"
    },
    "953": {
      "fn": "pool.getBestBid",
      "offset": [
        2591,
        2616
      ],
      "op": "DUP2",
      "path": "10"
    },
    "954": {
      "fn": "pool.getBestBid",
      "offset": [
        2591,
        2616
      ],
      "op": "DUP2",
      "path": "10"
    },
    "955": {
      "fn": "pool.getBestBid",
      "offset": [
        2591,
        2616
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "956": {
      "fn": "pool.getBestBid",
      "offset": [
        2591,
        2616
      ],
      "op": "DUP2",
      "path": "10"
    },
    "957": {
      "fn": "pool.getBestBid",
      "offset": [
        2591,
        2616
      ],
      "op": "LT",
      "path": "10"
    },
    "958": {
      "fn": "pool.getBestBid",
      "offset": [
        2591,
        2616
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3C6"
    },
    "961": {
      "fn": "pool.getBestBid",
      "offset": [
        2591,
        2616
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "962": {
      "fn": "pool.getBestBid",
      "offset": [
        2591,
        2616
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "964": {
      "fn": "pool.getBestBid",
      "offset": [
        2591,
        2616
      ],
      "op": "DUP1",
      "path": "10"
    },
    "965": {
      "fn": "pool.getBestBid",
      "offset": [
        2591,
        2616
      ],
      "op": "REVERT",
      "path": "10"
    },
    "966": {
      "fn": "pool.getBestBid",
      "offset": [
        2591,
        2616
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "967": {
      "fn": "pool.getBestBid",
      "offset": [
        2591,
        2616
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "969": {
      "fn": "pool.getBestBid",
      "offset": [
        2591,
        2616
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "970": {
      "fn": "pool.getBestBid",
      "offset": [
        2591,
        2616
      ],
      "op": "DUP3",
      "path": "10"
    },
    "971": {
      "fn": "pool.getBestBid",
      "offset": [
        2591,
        2616
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "972": {
      "fn": "pool.getBestBid",
      "offset": [
        2591,
        2616
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "974": {
      "fn": "pool.getBestBid",
      "offset": [
        2591,
        2616
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "975": {
      "fn": "pool.getBestBid",
      "offset": [
        2591,
        2616
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "976": {
      "fn": "pool.getBestBid",
      "offset": [
        2591,
        2616
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "977": {
      "fn": "pool.getBestBid",
      "offset": [
        2591,
        2616
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "979": {
      "fn": "pool.getBestBid",
      "offset": [
        2591,
        2616
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "980": {
      "fn": "pool.getBestBid",
      "offset": [
        2591,
        2616
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "981": {
      "fn": "pool.getBestBid",
      "offset": [
        2591,
        2616
      ],
      "op": "MUL",
      "path": "10"
    },
    "982": {
      "fn": "pool.getBestBid",
      "offset": [
        2591,
        2616
      ],
      "op": "ADD",
      "path": "10"
    },
    "983": {
      "fn": "pool.getBestBid",
      "offset": [
        2591,
        2616
      ],
      "op": "DUP1",
      "path": "10"
    },
    "984": {
      "fn": "pool.getBestBid",
      "offset": [
        2591,
        2616
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "985": {
      "fn": "pool.getBestBid",
      "offset": [
        2591,
        2616
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "987": {
      "fn": "pool.getBestBid",
      "offset": [
        2591,
        2616
      ],
      "op": "DUP3",
      "path": "10"
    },
    "988": {
      "fn": "pool.getBestBid",
      "offset": [
        2591,
        2616
      ],
      "op": "ADD",
      "path": "10"
    },
    "989": {
      "fn": "pool.getBestBid",
      "offset": [
        2591,
        2616
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "990": {
      "fn": "pool.getBestBid",
      "offset": [
        2591,
        2616
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x2"
    },
    "992": {
      "fn": "pool.getBestBid",
      "offset": [
        2591,
        2616
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "993": {
      "fn": "pool.getBestBid",
      "offset": [
        2591,
        2616
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "994": {
      "fn": "pool.getBestBid",
      "offset": [
        2591,
        2616
      ],
      "op": "ADD",
      "path": "10"
    },
    "995": {
      "fn": "pool.getBestBid",
      "offset": [
        2591,
        2616
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "996": {
      "fn": "pool.getBestBid",
      "offset": [
        2591,
        2616
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "997": {
      "fn": "pool.getBestBid",
      "offset": [
        2591,
        2616
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "998": {
      "op": "POP"
    },
    "999": {
      "offset": [
        2591,
        2616
      ],
      "op": "DUP4",
      "path": "10"
    },
    "1000": {
      "fn": "pool.getBestBid",
      "jump": "o",
      "offset": [
        2591,
        2616
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1001": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        15892,
        16706
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1002": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16079,
        16096
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1004": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16099,
        16141
      ],
      "op": "PUSH20",
      "path": "10",
      "value": "0xCA35B7D915458EF540ADE6068DFE2F44E8FA733C"
    },
    "1025": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16079,
        16141
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1026": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16079,
        16141
      ],
      "op": "POP",
      "path": "10"
    },
    "1027": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16151,
        16176
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 4,
      "value": "0x9"
    },
    "1029": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16182,
        16214
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1031": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16182,
        16214
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1032": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16182,
        16214
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1033": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16182,
        16214
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x60"
    },
    "1035": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16182,
        16214
      ],
      "op": "ADD",
      "path": "10"
    },
    "1036": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16182,
        16214
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1038": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16182,
        16214
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1039": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16182,
        16214
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1040": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16193,
        16196
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x14A"
    },
    "1043": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16182,
        16214
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1044": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16182,
        16214
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1045": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16182,
        16214
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1047": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16182,
        16214
      ],
      "op": "ADD",
      "path": "10"
    },
    "1048": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16198,
        16202
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x672"
    },
    "1051": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16182,
        16214
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1052": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16182,
        16214
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1053": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16182,
        16214
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1055": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16182,
        16214
      ],
      "op": "ADD",
      "path": "10"
    },
    "1056": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16204,
        16213
      ],
      "op": "DUP4",
      "path": "10"
    },
    "1057": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1059": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1061": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1063": {
      "op": "SHL"
    },
    "1064": {
      "op": "SUB"
    },
    "1065": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16182,
        16214
      ],
      "op": "AND",
      "path": "10"
    },
    "1066": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16182,
        16214
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1067": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16182,
        16214
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1068": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16182,
        16214
      ],
      "op": "POP",
      "path": "10"
    },
    "1069": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16151,
        16215
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1070": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16151,
        16215
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1071": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16151,
        16215
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "1073": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16151,
        16215
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1074": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16151,
        16215
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1075": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16151,
        16215
      ],
      "op": "ADD",
      "path": "10"
    },
    "1076": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16151,
        16215
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1077": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16151,
        16215
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1078": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16151,
        16215
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "1079": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16151,
        16215
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1080": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16151,
        16215
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1081": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16151,
        16215
      ],
      "op": "POP",
      "path": "10"
    },
    "1082": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16151,
        16215
      ],
      "op": "POP",
      "path": "10"
    },
    "1083": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16151,
        16215
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "1085": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16151,
        16215
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1086": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16151,
        16215
      ],
      "op": "SUB",
      "path": "10"
    },
    "1087": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16151,
        16215
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1088": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16151,
        16215
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1090": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16151,
        16215
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1091": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16151,
        16215
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1093": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16151,
        16215
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1095": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16151,
        16215
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "1096": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16151,
        16215
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1097": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16151,
        16215
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "1099": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16151,
        16215
      ],
      "op": "MUL",
      "path": "10"
    },
    "1100": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16151,
        16215
      ],
      "op": "ADD",
      "path": "10"
    },
    "1101": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16151,
        16215
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1103": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16151,
        16215
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1104": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16151,
        16215
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1105": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16151,
        16215
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1106": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16151,
        16215
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1107": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16151,
        16215
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1108": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16151,
        16215
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1109": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16151,
        16215
      ],
      "op": "POP",
      "path": "10"
    },
    "1110": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16151,
        16215
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1112": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16151,
        16215
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1113": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16151,
        16215
      ],
      "op": "ADD",
      "path": "10"
    },
    "1114": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16151,
        16215
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1115": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16151,
        16215
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1116": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16151,
        16215
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1118": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16151,
        16215
      ],
      "op": "ADD",
      "path": "10"
    },
    "1119": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16151,
        16215
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "1120": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16151,
        16215
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1122": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16151,
        16215
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1123": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16151,
        16215
      ],
      "op": "ADD",
      "path": "10"
    },
    "1124": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16151,
        16215
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1125": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16151,
        16215
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1126": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16151,
        16215
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "1128": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16151,
        16215
      ],
      "op": "ADD",
      "path": "10"
    },
    "1129": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16151,
        16215
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "1130": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16151,
        16215
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1132": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16151,
        16215
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1133": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16151,
        16215
      ],
      "op": "ADD",
      "path": "10"
    },
    "1134": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16151,
        16215
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1135": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16151,
        16215
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1136": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16151,
        16215
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x2"
    },
    "1138": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16151,
        16215
      ],
      "op": "ADD",
      "path": "10"
    },
    "1139": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16151,
        16215
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1141": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16151,
        16215
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x100"
    },
    "1144": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16151,
        16215
      ],
      "op": "EXP",
      "path": "10"
    },
    "1145": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16151,
        16215
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1146": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16151,
        16215
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1147": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16151,
        16215
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1148": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1150": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1152": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1154": {
      "op": "SHL"
    },
    "1155": {
      "op": "SUB"
    },
    "1156": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16151,
        16215
      ],
      "op": "MUL",
      "path": "10"
    },
    "1157": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16151,
        16215
      ],
      "op": "NOT",
      "path": "10"
    },
    "1158": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16151,
        16215
      ],
      "op": "AND",
      "path": "10"
    },
    "1159": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16151,
        16215
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1160": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16151,
        16215
      ],
      "op": "DUP4",
      "path": "10"
    },
    "1161": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1163": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1165": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1167": {
      "op": "SHL"
    },
    "1168": {
      "op": "SUB"
    },
    "1169": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16151,
        16215
      ],
      "op": "AND",
      "path": "10"
    },
    "1170": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16151,
        16215
      ],
      "op": "MUL",
      "path": "10"
    },
    "1171": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16151,
        16215
      ],
      "op": "OR",
      "path": "10"
    },
    "1172": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16151,
        16215
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1173": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16151,
        16215
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "1174": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16151,
        16215
      ],
      "op": "POP",
      "path": "10"
    },
    "1175": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16151,
        16215
      ],
      "op": "POP",
      "path": "10"
    },
    "1176": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16151,
        16215
      ],
      "op": "POP",
      "path": "10"
    },
    "1177": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16225,
        16250
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 5,
      "value": "0x9"
    },
    "1179": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16256,
        16288
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1181": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16256,
        16288
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1182": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16256,
        16288
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1183": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16256,
        16288
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x60"
    },
    "1185": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16256,
        16288
      ],
      "op": "ADD",
      "path": "10"
    },
    "1186": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16256,
        16288
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1188": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16256,
        16288
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1189": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16256,
        16288
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1190": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16267,
        16270
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x18C"
    },
    "1193": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16256,
        16288
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1194": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16256,
        16288
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1195": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16256,
        16288
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1197": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16256,
        16288
      ],
      "op": "ADD",
      "path": "10"
    },
    "1198": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16272,
        16276
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x528"
    },
    "1201": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16256,
        16288
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1202": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16256,
        16288
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1203": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16256,
        16288
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1205": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16256,
        16288
      ],
      "op": "ADD",
      "path": "10"
    },
    "1206": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16278,
        16287
      ],
      "op": "DUP4",
      "path": "10"
    },
    "1207": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1209": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1211": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1213": {
      "op": "SHL"
    },
    "1214": {
      "op": "SUB"
    },
    "1215": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16256,
        16288
      ],
      "op": "AND",
      "path": "10"
    },
    "1216": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16256,
        16288
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1217": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16256,
        16288
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1218": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16256,
        16288
      ],
      "op": "POP",
      "path": "10"
    },
    "1219": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16225,
        16289
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1220": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16225,
        16289
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1221": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16225,
        16289
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "1223": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16225,
        16289
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1224": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16225,
        16289
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1225": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16225,
        16289
      ],
      "op": "ADD",
      "path": "10"
    },
    "1226": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16225,
        16289
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1227": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16225,
        16289
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1228": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16225,
        16289
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "1229": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16225,
        16289
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1230": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16225,
        16289
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1231": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16225,
        16289
      ],
      "op": "POP",
      "path": "10"
    },
    "1232": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16225,
        16289
      ],
      "op": "POP",
      "path": "10"
    },
    "1233": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16225,
        16289
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "1235": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16225,
        16289
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1236": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16225,
        16289
      ],
      "op": "SUB",
      "path": "10"
    },
    "1237": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16225,
        16289
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1238": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16225,
        16289
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1240": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16225,
        16289
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1241": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16225,
        16289
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1243": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16225,
        16289
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1245": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16225,
        16289
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "1246": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16225,
        16289
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1247": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16225,
        16289
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "1249": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16225,
        16289
      ],
      "op": "MUL",
      "path": "10"
    },
    "1250": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16225,
        16289
      ],
      "op": "ADD",
      "path": "10"
    },
    "1251": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16225,
        16289
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1253": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16225,
        16289
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1254": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16225,
        16289
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1255": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16225,
        16289
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1256": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16225,
        16289
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1257": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16225,
        16289
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1258": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16225,
        16289
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1259": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16225,
        16289
      ],
      "op": "POP",
      "path": "10"
    },
    "1260": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16225,
        16289
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1262": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16225,
        16289
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1263": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16225,
        16289
      ],
      "op": "ADD",
      "path": "10"
    },
    "1264": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16225,
        16289
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1265": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16225,
        16289
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1266": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16225,
        16289
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1268": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16225,
        16289
      ],
      "op": "ADD",
      "path": "10"
    },
    "1269": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16225,
        16289
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "1270": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16225,
        16289
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1272": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16225,
        16289
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1273": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16225,
        16289
      ],
      "op": "ADD",
      "path": "10"
    },
    "1274": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16225,
        16289
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1275": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16225,
        16289
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1276": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16225,
        16289
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "1278": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16225,
        16289
      ],
      "op": "ADD",
      "path": "10"
    },
    "1279": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16225,
        16289
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "1280": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16225,
        16289
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1282": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16225,
        16289
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1283": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16225,
        16289
      ],
      "op": "ADD",
      "path": "10"
    },
    "1284": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16225,
        16289
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1285": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16225,
        16289
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1286": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16225,
        16289
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x2"
    },
    "1288": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16225,
        16289
      ],
      "op": "ADD",
      "path": "10"
    },
    "1289": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16225,
        16289
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1291": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16225,
        16289
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x100"
    },
    "1294": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16225,
        16289
      ],
      "op": "EXP",
      "path": "10"
    },
    "1295": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16225,
        16289
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1296": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16225,
        16289
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1297": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16225,
        16289
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1298": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1300": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1302": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1304": {
      "op": "SHL"
    },
    "1305": {
      "op": "SUB"
    },
    "1306": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16225,
        16289
      ],
      "op": "MUL",
      "path": "10"
    },
    "1307": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16225,
        16289
      ],
      "op": "NOT",
      "path": "10"
    },
    "1308": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16225,
        16289
      ],
      "op": "AND",
      "path": "10"
    },
    "1309": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16225,
        16289
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1310": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16225,
        16289
      ],
      "op": "DUP4",
      "path": "10"
    },
    "1311": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1313": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1315": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1317": {
      "op": "SHL"
    },
    "1318": {
      "op": "SUB"
    },
    "1319": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16225,
        16289
      ],
      "op": "AND",
      "path": "10"
    },
    "1320": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16225,
        16289
      ],
      "op": "MUL",
      "path": "10"
    },
    "1321": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16225,
        16289
      ],
      "op": "OR",
      "path": "10"
    },
    "1322": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16225,
        16289
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1323": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16225,
        16289
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "1324": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16225,
        16289
      ],
      "op": "POP",
      "path": "10"
    },
    "1325": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16225,
        16289
      ],
      "op": "POP",
      "path": "10"
    },
    "1326": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16225,
        16289
      ],
      "op": "POP",
      "path": "10"
    },
    "1327": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16299,
        16324
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 6,
      "value": "0x9"
    },
    "1329": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16330,
        16362
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1331": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16330,
        16362
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1332": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16330,
        16362
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1333": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16330,
        16362
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x60"
    },
    "1335": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16330,
        16362
      ],
      "op": "ADD",
      "path": "10"
    },
    "1336": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16330,
        16362
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1338": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16330,
        16362
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1339": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16330,
        16362
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1340": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16341,
        16344
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x84"
    },
    "1342": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16330,
        16362
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1343": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16330,
        16362
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1344": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16330,
        16362
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1346": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16330,
        16362
      ],
      "op": "ADD",
      "path": "10"
    },
    "1347": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16346,
        16350
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x19C8"
    },
    "1350": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16330,
        16362
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1351": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16330,
        16362
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1352": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16330,
        16362
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1354": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16330,
        16362
      ],
      "op": "ADD",
      "path": "10"
    },
    "1355": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16352,
        16361
      ],
      "op": "DUP4",
      "path": "10"
    },
    "1356": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1358": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1360": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1362": {
      "op": "SHL"
    },
    "1363": {
      "op": "SUB"
    },
    "1364": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16330,
        16362
      ],
      "op": "AND",
      "path": "10"
    },
    "1365": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16330,
        16362
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1366": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16330,
        16362
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1367": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16330,
        16362
      ],
      "op": "POP",
      "path": "10"
    },
    "1368": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16299,
        16363
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1369": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16299,
        16363
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1370": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16299,
        16363
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "1372": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16299,
        16363
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1373": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16299,
        16363
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1374": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16299,
        16363
      ],
      "op": "ADD",
      "path": "10"
    },
    "1375": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16299,
        16363
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1376": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16299,
        16363
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1377": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16299,
        16363
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "1378": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16299,
        16363
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1379": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16299,
        16363
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1380": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16299,
        16363
      ],
      "op": "POP",
      "path": "10"
    },
    "1381": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16299,
        16363
      ],
      "op": "POP",
      "path": "10"
    },
    "1382": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16299,
        16363
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "1384": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16299,
        16363
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1385": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16299,
        16363
      ],
      "op": "SUB",
      "path": "10"
    },
    "1386": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16299,
        16363
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1387": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16299,
        16363
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1389": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16299,
        16363
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1390": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16299,
        16363
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1392": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16299,
        16363
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1394": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16299,
        16363
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "1395": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16299,
        16363
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1396": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16299,
        16363
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "1398": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16299,
        16363
      ],
      "op": "MUL",
      "path": "10"
    },
    "1399": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16299,
        16363
      ],
      "op": "ADD",
      "path": "10"
    },
    "1400": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16299,
        16363
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1402": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16299,
        16363
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1403": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16299,
        16363
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1404": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16299,
        16363
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1405": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16299,
        16363
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1406": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16299,
        16363
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1407": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16299,
        16363
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1408": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16299,
        16363
      ],
      "op": "POP",
      "path": "10"
    },
    "1409": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16299,
        16363
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1411": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16299,
        16363
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1412": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16299,
        16363
      ],
      "op": "ADD",
      "path": "10"
    },
    "1413": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16299,
        16363
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1414": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16299,
        16363
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1415": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16299,
        16363
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1417": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16299,
        16363
      ],
      "op": "ADD",
      "path": "10"
    },
    "1418": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16299,
        16363
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "1419": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16299,
        16363
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1421": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16299,
        16363
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1422": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16299,
        16363
      ],
      "op": "ADD",
      "path": "10"
    },
    "1423": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16299,
        16363
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1424": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16299,
        16363
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1425": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16299,
        16363
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "1427": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16299,
        16363
      ],
      "op": "ADD",
      "path": "10"
    },
    "1428": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16299,
        16363
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "1429": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16299,
        16363
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1431": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16299,
        16363
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1432": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16299,
        16363
      ],
      "op": "ADD",
      "path": "10"
    },
    "1433": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16299,
        16363
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1434": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16299,
        16363
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1435": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16299,
        16363
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x2"
    },
    "1437": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16299,
        16363
      ],
      "op": "ADD",
      "path": "10"
    },
    "1438": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16299,
        16363
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1440": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16299,
        16363
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x100"
    },
    "1443": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16299,
        16363
      ],
      "op": "EXP",
      "path": "10"
    },
    "1444": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16299,
        16363
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1445": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16299,
        16363
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1446": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16299,
        16363
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1447": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1449": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1451": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1453": {
      "op": "SHL"
    },
    "1454": {
      "op": "SUB"
    },
    "1455": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16299,
        16363
      ],
      "op": "MUL",
      "path": "10"
    },
    "1456": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16299,
        16363
      ],
      "op": "NOT",
      "path": "10"
    },
    "1457": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16299,
        16363
      ],
      "op": "AND",
      "path": "10"
    },
    "1458": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16299,
        16363
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1459": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16299,
        16363
      ],
      "op": "DUP4",
      "path": "10"
    },
    "1460": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1462": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1464": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1466": {
      "op": "SHL"
    },
    "1467": {
      "op": "SUB"
    },
    "1468": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16299,
        16363
      ],
      "op": "AND",
      "path": "10"
    },
    "1469": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16299,
        16363
      ],
      "op": "MUL",
      "path": "10"
    },
    "1470": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16299,
        16363
      ],
      "op": "OR",
      "path": "10"
    },
    "1471": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16299,
        16363
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1472": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16299,
        16363
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "1473": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16299,
        16363
      ],
      "op": "POP",
      "path": "10"
    },
    "1474": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16299,
        16363
      ],
      "op": "POP",
      "path": "10"
    },
    "1475": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16299,
        16363
      ],
      "op": "POP",
      "path": "10"
    },
    "1476": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16373,
        16398
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 7,
      "value": "0x9"
    },
    "1478": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16404,
        16437
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1480": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16404,
        16437
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1481": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16404,
        16437
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1482": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16404,
        16437
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x60"
    },
    "1484": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16404,
        16437
      ],
      "op": "ADD",
      "path": "10"
    },
    "1485": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16404,
        16437
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1487": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16404,
        16437
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1488": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16404,
        16437
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1489": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16415,
        16418
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xC6"
    },
    "1491": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16404,
        16437
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1492": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16404,
        16437
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1493": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16404,
        16437
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1495": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16404,
        16437
      ],
      "op": "ADD",
      "path": "10"
    },
    "1496": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16420,
        16425
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x4074"
    },
    "1499": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16404,
        16437
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1500": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16404,
        16437
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1501": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16404,
        16437
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1503": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16404,
        16437
      ],
      "op": "ADD",
      "path": "10"
    },
    "1504": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16427,
        16436
      ],
      "op": "DUP4",
      "path": "10"
    },
    "1505": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1507": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1509": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1511": {
      "op": "SHL"
    },
    "1512": {
      "op": "SUB"
    },
    "1513": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16404,
        16437
      ],
      "op": "AND",
      "path": "10"
    },
    "1514": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16404,
        16437
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1515": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16404,
        16437
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1516": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16404,
        16437
      ],
      "op": "POP",
      "path": "10"
    },
    "1517": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16373,
        16438
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1518": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16373,
        16438
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1519": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16373,
        16438
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "1521": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16373,
        16438
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1522": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16373,
        16438
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1523": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16373,
        16438
      ],
      "op": "ADD",
      "path": "10"
    },
    "1524": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16373,
        16438
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1525": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16373,
        16438
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1526": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16373,
        16438
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "1527": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16373,
        16438
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1528": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16373,
        16438
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1529": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16373,
        16438
      ],
      "op": "POP",
      "path": "10"
    },
    "1530": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16373,
        16438
      ],
      "op": "POP",
      "path": "10"
    },
    "1531": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16373,
        16438
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "1533": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16373,
        16438
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1534": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16373,
        16438
      ],
      "op": "SUB",
      "path": "10"
    },
    "1535": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16373,
        16438
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1536": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16373,
        16438
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1538": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16373,
        16438
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1539": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16373,
        16438
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1541": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16373,
        16438
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1543": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16373,
        16438
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "1544": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16373,
        16438
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1545": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16373,
        16438
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "1547": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16373,
        16438
      ],
      "op": "MUL",
      "path": "10"
    },
    "1548": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16373,
        16438
      ],
      "op": "ADD",
      "path": "10"
    },
    "1549": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16373,
        16438
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1551": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16373,
        16438
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1552": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16373,
        16438
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1553": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16373,
        16438
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1554": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16373,
        16438
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1555": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16373,
        16438
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1556": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16373,
        16438
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1557": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16373,
        16438
      ],
      "op": "POP",
      "path": "10"
    },
    "1558": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16373,
        16438
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1560": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16373,
        16438
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1561": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16373,
        16438
      ],
      "op": "ADD",
      "path": "10"
    },
    "1562": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16373,
        16438
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1563": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16373,
        16438
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1564": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16373,
        16438
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1566": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16373,
        16438
      ],
      "op": "ADD",
      "path": "10"
    },
    "1567": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16373,
        16438
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "1568": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16373,
        16438
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1570": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16373,
        16438
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1571": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16373,
        16438
      ],
      "op": "ADD",
      "path": "10"
    },
    "1572": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16373,
        16438
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1573": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16373,
        16438
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1574": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16373,
        16438
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "1576": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16373,
        16438
      ],
      "op": "ADD",
      "path": "10"
    },
    "1577": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16373,
        16438
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "1578": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16373,
        16438
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1580": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16373,
        16438
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1581": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16373,
        16438
      ],
      "op": "ADD",
      "path": "10"
    },
    "1582": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16373,
        16438
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1583": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16373,
        16438
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1584": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16373,
        16438
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x2"
    },
    "1586": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16373,
        16438
      ],
      "op": "ADD",
      "path": "10"
    },
    "1587": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16373,
        16438
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1589": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16373,
        16438
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x100"
    },
    "1592": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16373,
        16438
      ],
      "op": "EXP",
      "path": "10"
    },
    "1593": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16373,
        16438
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1594": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16373,
        16438
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1595": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16373,
        16438
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1596": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1598": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1600": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1602": {
      "op": "SHL"
    },
    "1603": {
      "op": "SUB"
    },
    "1604": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16373,
        16438
      ],
      "op": "MUL",
      "path": "10"
    },
    "1605": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16373,
        16438
      ],
      "op": "NOT",
      "path": "10"
    },
    "1606": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16373,
        16438
      ],
      "op": "AND",
      "path": "10"
    },
    "1607": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16373,
        16438
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1608": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16373,
        16438
      ],
      "op": "DUP4",
      "path": "10"
    },
    "1609": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1611": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1613": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1615": {
      "op": "SHL"
    },
    "1616": {
      "op": "SUB"
    },
    "1617": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16373,
        16438
      ],
      "op": "AND",
      "path": "10"
    },
    "1618": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16373,
        16438
      ],
      "op": "MUL",
      "path": "10"
    },
    "1619": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16373,
        16438
      ],
      "op": "OR",
      "path": "10"
    },
    "1620": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16373,
        16438
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1621": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16373,
        16438
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "1622": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16373,
        16438
      ],
      "op": "POP",
      "path": "10"
    },
    "1623": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16373,
        16438
      ],
      "op": "POP",
      "path": "10"
    },
    "1624": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16373,
        16438
      ],
      "op": "POP",
      "path": "10"
    },
    "1625": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16459,
        16484
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 8,
      "value": "0x9"
    },
    "1627": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16448,
        16452
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1629": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16448,
        16456
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1631": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16453,
        16455
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x7"
    },
    "1633": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16453,
        16455
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1634": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16448,
        16456
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1635": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16448,
        16456
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1636": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16448,
        16456
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1638": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16448,
        16456
      ],
      "op": "ADD",
      "path": "10"
    },
    "1639": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16448,
        16456
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1640": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16448,
        16456
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1641": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16448,
        16456
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1642": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16448,
        16456
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1644": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16448,
        16456
      ],
      "op": "ADD",
      "path": "10"
    },
    "1645": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16448,
        16456
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1647": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16448,
        16456
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "1648": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16448,
        16484
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1649": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16448,
        16484
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1650": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16448,
        16484
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1651": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16448,
        16484
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x67D"
    },
    "1654": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16448,
        16484
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "1655": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16448,
        16484
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1656": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16448,
        16484
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1657": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16448,
        16484
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2716"
    },
    "1660": {
      "fn": "pool.createFakeBuyer",
      "jump": "i",
      "offset": [
        16448,
        16484
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1661": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16448,
        16484
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1662": {
      "op": "POP"
    },
    "1663": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1665": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1667": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1669": {
      "op": "SHL"
    },
    "1670": {
      "op": "SUB"
    },
    "1671": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16494,
        16509
      ],
      "op": "DUP2",
      "path": "10",
      "statement": 9
    },
    "1672": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16494,
        16509
      ],
      "op": "AND",
      "path": "10"
    },
    "1673": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16494,
        16509
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1675": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16494,
        16509
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1676": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16494,
        16509
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1677": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16494,
        16509
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1678": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16494,
        16498
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x5"
    },
    "1680": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16494,
        16509
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1682": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16494,
        16509
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1683": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16494,
        16509
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1684": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16494,
        16509
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1685": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16494,
        16509
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1687": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16494,
        16509
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1688": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16494,
        16509
      ],
      "op": "DUP4",
      "path": "10"
    },
    "1689": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16494,
        16509
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "1690": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16510,
        16512
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x7"
    },
    "1692": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16510,
        16512
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1693": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16510,
        16512
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1694": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16494,
        16513
      ],
      "op": "DUP6",
      "path": "10"
    },
    "1695": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16494,
        16513
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1696": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16494,
        16513
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "1697": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16494,
        16513
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1698": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16494,
        16513
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1699": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16494,
        16513
      ],
      "op": "DUP4",
      "path": "10"
    },
    "1700": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16494,
        16513
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "1701": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16521,
        16538
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "1703": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16494,
        16518
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1704": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16494,
        16518
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1705": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16494,
        16518
      ],
      "op": "ADD",
      "path": "10"
    },
    "1706": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16494,
        16538
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1707": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16494,
        16538
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1708": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1710": {
      "op": "NOT"
    },
    "1711": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16494,
        16538
      ],
      "op": "AND",
      "path": "10"
    },
    "1712": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16494,
        16538
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1713": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16494,
        16538
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1714": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16494,
        16538
      ],
      "op": "OR",
      "path": "10"
    },
    "1715": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16494,
        16538
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1716": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16494,
        16538
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "1717": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16564,
        16566
      ],
      "op": "SWAP1",
      "path": "10",
      "statement": 10
    },
    "1718": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16564,
        16566
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1719": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16548,
        16567
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1720": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16548,
        16567
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1721": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16548,
        16567
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1722": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16548,
        16567
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "1723": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16548,
        16581
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x2"
    },
    "1725": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16548,
        16581
      ],
      "op": "ADD",
      "path": "10"
    },
    "1726": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16548,
        16588
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1727": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16548,
        16588
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1728": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16585,
        16588
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2C5"
    },
    "1731": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16585,
        16588
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "1732": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16494,
        16509
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1733": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16548,
        16588
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x6CF"
    },
    "1736": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16548,
        16588
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1737": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16585,
        16588
      ],
      "op": "DUP5",
      "path": "10"
    },
    "1738": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16585,
        16588
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1739": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16548,
        16588
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2973"
    },
    "1742": {
      "fn": "pool.createFakeBuyer",
      "jump": "i",
      "offset": [
        16548,
        16588
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1743": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16548,
        16588
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1744": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16548,
        16588
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "1745": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16548,
        16588
      ],
      "op": "POP",
      "path": "10"
    },
    "1746": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16548,
        16588
      ],
      "op": "POP",
      "path": "10"
    },
    "1747": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16548,
        16588
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1748": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16548,
        16588
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1749": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16548,
        16588
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "1750": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16548,
        16588
      ],
      "op": "POP",
      "path": "10"
    },
    "1751": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16615,
        16620
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 11,
      "value": "0x65D6"
    },
    "1754": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16598,
        16600
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x6"
    },
    "1756": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16601,
        16603
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x7"
    },
    "1758": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16601,
        16603
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1759": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16598,
        16604
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1760": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16598,
        16604
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1761": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16598,
        16604
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1762": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16598,
        16604
      ],
      "op": "LT",
      "path": "10"
    },
    "1763": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16598,
        16604
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x6EE"
    },
    "1766": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16598,
        16604
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1767": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16598,
        16604
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x6EE"
    },
    "1770": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16598,
        16604
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x298B"
    },
    "1773": {
      "fn": "pool.createFakeBuyer",
      "jump": "i",
      "offset": [
        16598,
        16604
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1774": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16598,
        16604
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1775": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16598,
        16604
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1776": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16598,
        16604
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1778": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16598,
        16604
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1779": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16598,
        16604
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1781": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16598,
        16604
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1783": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16598,
        16604
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "1784": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16598,
        16604
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1785": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16598,
        16604
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1787": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16598,
        16604
      ],
      "op": "MUL",
      "path": "10"
    },
    "1788": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16598,
        16604
      ],
      "op": "ADD",
      "path": "10"
    },
    "1789": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16598,
        16611
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x2"
    },
    "1791": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16598,
        16611
      ],
      "op": "ADD",
      "path": "10"
    },
    "1792": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16598,
        16611
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1794": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16598,
        16620
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1795": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16598,
        16620
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1796": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16598,
        16620
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1797": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16598,
        16620
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x70E"
    },
    "1800": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16598,
        16620
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1801": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16598,
        16620
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1802": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16598,
        16620
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2973"
    },
    "1805": {
      "fn": "pool.createFakeBuyer",
      "jump": "i",
      "offset": [
        16598,
        16620
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1806": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16598,
        16620
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1807": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16598,
        16620
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1808": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16598,
        16620
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1809": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16598,
        16620
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "1810": {
      "op": "POP"
    },
    "1811": {
      "op": "POP"
    },
    "1812": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16630,
        16657
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 12,
      "value": "0x40"
    },
    "1814": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16630,
        16657
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1815": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16630,
        16657
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1816": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16630,
        16657
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x80"
    },
    "1818": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16630,
        16657
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1819": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16630,
        16657
      ],
      "op": "ADD",
      "path": "10"
    },
    "1820": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16630,
        16657
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1821": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16630,
        16657
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1822": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16646,
        16647
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x2"
    },
    "1824": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16630,
        16657
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1825": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16630,
        16657
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1826": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16649,
        16650
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "1828": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16630,
        16657
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1830": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16630,
        16657
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1831": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16630,
        16657
      ],
      "op": "ADD",
      "path": "10"
    },
    "1832": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16630,
        16657
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1833": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1835": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16630,
        16657
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1836": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16630,
        16657
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1837": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16630,
        16657
      ],
      "op": "ADD",
      "path": "10"
    },
    "1838": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16630,
        16657
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1839": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16630,
        16657
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1840": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16630,
        16657
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1841": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16630,
        16657
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1842": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16655,
        16656
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "1844": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16630,
        16657
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x60"
    },
    "1846": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16630,
        16657
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1847": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16630,
        16657
      ],
      "op": "ADD",
      "path": "10"
    },
    "1848": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16630,
        16657
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1849": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16633,
        16635
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x7"
    },
    "1851": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16633,
        16635
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1852": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16630,
        16632
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x6"
    },
    "1854": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16630,
        16636
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1855": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16630,
        16636
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1856": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16630,
        16632
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1857": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16630,
        16632
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1858": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16633,
        16635
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1859": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16630,
        16636
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1860": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16630,
        16636
      ],
      "op": "LT",
      "path": "10"
    },
    "1861": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16630,
        16636
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x750"
    },
    "1864": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16630,
        16636
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1865": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16630,
        16636
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x750"
    },
    "1868": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16630,
        16636
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x298B"
    },
    "1871": {
      "fn": "pool.createFakeBuyer",
      "jump": "i",
      "offset": [
        16630,
        16636
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1872": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16630,
        16636
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1873": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16630,
        16636
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1874": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16630,
        16636
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1876": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16630,
        16636
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1877": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16630,
        16636
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1879": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16630,
        16636
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1881": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16630,
        16636
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "1882": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16630,
        16636
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1883": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16630,
        16636
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1885": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16630,
        16636
      ],
      "op": "MUL",
      "path": "10"
    },
    "1886": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16630,
        16636
      ],
      "op": "ADD",
      "path": "10"
    },
    "1887": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16630,
        16642
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "1889": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16630,
        16642
      ],
      "op": "ADD",
      "path": "10"
    },
    "1890": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16630,
        16657
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1891": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16630,
        16657
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1893": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16630,
        16657
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x76F"
    },
    "1896": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16630,
        16657
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "1897": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16630,
        16657
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1898": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16630,
        16657
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1899": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16630,
        16657
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x279C"
    },
    "1902": {
      "fn": "pool.createFakeBuyer",
      "jump": "i",
      "offset": [
        16630,
        16657
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1903": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16630,
        16657
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1904": {
      "op": "POP"
    },
    "1905": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1907": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1909": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1911": {
      "op": "SHL"
    },
    "1912": {
      "op": "SUB"
    },
    "1913": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16667,
        16690
      ],
      "op": "AND",
      "path": "10",
      "statement": 13
    },
    "1914": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16667,
        16690
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1916": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16667,
        16690
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1917": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16667,
        16690
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1918": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16667,
        16690
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1919": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16667,
        16679
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "1921": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16667,
        16690
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1923": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16667,
        16690
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1924": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16667,
        16690
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1926": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16667,
        16690
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1927": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16667,
        16690
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "1928": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16693,
        16699
      ],
      "op": "PUSH3",
      "path": "10",
      "value": "0x186A0"
    },
    "1932": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16667,
        16699
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1933": {
      "fn": "pool.createFakeBuyer",
      "offset": [
        16667,
        16699
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "1934": {
      "fn": "pool.createFakeBuyer",
      "jump": "o",
      "offset": [
        15892,
        16706
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1935": {
      "fn": "pool.placeBid",
      "offset": [
        3879,
        5507
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1936": {
      "fn": "pool.placeBid",
      "offset": [
        4062,
        4072
      ],
      "op": "CALLER",
      "path": "10"
    },
    "1937": {
      "fn": "pool.placeBid",
      "offset": [
        4119,
        4161
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 14,
      "value": "0x79B"
    },
    "1940": {
      "offset": [
        311,
        313
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xA"
    },
    "1942": {
      "fn": "pool.placeBid",
      "offset": [
        4119,
        4134
      ],
      "op": "TIMESTAMP",
      "path": "10"
    },
    "1943": {
      "fn": "pool.placeBid",
      "offset": [
        4119,
        4161
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x29A1"
    },
    "1946": {
      "fn": "pool.placeBid",
      "jump": "i",
      "offset": [
        4119,
        4161
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1947": {
      "fn": "pool.placeBid",
      "offset": [
        4119,
        4161
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1948": {
      "fn": "pool.placeBid",
      "offset": [
        4103,
        4105
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x6"
    },
    "1950": {
      "fn": "pool.placeBid",
      "offset": [
        4106,
        4108
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x7"
    },
    "1952": {
      "fn": "pool.placeBid",
      "offset": [
        4106,
        4108
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1953": {
      "fn": "pool.placeBid",
      "offset": [
        4103,
        4109
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1954": {
      "fn": "pool.placeBid",
      "offset": [
        4103,
        4109
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1955": {
      "fn": "pool.placeBid",
      "offset": [
        4103,
        4109
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1956": {
      "fn": "pool.placeBid",
      "offset": [
        4103,
        4109
      ],
      "op": "LT",
      "path": "10"
    },
    "1957": {
      "fn": "pool.placeBid",
      "offset": [
        4103,
        4109
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x7B0"
    },
    "1960": {
      "fn": "pool.placeBid",
      "offset": [
        4103,
        4109
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1961": {
      "fn": "pool.placeBid",
      "offset": [
        4103,
        4109
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x7B0"
    },
    "1964": {
      "fn": "pool.placeBid",
      "offset": [
        4103,
        4109
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x298B"
    },
    "1967": {
      "fn": "pool.placeBid",
      "jump": "i",
      "offset": [
        4103,
        4109
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1968": {
      "fn": "pool.placeBid",
      "offset": [
        4103,
        4109
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1969": {
      "fn": "pool.placeBid",
      "offset": [
        4103,
        4109
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1970": {
      "fn": "pool.placeBid",
      "offset": [
        4103,
        4109
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1972": {
      "fn": "pool.placeBid",
      "offset": [
        4103,
        4109
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1973": {
      "fn": "pool.placeBid",
      "offset": [
        4103,
        4109
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1975": {
      "fn": "pool.placeBid",
      "offset": [
        4103,
        4109
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1977": {
      "fn": "pool.placeBid",
      "offset": [
        4103,
        4109
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "1978": {
      "fn": "pool.placeBid",
      "offset": [
        4103,
        4109
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1979": {
      "fn": "pool.placeBid",
      "offset": [
        4103,
        4109
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1981": {
      "fn": "pool.placeBid",
      "offset": [
        4103,
        4109
      ],
      "op": "MUL",
      "path": "10"
    },
    "1982": {
      "fn": "pool.placeBid",
      "offset": [
        4103,
        4109
      ],
      "op": "ADD",
      "path": "10"
    },
    "1983": {
      "fn": "pool.placeBid",
      "offset": [
        4103,
        4116
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "1985": {
      "fn": "pool.placeBid",
      "offset": [
        4103,
        4116
      ],
      "op": "ADD",
      "path": "10"
    },
    "1986": {
      "fn": "pool.placeBid",
      "offset": [
        4103,
        4116
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1987": {
      "branch": 99,
      "fn": "pool.placeBid",
      "offset": [
        4103,
        4161
      ],
      "op": "GT",
      "path": "10"
    },
    "1988": {
      "fn": "pool.placeBid",
      "offset": [
        4082,
        4225
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x7E8"
    },
    "1991": {
      "branch": 99,
      "fn": "pool.placeBid",
      "offset": [
        4082,
        4225
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1992": {
      "fn": "pool.placeBid",
      "offset": [
        4082,
        4225
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1994": {
      "fn": "pool.placeBid",
      "offset": [
        4082,
        4225
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1995": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1999": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2001": {
      "op": "SHL"
    },
    "2002": {
      "fn": "pool.placeBid",
      "offset": [
        4082,
        4225
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2003": {
      "fn": "pool.placeBid",
      "offset": [
        4082,
        4225
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2004": {
      "fn": "pool.placeBid",
      "offset": [
        4082,
        4225
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "2006": {
      "fn": "pool.placeBid",
      "offset": [
        4082,
        4225
      ],
      "op": "ADD",
      "path": "10"
    },
    "2007": {
      "fn": "pool.placeBid",
      "offset": [
        4082,
        4225
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x7DF"
    },
    "2010": {
      "fn": "pool.placeBid",
      "offset": [
        4082,
        4225
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2011": {
      "fn": "pool.placeBid",
      "offset": [
        4082,
        4225
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x29B8"
    },
    "2014": {
      "fn": "pool.placeBid",
      "jump": "i",
      "offset": [
        4082,
        4225
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2015": {
      "fn": "pool.placeBid",
      "offset": [
        4082,
        4225
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2016": {
      "fn": "pool.placeBid",
      "offset": [
        4082,
        4225
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2018": {
      "fn": "pool.placeBid",
      "offset": [
        4082,
        4225
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2019": {
      "fn": "pool.placeBid",
      "offset": [
        4082,
        4225
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2020": {
      "fn": "pool.placeBid",
      "offset": [
        4082,
        4225
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2021": {
      "fn": "pool.placeBid",
      "offset": [
        4082,
        4225
      ],
      "op": "SUB",
      "path": "10"
    },
    "2022": {
      "fn": "pool.placeBid",
      "offset": [
        4082,
        4225
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2023": {
      "fn": "pool.placeBid",
      "offset": [
        4082,
        4225
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "10"
    },
    "2024": {
      "fn": "pool.placeBid",
      "offset": [
        4082,
        4225
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2025": {
      "fn": "pool.placeBid",
      "offset": [
        4280,
        4298
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 15,
      "value": "0x2"
    },
    "2027": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2029": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2031": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2033": {
      "op": "SHL"
    },
    "2034": {
      "op": "SUB"
    },
    "2035": {
      "fn": "pool.placeBid",
      "offset": [
        4256,
        4267
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2036": {
      "fn": "pool.placeBid",
      "offset": [
        4256,
        4267
      ],
      "op": "AND",
      "path": "10"
    },
    "2037": {
      "fn": "pool.placeBid",
      "offset": [
        4256,
        4267
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2039": {
      "fn": "pool.placeBid",
      "offset": [
        4256,
        4267
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2040": {
      "fn": "pool.placeBid",
      "offset": [
        4256,
        4267
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2041": {
      "fn": "pool.placeBid",
      "offset": [
        4256,
        4267
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2042": {
      "fn": "pool.placeBid",
      "offset": [
        4256,
        4260
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x5"
    },
    "2044": {
      "fn": "pool.placeBid",
      "offset": [
        4256,
        4267
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "2046": {
      "fn": "pool.placeBid",
      "offset": [
        4256,
        4267
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2047": {
      "fn": "pool.placeBid",
      "offset": [
        4256,
        4267
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2048": {
      "fn": "pool.placeBid",
      "offset": [
        4256,
        4267
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2049": {
      "fn": "pool.placeBid",
      "offset": [
        4256,
        4267
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2051": {
      "fn": "pool.placeBid",
      "offset": [
        4256,
        4267
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2052": {
      "fn": "pool.placeBid",
      "offset": [
        4256,
        4267
      ],
      "op": "DUP4",
      "path": "10"
    },
    "2053": {
      "fn": "pool.placeBid",
      "offset": [
        4256,
        4267
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "2054": {
      "fn": "pool.placeBid",
      "offset": [
        4268,
        4270
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x7"
    },
    "2056": {
      "fn": "pool.placeBid",
      "offset": [
        4268,
        4270
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "2057": {
      "fn": "pool.placeBid",
      "offset": [
        4256,
        4271
      ],
      "op": "DUP5",
      "path": "10"
    },
    "2058": {
      "fn": "pool.placeBid",
      "offset": [
        4256,
        4271
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2059": {
      "fn": "pool.placeBid",
      "offset": [
        4256,
        4271
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2060": {
      "fn": "pool.placeBid",
      "offset": [
        4256,
        4271
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2061": {
      "fn": "pool.placeBid",
      "offset": [
        4256,
        4271
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2062": {
      "fn": "pool.placeBid",
      "offset": [
        4256,
        4271
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2063": {
      "fn": "pool.placeBid",
      "offset": [
        4256,
        4271
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "2064": {
      "fn": "pool.placeBid",
      "offset": [
        4256,
        4276
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "2066": {
      "fn": "pool.placeBid",
      "offset": [
        4256,
        4276
      ],
      "op": "ADD",
      "path": "10"
    },
    "2067": {
      "fn": "pool.placeBid",
      "offset": [
        4256,
        4276
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "2068": {
      "fn": "pool.placeBid",
      "offset": [
        4256,
        4276
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xFF"
    },
    "2070": {
      "fn": "pool.placeBid",
      "offset": [
        4256,
        4276
      ],
      "op": "AND",
      "path": "10"
    },
    "2071": {
      "fn": "pool.placeBid",
      "offset": [
        4256,
        4298
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "2073": {
      "fn": "pool.placeBid",
      "offset": [
        4256,
        4298
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2074": {
      "fn": "pool.placeBid",
      "offset": [
        4256,
        4298
      ],
      "op": "GT",
      "path": "10"
    },
    "2075": {
      "fn": "pool.placeBid",
      "offset": [
        4256,
        4298
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "2076": {
      "fn": "pool.placeBid",
      "offset": [
        4256,
        4298
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x827"
    },
    "2079": {
      "fn": "pool.placeBid",
      "offset": [
        4256,
        4298
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "2080": {
      "fn": "pool.placeBid",
      "offset": [
        4256,
        4298
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x827"
    },
    "2083": {
      "fn": "pool.placeBid",
      "offset": [
        4256,
        4298
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2870"
    },
    "2086": {
      "fn": "pool.placeBid",
      "jump": "i",
      "offset": [
        4256,
        4298
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2087": {
      "fn": "pool.placeBid",
      "offset": [
        4256,
        4298
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2088": {
      "fn": "pool.placeBid",
      "offset": [
        4256,
        4298
      ],
      "op": "EQ",
      "path": "10"
    },
    "2089": {
      "branch": 100,
      "fn": "pool.placeBid",
      "offset": [
        4256,
        4298
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "2090": {
      "fn": "pool.placeBid",
      "offset": [
        4235,
        4351
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x875"
    },
    "2093": {
      "branch": 100,
      "fn": "pool.placeBid",
      "offset": [
        4235,
        4351
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "2094": {
      "fn": "pool.placeBid",
      "offset": [
        4235,
        4351
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2096": {
      "fn": "pool.placeBid",
      "offset": [
        4235,
        4351
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2097": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2101": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2103": {
      "op": "SHL"
    },
    "2104": {
      "fn": "pool.placeBid",
      "offset": [
        4235,
        4351
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2105": {
      "fn": "pool.placeBid",
      "offset": [
        4235,
        4351
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2106": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2108": {
      "fn": "pool.placeBid",
      "offset": [
        4235,
        4351
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "2110": {
      "fn": "pool.placeBid",
      "offset": [
        4235,
        4351
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2111": {
      "fn": "pool.placeBid",
      "offset": [
        4235,
        4351
      ],
      "op": "ADD",
      "path": "10"
    },
    "2112": {
      "op": "MSTORE"
    },
    "2113": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "2115": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2117": {
      "op": "DUP3"
    },
    "2118": {
      "op": "ADD"
    },
    "2119": {
      "op": "MSTORE"
    },
    "2120": {
      "op": "PUSH32",
      "value": "0x73656C6C6572206F66206F7074696F6E2063616E6E6F74206275790000000000"
    },
    "2153": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2155": {
      "op": "DUP3"
    },
    "2156": {
      "op": "ADD"
    },
    "2157": {
      "op": "MSTORE"
    },
    "2158": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2160": {
      "op": "ADD"
    },
    "2161": {
      "fn": "pool.placeBid",
      "offset": [
        4235,
        4351
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x7DF"
    },
    "2164": {
      "op": "JUMP"
    },
    "2165": {
      "fn": "pool.placeBid",
      "offset": [
        4235,
        4351
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2166": {
      "offset": [
        371,
        374
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x64"
    },
    "2168": {
      "fn": "pool.placeBid",
      "offset": [
        4369,
        4376
      ],
      "op": "DUP3",
      "path": "10",
      "statement": 16
    },
    "2169": {
      "fn": "pool.placeBid",
      "offset": [
        4369,
        4394
      ],
      "op": "LT",
      "path": "10"
    },
    "2170": {
      "branch": 101,
      "fn": "pool.placeBid",
      "offset": [
        4369,
        4394
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "2171": {
      "fn": "pool.placeBid",
      "offset": [
        4361,
        4413
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x8B7"
    },
    "2174": {
      "branch": 101,
      "fn": "pool.placeBid",
      "offset": [
        4361,
        4413
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "2175": {
      "fn": "pool.placeBid",
      "offset": [
        4361,
        4413
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2177": {
      "fn": "pool.placeBid",
      "offset": [
        4361,
        4413
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2178": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2182": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2184": {
      "op": "SHL"
    },
    "2185": {
      "fn": "pool.placeBid",
      "offset": [
        4361,
        4413
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2186": {
      "fn": "pool.placeBid",
      "offset": [
        4361,
        4413
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2187": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2189": {
      "fn": "pool.placeBid",
      "offset": [
        4361,
        4413
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "2191": {
      "fn": "pool.placeBid",
      "offset": [
        4361,
        4413
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2192": {
      "fn": "pool.placeBid",
      "offset": [
        4361,
        4413
      ],
      "op": "ADD",
      "path": "10"
    },
    "2193": {
      "op": "MSTORE"
    },
    "2194": {
      "op": "PUSH1",
      "value": "0xE"
    },
    "2196": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2198": {
      "op": "DUP3"
    },
    "2199": {
      "op": "ADD"
    },
    "2200": {
      "op": "MSTORE"
    },
    "2201": {
      "op": "PUSH14",
      "value": "0x4D696E2073697A65203D2031303"
    },
    "2216": {
      "op": "PUSH1",
      "value": "0x94"
    },
    "2218": {
      "op": "SHL"
    },
    "2219": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2221": {
      "op": "DUP3"
    },
    "2222": {
      "op": "ADD"
    },
    "2223": {
      "op": "MSTORE"
    },
    "2224": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2226": {
      "op": "ADD"
    },
    "2227": {
      "fn": "pool.placeBid",
      "offset": [
        4361,
        4413
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x7DF"
    },
    "2230": {
      "op": "JUMP"
    },
    "2231": {
      "fn": "pool.placeBid",
      "offset": [
        4361,
        4413
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2232": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2234": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2236": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2238": {
      "op": "SHL"
    },
    "2239": {
      "op": "SUB"
    },
    "2240": {
      "fn": "pool.placeBid",
      "offset": [
        4442,
        4461
      ],
      "op": "DUP2",
      "path": "10",
      "statement": 17
    },
    "2241": {
      "fn": "pool.placeBid",
      "offset": [
        4442,
        4461
      ],
      "op": "AND",
      "path": "10"
    },
    "2242": {
      "fn": "pool.placeBid",
      "offset": [
        4442,
        4461
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2244": {
      "fn": "pool.placeBid",
      "offset": [
        4442,
        4461
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2245": {
      "fn": "pool.placeBid",
      "offset": [
        4442,
        4461
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2246": {
      "fn": "pool.placeBid",
      "offset": [
        4442,
        4461
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2247": {
      "fn": "pool.placeBid",
      "offset": [
        4442,
        4454
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "2249": {
      "fn": "pool.placeBid",
      "offset": [
        4442,
        4461
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "2251": {
      "fn": "pool.placeBid",
      "offset": [
        4442,
        4461
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2252": {
      "fn": "pool.placeBid",
      "offset": [
        4442,
        4461
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2254": {
      "fn": "pool.placeBid",
      "offset": [
        4442,
        4461
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2255": {
      "fn": "pool.placeBid",
      "offset": [
        4442,
        4461
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "2256": {
      "fn": "pool.placeBid",
      "offset": [
        4442,
        4461
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "2257": {
      "fn": "pool.placeBid",
      "offset": [
        4431,
        4461
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2258": {
      "fn": "pool.placeBid",
      "offset": [
        4431,
        4461
      ],
      "op": "GT",
      "path": "10"
    },
    "2259": {
      "branch": 102,
      "fn": "pool.placeBid",
      "offset": [
        4431,
        4461
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "2260": {
      "fn": "pool.placeBid",
      "offset": [
        4423,
        4481
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x911"
    },
    "2263": {
      "branch": 102,
      "fn": "pool.placeBid",
      "offset": [
        4423,
        4481
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "2264": {
      "fn": "pool.placeBid",
      "offset": [
        4423,
        4481
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2266": {
      "fn": "pool.placeBid",
      "offset": [
        4423,
        4481
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2267": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2271": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2273": {
      "op": "SHL"
    },
    "2274": {
      "fn": "pool.placeBid",
      "offset": [
        4423,
        4481
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2275": {
      "fn": "pool.placeBid",
      "offset": [
        4423,
        4481
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2276": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2278": {
      "fn": "pool.placeBid",
      "offset": [
        4423,
        4481
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "2280": {
      "fn": "pool.placeBid",
      "offset": [
        4423,
        4481
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2281": {
      "fn": "pool.placeBid",
      "offset": [
        4423,
        4481
      ],
      "op": "ADD",
      "path": "10"
    },
    "2282": {
      "op": "MSTORE"
    },
    "2283": {
      "op": "PUSH1",
      "value": "0xF"
    },
    "2285": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2287": {
      "op": "DUP3"
    },
    "2288": {
      "op": "ADD"
    },
    "2289": {
      "op": "MSTORE"
    },
    "2290": {
      "op": "PUSH15",
      "value": "0xDCDEE840CADCDEEACED040C6C2E6D"
    },
    "2306": {
      "op": "PUSH1",
      "value": "0x8B"
    },
    "2308": {
      "op": "SHL"
    },
    "2309": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2311": {
      "op": "DUP3"
    },
    "2312": {
      "op": "ADD"
    },
    "2313": {
      "op": "MSTORE"
    },
    "2314": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2316": {
      "op": "ADD"
    },
    "2317": {
      "fn": "pool.placeBid",
      "offset": [
        4423,
        4481
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x7DF"
    },
    "2320": {
      "op": "JUMP"
    },
    "2321": {
      "fn": "pool.placeBid",
      "offset": [
        4423,
        4481
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2322": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2324": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2326": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2328": {
      "op": "SHL"
    },
    "2329": {
      "op": "SUB"
    },
    "2330": {
      "fn": "pool.placeBid",
      "offset": [
        4635,
        4646
      ],
      "op": "DUP2",
      "path": "10",
      "statement": 18
    },
    "2331": {
      "fn": "pool.placeBid",
      "offset": [
        4635,
        4646
      ],
      "op": "AND",
      "path": "10"
    },
    "2332": {
      "fn": "pool.placeBid",
      "offset": [
        4635,
        4646
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2334": {
      "fn": "pool.placeBid",
      "offset": [
        4635,
        4646
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2335": {
      "fn": "pool.placeBid",
      "offset": [
        4635,
        4646
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2336": {
      "fn": "pool.placeBid",
      "offset": [
        4635,
        4646
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2337": {
      "fn": "pool.placeBid",
      "offset": [
        4635,
        4639
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x5"
    },
    "2339": {
      "fn": "pool.placeBid",
      "offset": [
        4635,
        4646
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "2341": {
      "fn": "pool.placeBid",
      "offset": [
        4635,
        4646
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2342": {
      "fn": "pool.placeBid",
      "offset": [
        4635,
        4646
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2343": {
      "fn": "pool.placeBid",
      "offset": [
        4635,
        4646
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2344": {
      "fn": "pool.placeBid",
      "offset": [
        4635,
        4646
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2346": {
      "fn": "pool.placeBid",
      "offset": [
        4635,
        4646
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2347": {
      "fn": "pool.placeBid",
      "offset": [
        4635,
        4646
      ],
      "op": "DUP4",
      "path": "10"
    },
    "2348": {
      "fn": "pool.placeBid",
      "offset": [
        4635,
        4646
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "2349": {
      "fn": "pool.placeBid",
      "offset": [
        4647,
        4649
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x7"
    },
    "2351": {
      "fn": "pool.placeBid",
      "offset": [
        4647,
        4649
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2352": {
      "fn": "pool.placeBid",
      "offset": [
        4647,
        4649
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "2353": {
      "fn": "pool.placeBid",
      "offset": [
        4635,
        4650
      ],
      "op": "DUP6",
      "path": "10"
    },
    "2354": {
      "fn": "pool.placeBid",
      "offset": [
        4635,
        4650
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2355": {
      "fn": "pool.placeBid",
      "offset": [
        4635,
        4650
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "2356": {
      "fn": "pool.placeBid",
      "offset": [
        4635,
        4650
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2357": {
      "fn": "pool.placeBid",
      "offset": [
        4635,
        4650
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2358": {
      "fn": "pool.placeBid",
      "offset": [
        4635,
        4650
      ],
      "op": "DUP4",
      "path": "10"
    },
    "2359": {
      "fn": "pool.placeBid",
      "offset": [
        4635,
        4650
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "2360": {
      "fn": "pool.placeBid",
      "offset": [
        4658,
        4675
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "2362": {
      "fn": "pool.placeBid",
      "offset": [
        4635,
        4655
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2363": {
      "fn": "pool.placeBid",
      "offset": [
        4635,
        4655
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2364": {
      "fn": "pool.placeBid",
      "offset": [
        4635,
        4655
      ],
      "op": "ADD",
      "path": "10"
    },
    "2365": {
      "fn": "pool.placeBid",
      "offset": [
        4635,
        4675
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2366": {
      "fn": "pool.placeBid",
      "offset": [
        4635,
        4675
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "2367": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2369": {
      "op": "NOT"
    },
    "2370": {
      "fn": "pool.placeBid",
      "offset": [
        4635,
        4675
      ],
      "op": "AND",
      "path": "10"
    },
    "2371": {
      "fn": "pool.placeBid",
      "offset": [
        4635,
        4675
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2372": {
      "fn": "pool.placeBid",
      "offset": [
        4635,
        4675
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2373": {
      "fn": "pool.placeBid",
      "offset": [
        4635,
        4675
      ],
      "op": "OR",
      "path": "10"
    },
    "2374": {
      "fn": "pool.placeBid",
      "offset": [
        4635,
        4675
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2375": {
      "fn": "pool.placeBid",
      "offset": [
        4635,
        4675
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "2376": {
      "fn": "pool.placeBid",
      "offset": [
        4697,
        4699
      ],
      "op": "SWAP1",
      "path": "10",
      "statement": 19
    },
    "2377": {
      "fn": "pool.placeBid",
      "offset": [
        4697,
        4699
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "2378": {
      "fn": "pool.placeBid",
      "offset": [
        4685,
        4700
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2379": {
      "fn": "pool.placeBid",
      "offset": [
        4685,
        4700
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2380": {
      "fn": "pool.placeBid",
      "offset": [
        4685,
        4700
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2381": {
      "fn": "pool.placeBid",
      "offset": [
        4685,
        4700
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "2382": {
      "fn": "pool.placeBid",
      "offset": [
        4685,
        4714
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x2"
    },
    "2384": {
      "fn": "pool.placeBid",
      "offset": [
        4685,
        4714
      ],
      "op": "ADD",
      "path": "10"
    },
    "2385": {
      "fn": "pool.placeBid",
      "offset": [
        4685,
        4725
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2386": {
      "fn": "pool.placeBid",
      "offset": [
        4685,
        4725
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "2387": {
      "fn": "pool.placeBid",
      "offset": [
        4718,
        4725
      ],
      "op": "DUP5",
      "path": "10"
    },
    "2388": {
      "fn": "pool.placeBid",
      "offset": [
        4718,
        4725
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "2389": {
      "fn": "pool.placeBid",
      "offset": [
        4635,
        4646
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2390": {
      "fn": "pool.placeBid",
      "offset": [
        4685,
        4725
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x960"
    },
    "2393": {
      "fn": "pool.placeBid",
      "offset": [
        4685,
        4725
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2394": {
      "fn": "pool.placeBid",
      "offset": [
        4718,
        4725
      ],
      "op": "DUP5",
      "path": "10"
    },
    "2395": {
      "fn": "pool.placeBid",
      "offset": [
        4718,
        4725
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2396": {
      "fn": "pool.placeBid",
      "offset": [
        4685,
        4725
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2973"
    },
    "2399": {
      "fn": "pool.placeBid",
      "jump": "i",
      "offset": [
        4685,
        4725
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2400": {
      "fn": "pool.placeBid",
      "offset": [
        4685,
        4725
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2401": {
      "fn": "pool.placeBid",
      "offset": [
        4685,
        4725
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2402": {
      "fn": "pool.placeBid",
      "offset": [
        4685,
        4725
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2403": {
      "fn": "pool.placeBid",
      "offset": [
        4685,
        4725
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "2404": {
      "op": "POP"
    },
    "2405": {
      "op": "POP"
    },
    "2406": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2408": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2410": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2412": {
      "op": "SHL"
    },
    "2413": {
      "op": "SUB"
    },
    "2414": {
      "fn": "pool.placeBid",
      "offset": [
        4779,
        4798
      ],
      "op": "DUP2",
      "path": "10",
      "statement": 20
    },
    "2415": {
      "fn": "pool.placeBid",
      "offset": [
        4779,
        4798
      ],
      "op": "AND",
      "path": "10"
    },
    "2416": {
      "fn": "pool.placeBid",
      "offset": [
        4779,
        4798
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2418": {
      "fn": "pool.placeBid",
      "offset": [
        4779,
        4798
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2419": {
      "fn": "pool.placeBid",
      "offset": [
        4779,
        4798
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2420": {
      "fn": "pool.placeBid",
      "offset": [
        4779,
        4798
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2421": {
      "fn": "pool.placeBid",
      "offset": [
        4779,
        4791
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "2423": {
      "fn": "pool.placeBid",
      "offset": [
        4779,
        4798
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "2425": {
      "fn": "pool.placeBid",
      "offset": [
        4779,
        4798
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2426": {
      "fn": "pool.placeBid",
      "offset": [
        4779,
        4798
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2428": {
      "fn": "pool.placeBid",
      "offset": [
        4779,
        4798
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2429": {
      "fn": "pool.placeBid",
      "offset": [
        4779,
        4798
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "2430": {
      "fn": "pool.placeBid",
      "offset": [
        4779,
        4809
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2431": {
      "fn": "pool.placeBid",
      "offset": [
        4779,
        4809
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "2432": {
      "fn": "pool.placeBid",
      "offset": [
        4802,
        4809
      ],
      "op": "DUP5",
      "path": "10"
    },
    "2433": {
      "fn": "pool.placeBid",
      "offset": [
        4802,
        4809
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "2434": {
      "fn": "pool.placeBid",
      "offset": [
        4779,
        4798
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2435": {
      "fn": "pool.placeBid",
      "offset": [
        4779,
        4809
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x98D"
    },
    "2438": {
      "fn": "pool.placeBid",
      "offset": [
        4779,
        4809
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2439": {
      "fn": "pool.placeBid",
      "offset": [
        4802,
        4809
      ],
      "op": "DUP5",
      "path": "10"
    },
    "2440": {
      "fn": "pool.placeBid",
      "offset": [
        4802,
        4809
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2441": {
      "fn": "pool.placeBid",
      "offset": [
        4779,
        4809
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x29A1"
    },
    "2444": {
      "fn": "pool.placeBid",
      "jump": "i",
      "offset": [
        4779,
        4809
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2445": {
      "fn": "pool.placeBid",
      "offset": [
        4779,
        4809
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2446": {
      "fn": "pool.placeBid",
      "offset": [
        4779,
        4809
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "2447": {
      "fn": "pool.placeBid",
      "offset": [
        4779,
        4809
      ],
      "op": "POP",
      "path": "10"
    },
    "2448": {
      "fn": "pool.placeBid",
      "offset": [
        4779,
        4809
      ],
      "op": "POP",
      "path": "10"
    },
    "2449": {
      "fn": "pool.placeBid",
      "offset": [
        4779,
        4809
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2450": {
      "fn": "pool.placeBid",
      "offset": [
        4779,
        4809
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2451": {
      "fn": "pool.placeBid",
      "offset": [
        4779,
        4809
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "2452": {
      "fn": "pool.placeBid",
      "offset": [
        4779,
        4809
      ],
      "op": "POP",
      "path": "10"
    },
    "2453": {
      "fn": "pool.placeBid",
      "offset": [
        5181,
        5194
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2455": {
      "fn": "pool.placeBid",
      "offset": [
        5225,
        5231
      ],
      "op": "DUP4",
      "path": "10"
    },
    "2456": {
      "fn": "pool.placeBid",
      "offset": [
        5208,
        5210
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x6"
    },
    "2458": {
      "fn": "pool.placeBid",
      "offset": [
        5211,
        5213
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x7"
    },
    "2460": {
      "fn": "pool.placeBid",
      "offset": [
        5211,
        5213
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "2461": {
      "fn": "pool.placeBid",
      "offset": [
        5208,
        5214
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2462": {
      "fn": "pool.placeBid",
      "offset": [
        5208,
        5214
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "2463": {
      "fn": "pool.placeBid",
      "offset": [
        5208,
        5214
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2464": {
      "fn": "pool.placeBid",
      "offset": [
        5208,
        5214
      ],
      "op": "LT",
      "path": "10"
    },
    "2465": {
      "fn": "pool.placeBid",
      "offset": [
        5208,
        5214
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x9AC"
    },
    "2468": {
      "fn": "pool.placeBid",
      "offset": [
        5208,
        5214
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "2469": {
      "fn": "pool.placeBid",
      "offset": [
        5208,
        5214
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x9AC"
    },
    "2472": {
      "fn": "pool.placeBid",
      "offset": [
        5208,
        5214
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x298B"
    },
    "2475": {
      "fn": "pool.placeBid",
      "jump": "i",
      "offset": [
        5208,
        5214
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2476": {
      "fn": "pool.placeBid",
      "offset": [
        5208,
        5214
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2477": {
      "fn": "pool.placeBid",
      "offset": [
        5208,
        5214
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2478": {
      "fn": "pool.placeBid",
      "offset": [
        5208,
        5214
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2480": {
      "fn": "pool.placeBid",
      "offset": [
        5208,
        5214
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2481": {
      "fn": "pool.placeBid",
      "offset": [
        5208,
        5214
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "2483": {
      "fn": "pool.placeBid",
      "offset": [
        5208,
        5214
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2485": {
      "fn": "pool.placeBid",
      "offset": [
        5208,
        5214
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "2486": {
      "fn": "pool.placeBid",
      "offset": [
        5208,
        5214
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2487": {
      "fn": "pool.placeBid",
      "offset": [
        5208,
        5214
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "2489": {
      "fn": "pool.placeBid",
      "offset": [
        5208,
        5214
      ],
      "op": "MUL",
      "path": "10"
    },
    "2490": {
      "fn": "pool.placeBid",
      "offset": [
        5208,
        5214
      ],
      "op": "ADD",
      "path": "10"
    },
    "2491": {
      "fn": "pool.placeBid",
      "offset": [
        5208,
        5221
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2493": {
      "fn": "pool.placeBid",
      "offset": [
        5208,
        5221
      ],
      "op": "ADD",
      "path": "10"
    },
    "2494": {
      "fn": "pool.placeBid",
      "offset": [
        5208,
        5221
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "2495": {
      "fn": "pool.placeBid",
      "offset": [
        5198,
        5205
      ],
      "op": "DUP5",
      "path": "10"
    },
    "2496": {
      "fn": "pool.placeBid",
      "offset": [
        5198,
        5221
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x9C9"
    },
    "2499": {
      "fn": "pool.placeBid",
      "offset": [
        5198,
        5221
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2500": {
      "fn": "pool.placeBid",
      "offset": [
        5198,
        5221
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2501": {
      "fn": "pool.placeBid",
      "offset": [
        5198,
        5221
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x29FE"
    },
    "2504": {
      "fn": "pool.placeBid",
      "jump": "i",
      "offset": [
        5198,
        5221
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2505": {
      "fn": "pool.placeBid",
      "offset": [
        5198,
        5221
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2506": {
      "fn": "pool.placeBid",
      "offset": [
        5197,
        5231
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x9D3"
    },
    "2509": {
      "fn": "pool.placeBid",
      "offset": [
        5197,
        5231
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2510": {
      "fn": "pool.placeBid",
      "offset": [
        5197,
        5231
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2511": {
      "fn": "pool.placeBid",
      "offset": [
        5197,
        5231
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2A1D"
    },
    "2514": {
      "fn": "pool.placeBid",
      "jump": "i",
      "offset": [
        5197,
        5231
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2515": {
      "fn": "pool.placeBid",
      "offset": [
        5197,
        5231
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2516": {
      "fn": "pool.placeBid",
      "offset": [
        5181,
        5231
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2517": {
      "fn": "pool.placeBid",
      "offset": [
        5181,
        5231
      ],
      "op": "POP",
      "path": "10"
    },
    "2518": {
      "fn": "pool.placeBid",
      "offset": [
        5258,
        5263
      ],
      "op": "DUP1",
      "path": "10",
      "statement": 21
    },
    "2519": {
      "fn": "pool.placeBid",
      "offset": [
        5241,
        5243
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x6"
    },
    "2521": {
      "fn": "pool.placeBid",
      "offset": [
        5244,
        5246
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x7"
    },
    "2523": {
      "fn": "pool.placeBid",
      "offset": [
        5244,
        5246
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "2524": {
      "fn": "pool.placeBid",
      "offset": [
        5241,
        5247
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2525": {
      "fn": "pool.placeBid",
      "offset": [
        5241,
        5247
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "2526": {
      "fn": "pool.placeBid",
      "offset": [
        5241,
        5247
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2527": {
      "fn": "pool.placeBid",
      "offset": [
        5241,
        5247
      ],
      "op": "LT",
      "path": "10"
    },
    "2528": {
      "fn": "pool.placeBid",
      "offset": [
        5241,
        5247
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x9EB"
    },
    "2531": {
      "fn": "pool.placeBid",
      "offset": [
        5241,
        5247
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "2532": {
      "fn": "pool.placeBid",
      "offset": [
        5241,
        5247
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x9EB"
    },
    "2535": {
      "fn": "pool.placeBid",
      "offset": [
        5241,
        5247
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x298B"
    },
    "2538": {
      "fn": "pool.placeBid",
      "jump": "i",
      "offset": [
        5241,
        5247
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2539": {
      "fn": "pool.placeBid",
      "offset": [
        5241,
        5247
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2540": {
      "fn": "pool.placeBid",
      "offset": [
        5241,
        5247
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2541": {
      "fn": "pool.placeBid",
      "offset": [
        5241,
        5247
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2543": {
      "fn": "pool.placeBid",
      "offset": [
        5241,
        5247
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2544": {
      "fn": "pool.placeBid",
      "offset": [
        5241,
        5247
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "2546": {
      "fn": "pool.placeBid",
      "offset": [
        5241,
        5247
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2548": {
      "fn": "pool.placeBid",
      "offset": [
        5241,
        5247
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "2549": {
      "fn": "pool.placeBid",
      "offset": [
        5241,
        5247
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2550": {
      "fn": "pool.placeBid",
      "offset": [
        5241,
        5247
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "2552": {
      "fn": "pool.placeBid",
      "offset": [
        5241,
        5247
      ],
      "op": "MUL",
      "path": "10"
    },
    "2553": {
      "fn": "pool.placeBid",
      "offset": [
        5241,
        5247
      ],
      "op": "ADD",
      "path": "10"
    },
    "2554": {
      "fn": "pool.placeBid",
      "offset": [
        5241,
        5254
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x2"
    },
    "2556": {
      "fn": "pool.placeBid",
      "offset": [
        5241,
        5254
      ],
      "op": "ADD",
      "path": "10"
    },
    "2557": {
      "fn": "pool.placeBid",
      "offset": [
        5241,
        5254
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2559": {
      "fn": "pool.placeBid",
      "offset": [
        5241,
        5263
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2560": {
      "fn": "pool.placeBid",
      "offset": [
        5241,
        5263
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2561": {
      "fn": "pool.placeBid",
      "offset": [
        5241,
        5263
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "2562": {
      "fn": "pool.placeBid",
      "offset": [
        5241,
        5263
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xA0B"
    },
    "2565": {
      "fn": "pool.placeBid",
      "offset": [
        5241,
        5263
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2566": {
      "fn": "pool.placeBid",
      "offset": [
        5241,
        5263
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2567": {
      "fn": "pool.placeBid",
      "offset": [
        5241,
        5263
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2973"
    },
    "2570": {
      "fn": "pool.placeBid",
      "jump": "i",
      "offset": [
        5241,
        5263
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2571": {
      "fn": "pool.placeBid",
      "offset": [
        5241,
        5263
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2572": {
      "fn": "pool.placeBid",
      "offset": [
        5241,
        5263
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2573": {
      "fn": "pool.placeBid",
      "offset": [
        5241,
        5263
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2574": {
      "fn": "pool.placeBid",
      "offset": [
        5241,
        5263
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "2575": {
      "op": "POP"
    },
    "2576": {
      "op": "POP"
    },
    "2577": {
      "fn": "pool.placeBid",
      "offset": [
        5308,
        5310
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 22,
      "value": "0x7"
    },
    "2579": {
      "fn": "pool.placeBid",
      "offset": [
        5308,
        5310
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2580": {
      "fn": "pool.placeBid",
      "offset": [
        5308,
        5310
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "2581": {
      "fn": "pool.placeBid",
      "offset": [
        5303,
        5311
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2583": {
      "fn": "pool.placeBid",
      "offset": [
        5303,
        5311
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2584": {
      "fn": "pool.placeBid",
      "offset": [
        5303,
        5311
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2585": {
      "fn": "pool.placeBid",
      "offset": [
        5303,
        5311
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2586": {
      "fn": "pool.placeBid",
      "offset": [
        5303,
        5307
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "2588": {
      "fn": "pool.placeBid",
      "offset": [
        5303,
        5311
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "2590": {
      "fn": "pool.placeBid",
      "offset": [
        5303,
        5311
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2591": {
      "fn": "pool.placeBid",
      "offset": [
        5303,
        5311
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2592": {
      "fn": "pool.placeBid",
      "offset": [
        5303,
        5311
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2593": {
      "fn": "pool.placeBid",
      "offset": [
        5303,
        5311
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2595": {
      "fn": "pool.placeBid",
      "offset": [
        5303,
        5311
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2596": {
      "fn": "pool.placeBid",
      "offset": [
        5303,
        5311
      ],
      "op": "DUP4",
      "path": "10"
    },
    "2597": {
      "fn": "pool.placeBid",
      "offset": [
        5303,
        5311
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "2598": {
      "fn": "pool.placeBid",
      "offset": [
        5317,
        5349
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2599": {
      "fn": "pool.placeBid",
      "offset": [
        5317,
        5349
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2600": {
      "fn": "pool.placeBid",
      "offset": [
        5317,
        5349
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x60"
    },
    "2602": {
      "fn": "pool.placeBid",
      "offset": [
        5317,
        5349
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2603": {
      "fn": "pool.placeBid",
      "offset": [
        5317,
        5349
      ],
      "op": "ADD",
      "path": "10"
    },
    "2604": {
      "fn": "pool.placeBid",
      "offset": [
        5317,
        5349
      ],
      "op": "DUP4",
      "path": "10"
    },
    "2605": {
      "fn": "pool.placeBid",
      "offset": [
        5317,
        5349
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2606": {
      "fn": "pool.placeBid",
      "offset": [
        5317,
        5349
      ],
      "op": "DUP10",
      "path": "10"
    },
    "2607": {
      "fn": "pool.placeBid",
      "offset": [
        5317,
        5349
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2608": {
      "fn": "pool.placeBid",
      "offset": [
        5317,
        5349
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2609": {
      "fn": "pool.placeBid",
      "offset": [
        5317,
        5349
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2610": {
      "fn": "pool.placeBid",
      "offset": [
        5317,
        5349
      ],
      "op": "DUP5",
      "path": "10"
    },
    "2611": {
      "fn": "pool.placeBid",
      "offset": [
        5317,
        5349
      ],
      "op": "ADD",
      "path": "10"
    },
    "2612": {
      "fn": "pool.placeBid",
      "offset": [
        5317,
        5349
      ],
      "op": "DUP8",
      "path": "10"
    },
    "2613": {
      "fn": "pool.placeBid",
      "offset": [
        5317,
        5349
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2614": {
      "fn": "pool.placeBid",
      "offset": [
        5317,
        5349
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2615": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2617": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2619": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2621": {
      "op": "SHL"
    },
    "2622": {
      "op": "SUB"
    },
    "2623": {
      "fn": "pool.placeBid",
      "offset": [
        5317,
        5349
      ],
      "op": "DUP10",
      "path": "10"
    },
    "2624": {
      "fn": "pool.placeBid",
      "offset": [
        5317,
        5349
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2625": {
      "fn": "pool.placeBid",
      "offset": [
        5317,
        5349
      ],
      "op": "AND",
      "path": "10"
    },
    "2626": {
      "fn": "pool.placeBid",
      "offset": [
        5317,
        5349
      ],
      "op": "SWAP5",
      "path": "10"
    },
    "2627": {
      "fn": "pool.placeBid",
      "offset": [
        5317,
        5349
      ],
      "op": "DUP4",
      "path": "10"
    },
    "2628": {
      "fn": "pool.placeBid",
      "offset": [
        5317,
        5349
      ],
      "op": "ADD",
      "path": "10"
    },
    "2629": {
      "fn": "pool.placeBid",
      "offset": [
        5317,
        5349
      ],
      "op": "SWAP5",
      "path": "10"
    },
    "2630": {
      "fn": "pool.placeBid",
      "offset": [
        5317,
        5349
      ],
      "op": "DUP6",
      "path": "10"
    },
    "2631": {
      "fn": "pool.placeBid",
      "offset": [
        5317,
        5349
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2632": {
      "fn": "pool.placeBid",
      "offset": [
        5303,
        5350
      ],
      "op": "DUP4",
      "path": "10"
    },
    "2633": {
      "fn": "pool.placeBid",
      "offset": [
        5303,
        5350
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "2634": {
      "fn": "pool.placeBid",
      "offset": [
        5303,
        5350
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "2636": {
      "fn": "pool.placeBid",
      "offset": [
        5303,
        5350
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2637": {
      "fn": "pool.placeBid",
      "offset": [
        5303,
        5350
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2638": {
      "fn": "pool.placeBid",
      "offset": [
        5303,
        5350
      ],
      "op": "ADD",
      "path": "10"
    },
    "2639": {
      "fn": "pool.placeBid",
      "offset": [
        5303,
        5350
      ],
      "op": "DUP7",
      "path": "10"
    },
    "2640": {
      "fn": "pool.placeBid",
      "offset": [
        5303,
        5350
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "2641": {
      "fn": "pool.placeBid",
      "offset": [
        5303,
        5350
      ],
      "op": "SWAP5",
      "path": "10"
    },
    "2642": {
      "fn": "pool.placeBid",
      "offset": [
        5303,
        5350
      ],
      "op": "DUP9",
      "path": "10"
    },
    "2643": {
      "fn": "pool.placeBid",
      "offset": [
        5303,
        5350
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2644": {
      "fn": "pool.placeBid",
      "offset": [
        5303,
        5350
      ],
      "op": "SWAP6",
      "path": "10"
    },
    "2645": {
      "fn": "pool.placeBid",
      "offset": [
        5303,
        5350
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2646": {
      "fn": "pool.placeBid",
      "offset": [
        5303,
        5350
      ],
      "op": "SWAP7",
      "path": "10"
    },
    "2647": {
      "fn": "pool.placeBid",
      "offset": [
        5303,
        5350
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "2648": {
      "fn": "pool.placeBid",
      "offset": [
        5303,
        5350
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2649": {
      "fn": "pool.placeBid",
      "offset": [
        5303,
        5350
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2650": {
      "fn": "pool.placeBid",
      "offset": [
        5303,
        5350
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "2652": {
      "fn": "pool.placeBid",
      "offset": [
        5303,
        5350
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2653": {
      "fn": "pool.placeBid",
      "offset": [
        5303,
        5350
      ],
      "op": "SWAP6",
      "path": "10"
    },
    "2654": {
      "fn": "pool.placeBid",
      "offset": [
        5303,
        5350
      ],
      "op": "MUL",
      "path": "10"
    },
    "2655": {
      "fn": "pool.placeBid",
      "offset": [
        5303,
        5350
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2656": {
      "fn": "pool.placeBid",
      "offset": [
        5303,
        5350
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2657": {
      "fn": "pool.placeBid",
      "offset": [
        5303,
        5350
      ],
      "op": "ADD",
      "path": "10"
    },
    "2658": {
      "fn": "pool.placeBid",
      "offset": [
        5303,
        5350
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "2659": {
      "fn": "pool.placeBid",
      "offset": [
        5303,
        5350
      ],
      "op": "DUP5",
      "path": "10"
    },
    "2660": {
      "fn": "pool.placeBid",
      "offset": [
        5303,
        5350
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "2661": {
      "fn": "pool.placeBid",
      "offset": [
        5303,
        5350
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2662": {
      "fn": "pool.placeBid",
      "offset": [
        5303,
        5350
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2663": {
      "fn": "pool.placeBid",
      "offset": [
        5303,
        5350
      ],
      "op": "DUP4",
      "path": "10"
    },
    "2664": {
      "fn": "pool.placeBid",
      "offset": [
        5303,
        5350
      ],
      "op": "ADD",
      "path": "10"
    },
    "2665": {
      "fn": "pool.placeBid",
      "offset": [
        5303,
        5350
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "2666": {
      "fn": "pool.placeBid",
      "offset": [
        5303,
        5350
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2667": {
      "fn": "pool.placeBid",
      "offset": [
        5303,
        5350
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x2"
    },
    "2669": {
      "fn": "pool.placeBid",
      "offset": [
        5303,
        5350
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2670": {
      "fn": "pool.placeBid",
      "offset": [
        5303,
        5350
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2671": {
      "fn": "pool.placeBid",
      "offset": [
        5303,
        5350
      ],
      "op": "ADD",
      "path": "10"
    },
    "2672": {
      "fn": "pool.placeBid",
      "offset": [
        5303,
        5350
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2673": {
      "fn": "pool.placeBid",
      "offset": [
        5303,
        5350
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "2674": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2676": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2678": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2680": {
      "op": "SHL"
    },
    "2681": {
      "op": "SUB"
    },
    "2682": {
      "op": "NOT"
    },
    "2683": {
      "fn": "pool.placeBid",
      "offset": [
        5303,
        5350
      ],
      "op": "AND",
      "path": "10"
    },
    "2684": {
      "fn": "pool.placeBid",
      "offset": [
        5303,
        5350
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2685": {
      "fn": "pool.placeBid",
      "offset": [
        5303,
        5350
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2686": {
      "fn": "pool.placeBid",
      "offset": [
        5303,
        5350
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "2687": {
      "fn": "pool.placeBid",
      "offset": [
        5303,
        5350
      ],
      "op": "AND",
      "path": "10"
    },
    "2688": {
      "fn": "pool.placeBid",
      "offset": [
        5303,
        5350
      ],
      "op": "OR",
      "path": "10"
    },
    "2689": {
      "fn": "pool.placeBid",
      "offset": [
        5303,
        5350
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2690": {
      "fn": "pool.placeBid",
      "offset": [
        5303,
        5350
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "2691": {
      "fn": "pool.placeBid",
      "offset": [
        5367,
        5369
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "2692": {
      "fn": "pool.placeBid",
      "offset": [
        5364,
        5366
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x6"
    },
    "2694": {
      "fn": "pool.placeBid",
      "offset": [
        5364,
        5370
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2695": {
      "fn": "pool.placeBid",
      "offset": [
        5364,
        5370
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "2696": {
      "fn": "pool.placeBid",
      "offset": [
        5364,
        5366
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2697": {
      "fn": "pool.placeBid",
      "offset": [
        5364,
        5366
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2698": {
      "fn": "pool.placeBid",
      "offset": [
        5367,
        5369
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2699": {
      "fn": "pool.placeBid",
      "offset": [
        5364,
        5370
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2700": {
      "fn": "pool.placeBid",
      "offset": [
        5364,
        5370
      ],
      "op": "LT",
      "path": "10"
    },
    "2701": {
      "fn": "pool.placeBid",
      "offset": [
        5364,
        5370
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xA98"
    },
    "2704": {
      "fn": "pool.placeBid",
      "offset": [
        5364,
        5370
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "2705": {
      "fn": "pool.placeBid",
      "offset": [
        5364,
        5370
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xA98"
    },
    "2708": {
      "fn": "pool.placeBid",
      "offset": [
        5364,
        5370
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x298B"
    },
    "2711": {
      "fn": "pool.placeBid",
      "jump": "i",
      "offset": [
        5364,
        5370
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2712": {
      "fn": "pool.placeBid",
      "offset": [
        5364,
        5370
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2713": {
      "fn": "pool.placeBid",
      "offset": [
        5364,
        5370
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2715": {
      "fn": "pool.placeBid",
      "offset": [
        5364,
        5370
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2716": {
      "fn": "pool.placeBid",
      "offset": [
        5364,
        5370
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2717": {
      "fn": "pool.placeBid",
      "offset": [
        5364,
        5370
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2718": {
      "fn": "pool.placeBid",
      "offset": [
        5364,
        5370
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "2720": {
      "fn": "pool.placeBid",
      "offset": [
        5364,
        5370
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2721": {
      "fn": "pool.placeBid",
      "offset": [
        5364,
        5370
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2722": {
      "fn": "pool.placeBid",
      "offset": [
        5364,
        5370
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "2723": {
      "fn": "pool.placeBid",
      "offset": [
        5364,
        5376
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "2725": {
      "fn": "pool.placeBid",
      "offset": [
        5364,
        5370
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "2727": {
      "fn": "pool.placeBid",
      "offset": [
        5364,
        5370
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2728": {
      "fn": "pool.placeBid",
      "offset": [
        5364,
        5370
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "2729": {
      "fn": "pool.placeBid",
      "offset": [
        5364,
        5370
      ],
      "op": "MUL",
      "path": "10"
    },
    "2730": {
      "fn": "pool.placeBid",
      "offset": [
        5364,
        5370
      ],
      "op": "ADD",
      "path": "10"
    },
    "2731": {
      "fn": "pool.placeBid",
      "offset": [
        5364,
        5376
      ],
      "op": "ADD",
      "path": "10"
    },
    "2732": {
      "fn": "pool.placeBid",
      "offset": [
        5364,
        5383
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "2733": {
      "fn": "pool.placeBid",
      "offset": [
        5360,
        5501
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xB16"
    },
    "2736": {
      "fn": "pool.placeBid",
      "offset": [
        5360,
        5501
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "2737": {
      "fn": "pool.placeBid",
      "offset": [
        5404,
        5406
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 23,
      "value": "0x6"
    },
    "2739": {
      "fn": "pool.placeBid",
      "offset": [
        5407,
        5409
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x7"
    },
    "2741": {
      "fn": "pool.placeBid",
      "offset": [
        5407,
        5409
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "2742": {
      "fn": "pool.placeBid",
      "offset": [
        5404,
        5410
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2743": {
      "fn": "pool.placeBid",
      "offset": [
        5404,
        5410
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "2744": {
      "fn": "pool.placeBid",
      "offset": [
        5404,
        5410
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2745": {
      "fn": "pool.placeBid",
      "offset": [
        5404,
        5410
      ],
      "op": "LT",
      "path": "10"
    },
    "2746": {
      "fn": "pool.placeBid",
      "offset": [
        5404,
        5410
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xAC5"
    },
    "2749": {
      "fn": "pool.placeBid",
      "offset": [
        5404,
        5410
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "2750": {
      "fn": "pool.placeBid",
      "offset": [
        5404,
        5410
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xAC5"
    },
    "2753": {
      "fn": "pool.placeBid",
      "offset": [
        5404,
        5410
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x298B"
    },
    "2756": {
      "fn": "pool.placeBid",
      "jump": "i",
      "offset": [
        5404,
        5410
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2757": {
      "fn": "pool.placeBid",
      "offset": [
        5404,
        5410
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2758": {
      "fn": "pool.placeBid",
      "offset": [
        5404,
        5410
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2759": {
      "fn": "pool.placeBid",
      "offset": [
        5404,
        5410
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2761": {
      "fn": "pool.placeBid",
      "offset": [
        5404,
        5410
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2762": {
      "fn": "pool.placeBid",
      "offset": [
        5404,
        5410
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "2764": {
      "fn": "pool.placeBid",
      "offset": [
        5404,
        5410
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2766": {
      "fn": "pool.placeBid",
      "offset": [
        5404,
        5410
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "2767": {
      "fn": "pool.placeBid",
      "offset": [
        5404,
        5410
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2768": {
      "fn": "pool.placeBid",
      "offset": [
        5404,
        5410
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "2770": {
      "fn": "pool.placeBid",
      "offset": [
        5404,
        5410
      ],
      "op": "MUL",
      "path": "10"
    },
    "2771": {
      "fn": "pool.placeBid",
      "offset": [
        5404,
        5410
      ],
      "op": "ADD",
      "path": "10"
    },
    "2772": {
      "fn": "pool.placeBid",
      "offset": [
        5404,
        5416
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "2774": {
      "fn": "pool.placeBid",
      "offset": [
        5404,
        5416
      ],
      "op": "ADD",
      "path": "10"
    },
    "2775": {
      "fn": "pool.placeBid",
      "offset": [
        5440,
        5441
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "2777": {
      "fn": "pool.placeBid",
      "offset": [
        5422,
        5426
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "2779": {
      "fn": "pool.placeBid",
      "offset": [
        5422,
        5430
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2781": {
      "fn": "pool.placeBid",
      "offset": [
        5427,
        5429
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x7"
    },
    "2783": {
      "fn": "pool.placeBid",
      "offset": [
        5427,
        5429
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "2784": {
      "fn": "pool.placeBid",
      "offset": [
        5422,
        5430
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2785": {
      "fn": "pool.placeBid",
      "offset": [
        5422,
        5430
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2786": {
      "fn": "pool.placeBid",
      "offset": [
        5422,
        5430
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "2788": {
      "fn": "pool.placeBid",
      "offset": [
        5422,
        5430
      ],
      "op": "ADD",
      "path": "10"
    },
    "2789": {
      "fn": "pool.placeBid",
      "offset": [
        5422,
        5430
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2790": {
      "fn": "pool.placeBid",
      "offset": [
        5422,
        5430
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2791": {
      "fn": "pool.placeBid",
      "offset": [
        5422,
        5430
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2792": {
      "fn": "pool.placeBid",
      "offset": [
        5422,
        5430
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "2794": {
      "fn": "pool.placeBid",
      "offset": [
        5422,
        5430
      ],
      "op": "ADD",
      "path": "10"
    },
    "2795": {
      "fn": "pool.placeBid",
      "offset": [
        5422,
        5430
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2797": {
      "fn": "pool.placeBid",
      "offset": [
        5422,
        5430
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "2798": {
      "fn": "pool.placeBid",
      "offset": [
        5422,
        5437
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2799": {
      "fn": "pool.placeBid",
      "offset": [
        5422,
        5437
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "2800": {
      "fn": "pool.placeBid",
      "offset": [
        5422,
        5437
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2801": {
      "fn": "pool.placeBid",
      "offset": [
        5422,
        5437
      ],
      "op": "POP",
      "path": "10"
    },
    "2802": {
      "fn": "pool.placeBid",
      "offset": [
        5422,
        5441
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xAFB"
    },
    "2805": {
      "fn": "pool.placeBid",
      "offset": [
        5422,
        5441
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2806": {
      "fn": "pool.placeBid",
      "offset": [
        5422,
        5441
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2807": {
      "fn": "pool.placeBid",
      "offset": [
        5422,
        5441
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x29A1"
    },
    "2810": {
      "fn": "pool.placeBid",
      "jump": "i",
      "offset": [
        5422,
        5441
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2811": {
      "fn": "pool.placeBid",
      "offset": [
        5422,
        5441
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2812": {
      "fn": "pool.placeBid",
      "offset": [
        5404,
        5442
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2813": {
      "fn": "pool.placeBid",
      "offset": [
        5404,
        5442
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "2814": {
      "fn": "pool.placeBid",
      "offset": [
        5404,
        5442
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "2816": {
      "fn": "pool.placeBid",
      "offset": [
        5404,
        5442
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2817": {
      "fn": "pool.placeBid",
      "offset": [
        5404,
        5442
      ],
      "op": "ADD",
      "path": "10"
    },
    "2818": {
      "fn": "pool.placeBid",
      "offset": [
        5404,
        5442
      ],
      "op": "DUP4",
      "path": "10"
    },
    "2819": {
      "fn": "pool.placeBid",
      "offset": [
        5404,
        5442
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "2820": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2822": {
      "fn": "pool.placeBid",
      "offset": [
        5404,
        5442
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "2823": {
      "fn": "pool.placeBid",
      "offset": [
        5404,
        5442
      ],
      "op": "DUP4",
      "path": "10"
    },
    "2824": {
      "fn": "pool.placeBid",
      "offset": [
        5404,
        5442
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2825": {
      "fn": "pool.placeBid",
      "offset": [
        5404,
        5442
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "2827": {
      "fn": "pool.placeBid",
      "offset": [
        5404,
        5442
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2828": {
      "fn": "pool.placeBid",
      "offset": [
        5404,
        5442
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "2829": {
      "fn": "pool.placeBid",
      "offset": [
        5404,
        5442
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "2830": {
      "fn": "pool.placeBid",
      "offset": [
        5404,
        5442
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2831": {
      "fn": "pool.placeBid",
      "offset": [
        5404,
        5442
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2832": {
      "fn": "pool.placeBid",
      "offset": [
        5404,
        5442
      ],
      "op": "ADD",
      "path": "10"
    },
    "2833": {
      "fn": "pool.placeBid",
      "offset": [
        5404,
        5442
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "2834": {
      "fn": "pool.placeBid",
      "offset": [
        5360,
        5501
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xB1F"
    },
    "2837": {
      "fn": "pool.placeBid",
      "offset": [
        5360,
        5501
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2838": {
      "fn": "pool.placeBid",
      "offset": [
        5360,
        5501
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2839": {
      "fn": "pool.placeBid",
      "offset": [
        5473,
        5490
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 24,
      "value": "0xB1F"
    },
    "2842": {
      "fn": "pool.placeBid",
      "offset": [
        5483,
        5489
      ],
      "op": "DUP5",
      "path": "10"
    },
    "2843": {
      "fn": "pool.placeBid",
      "offset": [
        5473,
        5482
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2398"
    },
    "2846": {
      "fn": "pool.placeBid",
      "jump": "i",
      "offset": [
        5473,
        5490
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2847": {
      "fn": "pool.placeBid",
      "offset": [
        5473,
        5490
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2848": {
      "fn": "pool.placeBid",
      "offset": [
        3937,
        5507
      ],
      "op": "POP",
      "path": "10"
    },
    "2849": {
      "fn": "pool.placeBid",
      "offset": [
        3937,
        5507
      ],
      "op": "POP",
      "path": "10"
    },
    "2850": {
      "fn": "pool.placeBid",
      "offset": [
        3879,
        5507
      ],
      "op": "POP",
      "path": "10"
    },
    "2851": {
      "fn": "pool.placeBid",
      "offset": [
        3879,
        5507
      ],
      "op": "POP",
      "path": "10"
    },
    "2852": {
      "fn": "pool.placeBid",
      "jump": "o",
      "offset": [
        3879,
        5507
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2853": {
      "fn": "pool.sellBid",
      "offset": [
        6994,
        9822
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2854": {
      "fn": "pool.sellBid",
      "offset": [
        7170,
        7183
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2856": {
      "fn": "pool.sellBid",
      "offset": [
        7186,
        7196
      ],
      "op": "CALLER",
      "path": "10"
    },
    "2857": {
      "fn": "pool.sellBid",
      "offset": [
        7170,
        7196
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2858": {
      "fn": "pool.sellBid",
      "offset": [
        7170,
        7196
      ],
      "op": "POP",
      "path": "10"
    },
    "2859": {
      "fn": "pool.sellBid",
      "offset": [
        7236,
        7237
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 25,
      "value": "0x0"
    },
    "2861": {
      "fn": "pool.sellBid",
      "offset": [
        7214,
        7216
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x6"
    },
    "2863": {
      "fn": "pool.sellBid",
      "offset": [
        7217,
        7219
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x7"
    },
    "2865": {
      "fn": "pool.sellBid",
      "offset": [
        7217,
        7219
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "2866": {
      "fn": "pool.sellBid",
      "offset": [
        7214,
        7220
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2867": {
      "fn": "pool.sellBid",
      "offset": [
        7214,
        7220
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "2868": {
      "fn": "pool.sellBid",
      "offset": [
        7214,
        7220
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2869": {
      "fn": "pool.sellBid",
      "offset": [
        7214,
        7220
      ],
      "op": "LT",
      "path": "10"
    },
    "2870": {
      "fn": "pool.sellBid",
      "offset": [
        7214,
        7220
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xB41"
    },
    "2873": {
      "fn": "pool.sellBid",
      "offset": [
        7214,
        7220
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "2874": {
      "fn": "pool.sellBid",
      "offset": [
        7214,
        7220
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xB41"
    },
    "2877": {
      "fn": "pool.sellBid",
      "offset": [
        7214,
        7220
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x298B"
    },
    "2880": {
      "fn": "pool.sellBid",
      "jump": "i",
      "offset": [
        7214,
        7220
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2881": {
      "fn": "pool.sellBid",
      "offset": [
        7214,
        7220
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2882": {
      "fn": "pool.sellBid",
      "offset": [
        7214,
        7220
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2883": {
      "fn": "pool.sellBid",
      "offset": [
        7214,
        7220
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2885": {
      "fn": "pool.sellBid",
      "offset": [
        7214,
        7220
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2886": {
      "fn": "pool.sellBid",
      "offset": [
        7214,
        7220
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "2888": {
      "fn": "pool.sellBid",
      "offset": [
        7214,
        7220
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2890": {
      "fn": "pool.sellBid",
      "offset": [
        7214,
        7220
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "2891": {
      "fn": "pool.sellBid",
      "offset": [
        7214,
        7220
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2892": {
      "fn": "pool.sellBid",
      "offset": [
        7214,
        7220
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "2894": {
      "fn": "pool.sellBid",
      "offset": [
        7214,
        7220
      ],
      "op": "MUL",
      "path": "10"
    },
    "2895": {
      "fn": "pool.sellBid",
      "offset": [
        7214,
        7220
      ],
      "op": "ADD",
      "path": "10"
    },
    "2896": {
      "fn": "pool.sellBid",
      "offset": [
        7214,
        7226
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "2898": {
      "fn": "pool.sellBid",
      "offset": [
        7214,
        7226
      ],
      "op": "ADD",
      "path": "10"
    },
    "2899": {
      "fn": "pool.sellBid",
      "offset": [
        7214,
        7233
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2900": {
      "fn": "pool.sellBid",
      "offset": [
        7214,
        7233
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "2901": {
      "fn": "pool.sellBid",
      "offset": [
        7214,
        7233
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2902": {
      "fn": "pool.sellBid",
      "offset": [
        7214,
        7233
      ],
      "op": "POP",
      "path": "10"
    },
    "2903": {
      "branch": 103,
      "fn": "pool.sellBid",
      "offset": [
        7214,
        7237
      ],
      "op": "GT",
      "path": "10"
    },
    "2904": {
      "fn": "pool.sellBid",
      "offset": [
        7206,
        7272
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xBA3"
    },
    "2907": {
      "branch": 103,
      "fn": "pool.sellBid",
      "offset": [
        7206,
        7272
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "2908": {
      "fn": "pool.sellBid",
      "offset": [
        7206,
        7272
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2910": {
      "fn": "pool.sellBid",
      "offset": [
        7206,
        7272
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2911": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2915": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2917": {
      "op": "SHL"
    },
    "2918": {
      "fn": "pool.sellBid",
      "offset": [
        7206,
        7272
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2919": {
      "fn": "pool.sellBid",
      "offset": [
        7206,
        7272
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2920": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2922": {
      "fn": "pool.sellBid",
      "offset": [
        7206,
        7272
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "2924": {
      "fn": "pool.sellBid",
      "offset": [
        7206,
        7272
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2925": {
      "fn": "pool.sellBid",
      "offset": [
        7206,
        7272
      ],
      "op": "ADD",
      "path": "10"
    },
    "2926": {
      "op": "MSTORE"
    },
    "2927": {
      "op": "PUSH1",
      "value": "0x1E"
    },
    "2929": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2931": {
      "op": "DUP3"
    },
    "2932": {
      "op": "ADD"
    },
    "2933": {
      "op": "MSTORE"
    },
    "2934": {
      "op": "PUSH32",
      "value": "0x63616E6E6F742073656C6C206966207468657265206973206E6F206269640000"
    },
    "2967": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2969": {
      "op": "DUP3"
    },
    "2970": {
      "op": "ADD"
    },
    "2971": {
      "op": "MSTORE"
    },
    "2972": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2974": {
      "op": "ADD"
    },
    "2975": {
      "fn": "pool.sellBid",
      "offset": [
        7206,
        7272
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x7DF"
    },
    "2978": {
      "op": "JUMP"
    },
    "2979": {
      "fn": "pool.sellBid",
      "offset": [
        7206,
        7272
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2980": {
      "fn": "pool.sellBid",
      "offset": [
        7319,
        7361
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 26,
      "value": "0xBAE"
    },
    "2983": {
      "offset": [
        311,
        313
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xA"
    },
    "2985": {
      "fn": "pool.sellBid",
      "offset": [
        7319,
        7334
      ],
      "op": "TIMESTAMP",
      "path": "10"
    },
    "2986": {
      "fn": "pool.sellBid",
      "offset": [
        7319,
        7361
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x29A1"
    },
    "2989": {
      "fn": "pool.sellBid",
      "jump": "i",
      "offset": [
        7319,
        7361
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2990": {
      "fn": "pool.sellBid",
      "offset": [
        7319,
        7361
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2991": {
      "fn": "pool.sellBid",
      "offset": [
        7303,
        7305
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x6"
    },
    "2993": {
      "fn": "pool.sellBid",
      "offset": [
        7306,
        7308
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x7"
    },
    "2995": {
      "fn": "pool.sellBid",
      "offset": [
        7306,
        7308
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "2996": {
      "fn": "pool.sellBid",
      "offset": [
        7303,
        7309
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2997": {
      "fn": "pool.sellBid",
      "offset": [
        7303,
        7309
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "2998": {
      "fn": "pool.sellBid",
      "offset": [
        7303,
        7309
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2999": {
      "fn": "pool.sellBid",
      "offset": [
        7303,
        7309
      ],
      "op": "LT",
      "path": "10"
    },
    "3000": {
      "fn": "pool.sellBid",
      "offset": [
        7303,
        7309
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xBC3"
    },
    "3003": {
      "fn": "pool.sellBid",
      "offset": [
        7303,
        7309
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "3004": {
      "fn": "pool.sellBid",
      "offset": [
        7303,
        7309
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xBC3"
    },
    "3007": {
      "fn": "pool.sellBid",
      "offset": [
        7303,
        7309
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x298B"
    },
    "3010": {
      "fn": "pool.sellBid",
      "jump": "i",
      "offset": [
        7303,
        7309
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3011": {
      "fn": "pool.sellBid",
      "offset": [
        7303,
        7309
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3012": {
      "fn": "pool.sellBid",
      "offset": [
        7303,
        7309
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3013": {
      "fn": "pool.sellBid",
      "offset": [
        7303,
        7309
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3015": {
      "fn": "pool.sellBid",
      "offset": [
        7303,
        7309
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3016": {
      "fn": "pool.sellBid",
      "offset": [
        7303,
        7309
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "3018": {
      "fn": "pool.sellBid",
      "offset": [
        7303,
        7309
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3020": {
      "fn": "pool.sellBid",
      "offset": [
        7303,
        7309
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "3021": {
      "fn": "pool.sellBid",
      "offset": [
        7303,
        7309
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3022": {
      "fn": "pool.sellBid",
      "offset": [
        7303,
        7309
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "3024": {
      "fn": "pool.sellBid",
      "offset": [
        7303,
        7309
      ],
      "op": "MUL",
      "path": "10"
    },
    "3025": {
      "fn": "pool.sellBid",
      "offset": [
        7303,
        7309
      ],
      "op": "ADD",
      "path": "10"
    },
    "3026": {
      "fn": "pool.sellBid",
      "offset": [
        7303,
        7316
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "3028": {
      "fn": "pool.sellBid",
      "offset": [
        7303,
        7316
      ],
      "op": "ADD",
      "path": "10"
    },
    "3029": {
      "fn": "pool.sellBid",
      "offset": [
        7303,
        7316
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3030": {
      "branch": 104,
      "fn": "pool.sellBid",
      "offset": [
        7303,
        7361
      ],
      "op": "GT",
      "path": "10"
    },
    "3031": {
      "fn": "pool.sellBid",
      "offset": [
        7282,
        7425
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xBF2"
    },
    "3034": {
      "branch": 104,
      "fn": "pool.sellBid",
      "offset": [
        7282,
        7425
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "3035": {
      "fn": "pool.sellBid",
      "offset": [
        7282,
        7425
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3037": {
      "fn": "pool.sellBid",
      "offset": [
        7282,
        7425
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3038": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3042": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3044": {
      "op": "SHL"
    },
    "3045": {
      "fn": "pool.sellBid",
      "offset": [
        7282,
        7425
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3046": {
      "fn": "pool.sellBid",
      "offset": [
        7282,
        7425
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3047": {
      "fn": "pool.sellBid",
      "offset": [
        7282,
        7425
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "3049": {
      "fn": "pool.sellBid",
      "offset": [
        7282,
        7425
      ],
      "op": "ADD",
      "path": "10"
    },
    "3050": {
      "fn": "pool.sellBid",
      "offset": [
        7282,
        7425
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x7DF"
    },
    "3053": {
      "fn": "pool.sellBid",
      "offset": [
        7282,
        7425
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3054": {
      "fn": "pool.sellBid",
      "offset": [
        7282,
        7425
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x29B8"
    },
    "3057": {
      "fn": "pool.sellBid",
      "jump": "i",
      "offset": [
        7282,
        7425
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3058": {
      "fn": "pool.sellBid",
      "offset": [
        7282,
        7425
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3059": {
      "fn": "pool.sellBid",
      "offset": [
        7480,
        7497
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 27,
      "value": "0x1"
    },
    "3061": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3063": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3065": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3067": {
      "op": "SHL"
    },
    "3068": {
      "op": "SUB"
    },
    "3069": {
      "fn": "pool.sellBid",
      "offset": [
        7456,
        7467
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3070": {
      "fn": "pool.sellBid",
      "offset": [
        7456,
        7467
      ],
      "op": "AND",
      "path": "10"
    },
    "3071": {
      "fn": "pool.sellBid",
      "offset": [
        7456,
        7467
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3073": {
      "fn": "pool.sellBid",
      "offset": [
        7456,
        7467
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3074": {
      "fn": "pool.sellBid",
      "offset": [
        7456,
        7467
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3075": {
      "fn": "pool.sellBid",
      "offset": [
        7456,
        7467
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3076": {
      "fn": "pool.sellBid",
      "offset": [
        7456,
        7460
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x5"
    },
    "3078": {
      "fn": "pool.sellBid",
      "offset": [
        7456,
        7467
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "3080": {
      "fn": "pool.sellBid",
      "offset": [
        7456,
        7467
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3081": {
      "fn": "pool.sellBid",
      "offset": [
        7456,
        7467
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3082": {
      "fn": "pool.sellBid",
      "offset": [
        7456,
        7467
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3083": {
      "fn": "pool.sellBid",
      "offset": [
        7456,
        7467
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3085": {
      "fn": "pool.sellBid",
      "offset": [
        7456,
        7467
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3086": {
      "fn": "pool.sellBid",
      "offset": [
        7456,
        7467
      ],
      "op": "DUP4",
      "path": "10"
    },
    "3087": {
      "fn": "pool.sellBid",
      "offset": [
        7456,
        7467
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "3088": {
      "fn": "pool.sellBid",
      "offset": [
        7468,
        7470
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x7"
    },
    "3090": {
      "fn": "pool.sellBid",
      "offset": [
        7468,
        7470
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3091": {
      "fn": "pool.sellBid",
      "offset": [
        7456,
        7471
      ],
      "op": "DUP5",
      "path": "10"
    },
    "3092": {
      "fn": "pool.sellBid",
      "offset": [
        7456,
        7471
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3093": {
      "fn": "pool.sellBid",
      "offset": [
        7456,
        7471
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3094": {
      "fn": "pool.sellBid",
      "offset": [
        7456,
        7471
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3095": {
      "fn": "pool.sellBid",
      "offset": [
        7456,
        7471
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3096": {
      "fn": "pool.sellBid",
      "offset": [
        7456,
        7471
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3097": {
      "fn": "pool.sellBid",
      "offset": [
        7456,
        7471
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "3098": {
      "fn": "pool.sellBid",
      "offset": [
        7456,
        7476
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "3100": {
      "fn": "pool.sellBid",
      "offset": [
        7456,
        7476
      ],
      "op": "ADD",
      "path": "10"
    },
    "3101": {
      "fn": "pool.sellBid",
      "offset": [
        7456,
        7476
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3102": {
      "fn": "pool.sellBid",
      "offset": [
        7456,
        7476
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xFF"
    },
    "3104": {
      "fn": "pool.sellBid",
      "offset": [
        7456,
        7476
      ],
      "op": "AND",
      "path": "10"
    },
    "3105": {
      "fn": "pool.sellBid",
      "offset": [
        7456,
        7497
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "3107": {
      "fn": "pool.sellBid",
      "offset": [
        7456,
        7497
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3108": {
      "fn": "pool.sellBid",
      "offset": [
        7456,
        7497
      ],
      "op": "GT",
      "path": "10"
    },
    "3109": {
      "fn": "pool.sellBid",
      "offset": [
        7456,
        7497
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "3110": {
      "fn": "pool.sellBid",
      "offset": [
        7456,
        7497
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xC31"
    },
    "3113": {
      "fn": "pool.sellBid",
      "offset": [
        7456,
        7497
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "3114": {
      "fn": "pool.sellBid",
      "offset": [
        7456,
        7497
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xC31"
    },
    "3117": {
      "fn": "pool.sellBid",
      "offset": [
        7456,
        7497
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2870"
    },
    "3120": {
      "fn": "pool.sellBid",
      "jump": "i",
      "offset": [
        7456,
        7497
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3121": {
      "fn": "pool.sellBid",
      "offset": [
        7456,
        7497
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3122": {
      "fn": "pool.sellBid",
      "offset": [
        7456,
        7497
      ],
      "op": "EQ",
      "path": "10"
    },
    "3123": {
      "branch": 105,
      "fn": "pool.sellBid",
      "offset": [
        7456,
        7497
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "3124": {
      "fn": "pool.sellBid",
      "offset": [
        7435,
        7550
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xC7F"
    },
    "3127": {
      "branch": 105,
      "fn": "pool.sellBid",
      "offset": [
        7435,
        7550
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "3128": {
      "fn": "pool.sellBid",
      "offset": [
        7435,
        7550
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3130": {
      "fn": "pool.sellBid",
      "offset": [
        7435,
        7550
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3131": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3135": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3137": {
      "op": "SHL"
    },
    "3138": {
      "fn": "pool.sellBid",
      "offset": [
        7435,
        7550
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3139": {
      "fn": "pool.sellBid",
      "offset": [
        7435,
        7550
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3140": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3142": {
      "fn": "pool.sellBid",
      "offset": [
        7435,
        7550
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "3144": {
      "fn": "pool.sellBid",
      "offset": [
        7435,
        7550
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3145": {
      "fn": "pool.sellBid",
      "offset": [
        7435,
        7550
      ],
      "op": "ADD",
      "path": "10"
    },
    "3146": {
      "op": "MSTORE"
    },
    "3147": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "3149": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3151": {
      "op": "DUP3"
    },
    "3152": {
      "op": "ADD"
    },
    "3153": {
      "op": "MSTORE"
    },
    "3154": {
      "op": "PUSH32",
      "value": "0x6275796572206F66206F7074696F6E2063616E6E6F742073656C6C0000000000"
    },
    "3187": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3189": {
      "op": "DUP3"
    },
    "3190": {
      "op": "ADD"
    },
    "3191": {
      "op": "MSTORE"
    },
    "3192": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3194": {
      "op": "ADD"
    },
    "3195": {
      "fn": "pool.sellBid",
      "offset": [
        7435,
        7550
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x7DF"
    },
    "3198": {
      "op": "JUMP"
    },
    "3199": {
      "fn": "pool.sellBid",
      "offset": [
        7435,
        7550
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3200": {
      "offset": [
        423,
        426
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3E8"
    },
    "3203": {
      "fn": "pool.sellBid",
      "offset": [
        7568,
        7579
      ],
      "op": "DUP3",
      "path": "10",
      "statement": 28
    },
    "3204": {
      "fn": "pool.sellBid",
      "offset": [
        7568,
        7598
      ],
      "op": "LT",
      "path": "10"
    },
    "3205": {
      "branch": 106,
      "fn": "pool.sellBid",
      "offset": [
        7568,
        7598
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "3206": {
      "fn": "pool.sellBid",
      "offset": [
        7560,
        7618
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xCC3"
    },
    "3209": {
      "branch": 106,
      "fn": "pool.sellBid",
      "offset": [
        7560,
        7618
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "3210": {
      "fn": "pool.sellBid",
      "offset": [
        7560,
        7618
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3212": {
      "fn": "pool.sellBid",
      "offset": [
        7560,
        7618
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3213": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3217": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3219": {
      "op": "SHL"
    },
    "3220": {
      "fn": "pool.sellBid",
      "offset": [
        7560,
        7618
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3221": {
      "fn": "pool.sellBid",
      "offset": [
        7560,
        7618
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3222": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3224": {
      "fn": "pool.sellBid",
      "offset": [
        7560,
        7618
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "3226": {
      "fn": "pool.sellBid",
      "offset": [
        7560,
        7618
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3227": {
      "fn": "pool.sellBid",
      "offset": [
        7560,
        7618
      ],
      "op": "ADD",
      "path": "10"
    },
    "3228": {
      "op": "MSTORE"
    },
    "3229": {
      "op": "PUSH1",
      "value": "0xF"
    },
    "3231": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3233": {
      "op": "DUP3"
    },
    "3234": {
      "op": "ADD"
    },
    "3235": {
      "op": "MSTORE"
    },
    "3236": {
      "op": "PUSH15",
      "value": "0x4D696E2073697A65203D203130303"
    },
    "3252": {
      "op": "PUSH1",
      "value": "0x8C"
    },
    "3254": {
      "op": "SHL"
    },
    "3255": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3257": {
      "op": "DUP3"
    },
    "3258": {
      "op": "ADD"
    },
    "3259": {
      "op": "MSTORE"
    },
    "3260": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3262": {
      "op": "ADD"
    },
    "3263": {
      "fn": "pool.sellBid",
      "offset": [
        7560,
        7618
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x7DF"
    },
    "3266": {
      "op": "JUMP"
    },
    "3267": {
      "fn": "pool.sellBid",
      "offset": [
        7560,
        7618
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3268": {
      "fn": "pool.sellBid",
      "offset": [
        7651,
        7653
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 29,
      "value": "0x6"
    },
    "3270": {
      "fn": "pool.sellBid",
      "offset": [
        7654,
        7656
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x7"
    },
    "3272": {
      "fn": "pool.sellBid",
      "offset": [
        7654,
        7656
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3273": {
      "fn": "pool.sellBid",
      "offset": [
        7651,
        7657
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3274": {
      "fn": "pool.sellBid",
      "offset": [
        7651,
        7657
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3275": {
      "fn": "pool.sellBid",
      "offset": [
        7651,
        7657
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3276": {
      "fn": "pool.sellBid",
      "offset": [
        7651,
        7657
      ],
      "op": "LT",
      "path": "10"
    },
    "3277": {
      "fn": "pool.sellBid",
      "offset": [
        7651,
        7657
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xCD8"
    },
    "3280": {
      "fn": "pool.sellBid",
      "offset": [
        7651,
        7657
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "3281": {
      "fn": "pool.sellBid",
      "offset": [
        7651,
        7657
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xCD8"
    },
    "3284": {
      "fn": "pool.sellBid",
      "offset": [
        7651,
        7657
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x298B"
    },
    "3287": {
      "fn": "pool.sellBid",
      "jump": "i",
      "offset": [
        7651,
        7657
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3288": {
      "fn": "pool.sellBid",
      "offset": [
        7651,
        7657
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3289": {
      "fn": "pool.sellBid",
      "offset": [
        7651,
        7657
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3290": {
      "fn": "pool.sellBid",
      "offset": [
        7651,
        7657
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3292": {
      "fn": "pool.sellBid",
      "offset": [
        7651,
        7657
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3293": {
      "fn": "pool.sellBid",
      "offset": [
        7651,
        7657
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "3295": {
      "fn": "pool.sellBid",
      "offset": [
        7651,
        7657
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3297": {
      "fn": "pool.sellBid",
      "offset": [
        7651,
        7657
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "3298": {
      "fn": "pool.sellBid",
      "offset": [
        7651,
        7657
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3299": {
      "fn": "pool.sellBid",
      "offset": [
        7651,
        7657
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "3301": {
      "fn": "pool.sellBid",
      "offset": [
        7651,
        7657
      ],
      "op": "MUL",
      "path": "10"
    },
    "3302": {
      "fn": "pool.sellBid",
      "offset": [
        7651,
        7657
      ],
      "op": "ADD",
      "path": "10"
    },
    "3303": {
      "fn": "pool.sellBid",
      "offset": [
        7651,
        7664
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x2"
    },
    "3305": {
      "fn": "pool.sellBid",
      "offset": [
        7651,
        7664
      ],
      "op": "ADD",
      "path": "10"
    },
    "3306": {
      "fn": "pool.sellBid",
      "offset": [
        7651,
        7664
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3307": {
      "fn": "pool.sellBid",
      "offset": [
        7636,
        7647
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3308": {
      "fn": "pool.sellBid",
      "offset": [
        7636,
        7664
      ],
      "op": "GT",
      "path": "10"
    },
    "3309": {
      "branch": 107,
      "fn": "pool.sellBid",
      "offset": [
        7636,
        7664
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "3310": {
      "fn": "pool.sellBid",
      "offset": [
        7628,
        7679
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xD26"
    },
    "3313": {
      "branch": 107,
      "fn": "pool.sellBid",
      "offset": [
        7628,
        7679
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "3314": {
      "fn": "pool.sellBid",
      "offset": [
        7628,
        7679
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3316": {
      "fn": "pool.sellBid",
      "offset": [
        7628,
        7679
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3317": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3321": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3323": {
      "op": "SHL"
    },
    "3324": {
      "fn": "pool.sellBid",
      "offset": [
        7628,
        7679
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3325": {
      "fn": "pool.sellBid",
      "offset": [
        7628,
        7679
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3326": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3328": {
      "fn": "pool.sellBid",
      "offset": [
        7628,
        7679
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "3330": {
      "fn": "pool.sellBid",
      "offset": [
        7628,
        7679
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3331": {
      "fn": "pool.sellBid",
      "offset": [
        7628,
        7679
      ],
      "op": "ADD",
      "path": "10"
    },
    "3332": {
      "op": "MSTORE"
    },
    "3333": {
      "op": "PUSH1",
      "value": "0xA"
    },
    "3335": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3337": {
      "op": "DUP3"
    },
    "3338": {
      "op": "ADD"
    },
    "3339": {
      "op": "MSTORE"
    },
    "3340": {
      "op": "PUSH10",
      "value": "0x6C6F7720737570706C79"
    },
    "3351": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "3353": {
      "op": "SHL"
    },
    "3354": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3356": {
      "op": "DUP3"
    },
    "3357": {
      "op": "ADD"
    },
    "3358": {
      "op": "MSTORE"
    },
    "3359": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3361": {
      "op": "ADD"
    },
    "3362": {
      "fn": "pool.sellBid",
      "offset": [
        7628,
        7679
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x7DF"
    },
    "3365": {
      "op": "JUMP"
    },
    "3366": {
      "fn": "pool.sellBid",
      "offset": [
        7628,
        7679
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3367": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3369": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3371": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3373": {
      "op": "SHL"
    },
    "3374": {
      "op": "SUB"
    },
    "3375": {
      "fn": "pool.sellBid",
      "offset": [
        7712,
        7731
      ],
      "op": "DUP2",
      "path": "10",
      "statement": 30
    },
    "3376": {
      "fn": "pool.sellBid",
      "offset": [
        7712,
        7731
      ],
      "op": "AND",
      "path": "10"
    },
    "3377": {
      "fn": "pool.sellBid",
      "offset": [
        7712,
        7731
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3379": {
      "fn": "pool.sellBid",
      "offset": [
        7712,
        7731
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3380": {
      "fn": "pool.sellBid",
      "offset": [
        7712,
        7731
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3381": {
      "fn": "pool.sellBid",
      "offset": [
        7712,
        7731
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3382": {
      "fn": "pool.sellBid",
      "offset": [
        7712,
        7724
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "3384": {
      "fn": "pool.sellBid",
      "offset": [
        7712,
        7731
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "3386": {
      "fn": "pool.sellBid",
      "offset": [
        7712,
        7731
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3387": {
      "fn": "pool.sellBid",
      "offset": [
        7712,
        7731
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3389": {
      "fn": "pool.sellBid",
      "offset": [
        7712,
        7731
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3390": {
      "fn": "pool.sellBid",
      "offset": [
        7712,
        7731
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "3391": {
      "fn": "pool.sellBid",
      "offset": [
        7712,
        7731
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3392": {
      "fn": "pool.sellBid",
      "offset": [
        7697,
        7731
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3393": {
      "fn": "pool.sellBid",
      "offset": [
        7697,
        7731
      ],
      "op": "GT",
      "path": "10"
    },
    "3394": {
      "branch": 108,
      "fn": "pool.sellBid",
      "offset": [
        7697,
        7731
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "3395": {
      "fn": "pool.sellBid",
      "offset": [
        7689,
        7751
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xD80"
    },
    "3398": {
      "branch": 108,
      "fn": "pool.sellBid",
      "offset": [
        7689,
        7751
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "3399": {
      "fn": "pool.sellBid",
      "offset": [
        7689,
        7751
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3401": {
      "fn": "pool.sellBid",
      "offset": [
        7689,
        7751
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3402": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3406": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3408": {
      "op": "SHL"
    },
    "3409": {
      "fn": "pool.sellBid",
      "offset": [
        7689,
        7751
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3410": {
      "fn": "pool.sellBid",
      "offset": [
        7689,
        7751
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3411": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3413": {
      "fn": "pool.sellBid",
      "offset": [
        7689,
        7751
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "3415": {
      "fn": "pool.sellBid",
      "offset": [
        7689,
        7751
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3416": {
      "fn": "pool.sellBid",
      "offset": [
        7689,
        7751
      ],
      "op": "ADD",
      "path": "10"
    },
    "3417": {
      "op": "MSTORE"
    },
    "3418": {
      "op": "PUSH1",
      "value": "0xF"
    },
    "3420": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3422": {
      "op": "DUP3"
    },
    "3423": {
      "op": "ADD"
    },
    "3424": {
      "op": "MSTORE"
    },
    "3425": {
      "op": "PUSH15",
      "value": "0xDCDEE840CADCDEEACED040C6C2E6D"
    },
    "3441": {
      "op": "PUSH1",
      "value": "0x8B"
    },
    "3443": {
      "op": "SHL"
    },
    "3444": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3446": {
      "op": "DUP3"
    },
    "3447": {
      "op": "ADD"
    },
    "3448": {
      "op": "MSTORE"
    },
    "3449": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3451": {
      "op": "ADD"
    },
    "3452": {
      "fn": "pool.sellBid",
      "offset": [
        7689,
        7751
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x7DF"
    },
    "3455": {
      "op": "JUMP"
    },
    "3456": {
      "fn": "pool.sellBid",
      "offset": [
        7689,
        7751
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3457": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3459": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3461": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3463": {
      "op": "SHL"
    },
    "3464": {
      "op": "SUB"
    },
    "3465": {
      "fn": "pool.sellBid",
      "offset": [
        7800,
        7819
      ],
      "op": "DUP2",
      "path": "10",
      "statement": 31
    },
    "3466": {
      "fn": "pool.sellBid",
      "offset": [
        7800,
        7819
      ],
      "op": "AND",
      "path": "10"
    },
    "3467": {
      "fn": "pool.sellBid",
      "offset": [
        7800,
        7819
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3469": {
      "fn": "pool.sellBid",
      "offset": [
        7800,
        7819
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3470": {
      "fn": "pool.sellBid",
      "offset": [
        7800,
        7819
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3471": {
      "fn": "pool.sellBid",
      "offset": [
        7800,
        7819
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3472": {
      "fn": "pool.sellBid",
      "offset": [
        7800,
        7812
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "3474": {
      "fn": "pool.sellBid",
      "offset": [
        7800,
        7819
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "3476": {
      "fn": "pool.sellBid",
      "offset": [
        7800,
        7819
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3477": {
      "fn": "pool.sellBid",
      "offset": [
        7800,
        7819
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3479": {
      "fn": "pool.sellBid",
      "offset": [
        7800,
        7819
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3480": {
      "fn": "pool.sellBid",
      "offset": [
        7800,
        7819
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "3481": {
      "fn": "pool.sellBid",
      "offset": [
        7800,
        7834
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3482": {
      "fn": "pool.sellBid",
      "offset": [
        7800,
        7834
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3483": {
      "fn": "pool.sellBid",
      "offset": [
        7823,
        7834
      ],
      "op": "DUP5",
      "path": "10"
    },
    "3484": {
      "fn": "pool.sellBid",
      "offset": [
        7823,
        7834
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "3485": {
      "fn": "pool.sellBid",
      "offset": [
        7800,
        7819
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3486": {
      "fn": "pool.sellBid",
      "offset": [
        7800,
        7834
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xDA8"
    },
    "3489": {
      "fn": "pool.sellBid",
      "offset": [
        7800,
        7834
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3490": {
      "fn": "pool.sellBid",
      "offset": [
        7823,
        7834
      ],
      "op": "DUP5",
      "path": "10"
    },
    "3491": {
      "fn": "pool.sellBid",
      "offset": [
        7823,
        7834
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3492": {
      "fn": "pool.sellBid",
      "offset": [
        7800,
        7834
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x29A1"
    },
    "3495": {
      "fn": "pool.sellBid",
      "jump": "i",
      "offset": [
        7800,
        7834
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3496": {
      "fn": "pool.sellBid",
      "offset": [
        7800,
        7834
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3497": {
      "fn": "pool.sellBid",
      "offset": [
        7800,
        7834
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "3498": {
      "fn": "pool.sellBid",
      "offset": [
        7800,
        7834
      ],
      "op": "POP",
      "path": "10"
    },
    "3499": {
      "fn": "pool.sellBid",
      "offset": [
        7800,
        7834
      ],
      "op": "POP",
      "path": "10"
    },
    "3500": {
      "fn": "pool.sellBid",
      "offset": [
        7800,
        7834
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3501": {
      "fn": "pool.sellBid",
      "offset": [
        7800,
        7834
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3502": {
      "fn": "pool.sellBid",
      "offset": [
        7800,
        7834
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "3503": {
      "fn": "pool.sellBid",
      "offset": [
        7800,
        7834
      ],
      "op": "POP",
      "path": "10"
    },
    "3504": {
      "fn": "pool.sellBid",
      "offset": [
        7874,
        7888
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3506": {
      "fn": "pool.sellBid",
      "offset": [
        7891,
        7902
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3507": {
      "fn": "pool.sellBid",
      "offset": [
        7874,
        7902
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3508": {
      "fn": "pool.sellBid",
      "offset": [
        7874,
        7902
      ],
      "op": "POP",
      "path": "10"
    },
    "3509": {
      "fn": "pool.sellBid",
      "offset": [
        7912,
        7930
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3511": {
      "fn": "pool.sellBid",
      "offset": [
        7944,
        7961
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3512": {
      "fn": "pool.sellBid",
      "offset": [
        7971,
        7980
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3513": {
      "fn": "pool.sellBid",
      "offset": [
        8005,
        8006
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "3515": {
      "fn": "pool.sellBid",
      "offset": [
        7983,
        7985
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x6"
    },
    "3517": {
      "fn": "pool.sellBid",
      "offset": [
        7986,
        7988
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x7"
    },
    "3519": {
      "fn": "pool.sellBid",
      "offset": [
        7986,
        7988
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3520": {
      "fn": "pool.sellBid",
      "offset": [
        7983,
        7989
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3521": {
      "fn": "pool.sellBid",
      "offset": [
        7983,
        7989
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3522": {
      "fn": "pool.sellBid",
      "offset": [
        7983,
        7989
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3523": {
      "fn": "pool.sellBid",
      "offset": [
        7983,
        7989
      ],
      "op": "LT",
      "path": "10"
    },
    "3524": {
      "fn": "pool.sellBid",
      "offset": [
        7983,
        7989
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xDCF"
    },
    "3527": {
      "fn": "pool.sellBid",
      "offset": [
        7983,
        7989
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "3528": {
      "fn": "pool.sellBid",
      "offset": [
        7983,
        7989
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xDCF"
    },
    "3531": {
      "fn": "pool.sellBid",
      "offset": [
        7983,
        7989
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x298B"
    },
    "3534": {
      "fn": "pool.sellBid",
      "jump": "i",
      "offset": [
        7983,
        7989
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3535": {
      "fn": "pool.sellBid",
      "offset": [
        7983,
        7989
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3536": {
      "fn": "pool.sellBid",
      "offset": [
        7983,
        7989
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3537": {
      "fn": "pool.sellBid",
      "offset": [
        7983,
        7989
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3539": {
      "fn": "pool.sellBid",
      "offset": [
        7983,
        7989
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3540": {
      "fn": "pool.sellBid",
      "offset": [
        7983,
        7989
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "3542": {
      "fn": "pool.sellBid",
      "offset": [
        7983,
        7989
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3544": {
      "fn": "pool.sellBid",
      "offset": [
        7983,
        7989
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "3545": {
      "fn": "pool.sellBid",
      "offset": [
        7983,
        7989
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3546": {
      "fn": "pool.sellBid",
      "offset": [
        7983,
        7989
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "3548": {
      "fn": "pool.sellBid",
      "offset": [
        7983,
        7989
      ],
      "op": "MUL",
      "path": "10"
    },
    "3549": {
      "fn": "pool.sellBid",
      "offset": [
        7983,
        7989
      ],
      "op": "ADD",
      "path": "10"
    },
    "3550": {
      "fn": "pool.sellBid",
      "offset": [
        7983,
        7995
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "3552": {
      "fn": "pool.sellBid",
      "offset": [
        7983,
        7995
      ],
      "op": "ADD",
      "path": "10"
    },
    "3553": {
      "fn": "pool.sellBid",
      "offset": [
        7983,
        8002
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3554": {
      "fn": "pool.sellBid",
      "offset": [
        7983,
        8002
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3555": {
      "fn": "pool.sellBid",
      "offset": [
        7983,
        8002
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3556": {
      "fn": "pool.sellBid",
      "offset": [
        7983,
        8002
      ],
      "op": "POP",
      "path": "10"
    },
    "3557": {
      "fn": "pool.sellBid",
      "offset": [
        7983,
        8006
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xDEE"
    },
    "3560": {
      "fn": "pool.sellBid",
      "offset": [
        7983,
        8006
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3561": {
      "fn": "pool.sellBid",
      "offset": [
        7983,
        8006
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3562": {
      "fn": "pool.sellBid",
      "offset": [
        7983,
        8006
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x29A1"
    },
    "3565": {
      "fn": "pool.sellBid",
      "jump": "i",
      "offset": [
        7983,
        8006
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3566": {
      "fn": "pool.sellBid",
      "offset": [
        7983,
        8006
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3567": {
      "fn": "pool.sellBid",
      "offset": [
        7971,
        8006
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3568": {
      "fn": "pool.sellBid",
      "offset": [
        7971,
        8006
      ],
      "op": "POP",
      "path": "10"
    },
    "3569": {
      "fn": "pool.sellBid",
      "offset": [
        8066,
        9546
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3570": {
      "fn": "pool.sellBid",
      "offset": [
        8073,
        8083
      ],
      "op": "DUP4",
      "path": "10"
    },
    "3571": {
      "fn": "pool.sellBid",
      "offset": [
        8073,
        8083
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "3572": {
      "fn": "pool.sellBid",
      "offset": [
        8066,
        9546
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x15C5"
    },
    "3575": {
      "fn": "pool.sellBid",
      "offset": [
        8066,
        9546
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "3576": {
      "fn": "pool.sellBid",
      "offset": [
        8116,
        8118
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 32,
      "value": "0x7"
    },
    "3578": {
      "fn": "pool.sellBid",
      "offset": [
        8116,
        8118
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3579": {
      "fn": "pool.sellBid",
      "offset": [
        8111,
        8119
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3581": {
      "fn": "pool.sellBid",
      "offset": [
        8111,
        8119
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3582": {
      "fn": "pool.sellBid",
      "offset": [
        8111,
        8119
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3583": {
      "fn": "pool.sellBid",
      "offset": [
        8111,
        8119
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3584": {
      "fn": "pool.sellBid",
      "offset": [
        8111,
        8115
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "3586": {
      "fn": "pool.sellBid",
      "offset": [
        8111,
        8119
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "3588": {
      "fn": "pool.sellBid",
      "offset": [
        8111,
        8119
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3589": {
      "fn": "pool.sellBid",
      "offset": [
        8111,
        8119
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3591": {
      "fn": "pool.sellBid",
      "offset": [
        8111,
        8119
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3592": {
      "fn": "pool.sellBid",
      "offset": [
        8111,
        8119
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "3593": {
      "fn": "pool.sellBid",
      "offset": [
        8120,
        8122
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x6"
    },
    "3595": {
      "fn": "pool.sellBid",
      "offset": [
        8120,
        8126
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3596": {
      "fn": "pool.sellBid",
      "offset": [
        8120,
        8126
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3597": {
      "fn": "pool.sellBid",
      "offset": [
        8111,
        8119
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3598": {
      "fn": "pool.sellBid",
      "offset": [
        8111,
        8119
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "3599": {
      "fn": "pool.sellBid",
      "offset": [
        8120,
        8122
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3600": {
      "fn": "pool.sellBid",
      "offset": [
        8120,
        8122
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3601": {
      "fn": "pool.sellBid",
      "offset": [
        8120,
        8126
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3602": {
      "fn": "pool.sellBid",
      "offset": [
        8120,
        8126
      ],
      "op": "LT",
      "path": "10"
    },
    "3603": {
      "fn": "pool.sellBid",
      "offset": [
        8120,
        8126
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xE1E"
    },
    "3606": {
      "fn": "pool.sellBid",
      "offset": [
        8120,
        8126
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "3607": {
      "fn": "pool.sellBid",
      "offset": [
        8120,
        8126
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xE1E"
    },
    "3610": {
      "fn": "pool.sellBid",
      "offset": [
        8120,
        8126
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x298B"
    },
    "3613": {
      "fn": "pool.sellBid",
      "jump": "i",
      "offset": [
        8120,
        8126
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3614": {
      "fn": "pool.sellBid",
      "offset": [
        8120,
        8126
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3615": {
      "fn": "pool.sellBid",
      "offset": [
        8120,
        8126
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3616": {
      "fn": "pool.sellBid",
      "offset": [
        8120,
        8126
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3618": {
      "fn": "pool.sellBid",
      "offset": [
        8120,
        8126
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3619": {
      "fn": "pool.sellBid",
      "offset": [
        8120,
        8126
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "3621": {
      "fn": "pool.sellBid",
      "offset": [
        8120,
        8126
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3623": {
      "fn": "pool.sellBid",
      "offset": [
        8120,
        8126
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "3624": {
      "fn": "pool.sellBid",
      "offset": [
        8120,
        8126
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3625": {
      "fn": "pool.sellBid",
      "offset": [
        8120,
        8126
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "3627": {
      "fn": "pool.sellBid",
      "offset": [
        8120,
        8126
      ],
      "op": "MUL",
      "path": "10"
    },
    "3628": {
      "fn": "pool.sellBid",
      "offset": [
        8120,
        8126
      ],
      "op": "ADD",
      "path": "10"
    },
    "3629": {
      "fn": "pool.sellBid",
      "offset": [
        8120,
        8132
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "3631": {
      "fn": "pool.sellBid",
      "offset": [
        8120,
        8132
      ],
      "op": "ADD",
      "path": "10"
    },
    "3632": {
      "fn": "pool.sellBid",
      "offset": [
        8133,
        8134
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3633": {
      "fn": "pool.sellBid",
      "offset": [
        8120,
        8135
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3634": {
      "fn": "pool.sellBid",
      "offset": [
        8120,
        8135
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3635": {
      "fn": "pool.sellBid",
      "offset": [
        8120,
        8135
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3636": {
      "fn": "pool.sellBid",
      "offset": [
        8120,
        8135
      ],
      "op": "LT",
      "path": "10"
    },
    "3637": {
      "fn": "pool.sellBid",
      "offset": [
        8120,
        8135
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xE40"
    },
    "3640": {
      "fn": "pool.sellBid",
      "offset": [
        8120,
        8135
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "3641": {
      "fn": "pool.sellBid",
      "offset": [
        8120,
        8135
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xE40"
    },
    "3644": {
      "fn": "pool.sellBid",
      "offset": [
        8120,
        8135
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x298B"
    },
    "3647": {
      "fn": "pool.sellBid",
      "jump": "i",
      "offset": [
        8120,
        8135
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3648": {
      "fn": "pool.sellBid",
      "offset": [
        8120,
        8135
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3649": {
      "fn": "pool.sellBid",
      "offset": [
        8120,
        8135
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3650": {
      "fn": "pool.sellBid",
      "offset": [
        8120,
        8135
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3652": {
      "fn": "pool.sellBid",
      "offset": [
        8120,
        8135
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3653": {
      "fn": "pool.sellBid",
      "offset": [
        8120,
        8135
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "3655": {
      "fn": "pool.sellBid",
      "offset": [
        8120,
        8135
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3657": {
      "fn": "pool.sellBid",
      "offset": [
        8120,
        8135
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "3658": {
      "fn": "pool.sellBid",
      "offset": [
        8120,
        8135
      ],
      "op": "ADD",
      "path": "10"
    },
    "3659": {
      "fn": "pool.sellBid",
      "offset": [
        8120,
        8135
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3660": {
      "fn": "pool.sellBid",
      "offset": [
        8111,
        8136
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3661": {
      "fn": "pool.sellBid",
      "offset": [
        8111,
        8136
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3662": {
      "fn": "pool.sellBid",
      "offset": [
        8111,
        8136
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3663": {
      "fn": "pool.sellBid",
      "offset": [
        8111,
        8136
      ],
      "op": "LT",
      "path": "10"
    },
    "3664": {
      "fn": "pool.sellBid",
      "offset": [
        8111,
        8136
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xE5B"
    },
    "3667": {
      "fn": "pool.sellBid",
      "offset": [
        8111,
        8136
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "3668": {
      "fn": "pool.sellBid",
      "offset": [
        8111,
        8136
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xE5B"
    },
    "3671": {
      "fn": "pool.sellBid",
      "offset": [
        8111,
        8136
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x298B"
    },
    "3674": {
      "fn": "pool.sellBid",
      "jump": "i",
      "offset": [
        8111,
        8136
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3675": {
      "fn": "pool.sellBid",
      "offset": [
        8111,
        8136
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3676": {
      "fn": "pool.sellBid",
      "offset": [
        8111,
        8136
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3677": {
      "fn": "pool.sellBid",
      "offset": [
        8111,
        8136
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3679": {
      "fn": "pool.sellBid",
      "offset": [
        8111,
        8136
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3680": {
      "fn": "pool.sellBid",
      "offset": [
        8111,
        8136
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "3682": {
      "fn": "pool.sellBid",
      "offset": [
        8111,
        8136
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3684": {
      "fn": "pool.sellBid",
      "offset": [
        8111,
        8136
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "3685": {
      "fn": "pool.sellBid",
      "offset": [
        8111,
        8136
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3686": {
      "fn": "pool.sellBid",
      "offset": [
        8111,
        8136
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "3688": {
      "fn": "pool.sellBid",
      "offset": [
        8111,
        8136
      ],
      "op": "MUL",
      "path": "10"
    },
    "3689": {
      "fn": "pool.sellBid",
      "offset": [
        8111,
        8136
      ],
      "op": "ADD",
      "path": "10"
    },
    "3690": {
      "fn": "pool.sellBid",
      "offset": [
        8111,
        8141
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "3692": {
      "fn": "pool.sellBid",
      "offset": [
        8111,
        8141
      ],
      "op": "ADD",
      "path": "10"
    },
    "3693": {
      "fn": "pool.sellBid",
      "offset": [
        8111,
        8141
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3694": {
      "fn": "pool.sellBid",
      "offset": [
        8099,
        8141
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3695": {
      "fn": "pool.sellBid",
      "offset": [
        8099,
        8141
      ],
      "op": "POP",
      "path": "10"
    },
    "3696": {
      "fn": "pool.sellBid",
      "offset": [
        8169,
        8178
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3697": {
      "fn": "pool.sellBid",
      "offset": [
        8159,
        8165
      ],
      "op": "DUP5",
      "path": "10"
    },
    "3698": {
      "branch": 109,
      "fn": "pool.sellBid",
      "offset": [
        8159,
        8178
      ],
      "op": "LT",
      "path": "10"
    },
    "3699": {
      "fn": "pool.sellBid",
      "offset": [
        8155,
        9519
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x123B"
    },
    "3702": {
      "branch": 109,
      "fn": "pool.sellBid",
      "offset": [
        8155,
        9519
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "3703": {
      "fn": "pool.sellBid",
      "offset": [
        8240,
        8242
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 33,
      "value": "0x7"
    },
    "3705": {
      "fn": "pool.sellBid",
      "offset": [
        8240,
        8242
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3706": {
      "fn": "pool.sellBid",
      "offset": [
        8230,
        8269
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3708": {
      "fn": "pool.sellBid",
      "offset": [
        8235,
        8243
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3709": {
      "fn": "pool.sellBid",
      "offset": [
        8235,
        8243
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3710": {
      "fn": "pool.sellBid",
      "offset": [
        8235,
        8243
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3711": {
      "fn": "pool.sellBid",
      "offset": [
        8235,
        8239
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "3713": {
      "fn": "pool.sellBid",
      "offset": [
        8235,
        8243
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "3715": {
      "fn": "pool.sellBid",
      "offset": [
        8235,
        8243
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3716": {
      "fn": "pool.sellBid",
      "offset": [
        8235,
        8243
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3718": {
      "fn": "pool.sellBid",
      "offset": [
        8235,
        8243
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3719": {
      "fn": "pool.sellBid",
      "offset": [
        8235,
        8243
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "3720": {
      "fn": "pool.sellBid",
      "offset": [
        8244,
        8246
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x6"
    },
    "3722": {
      "fn": "pool.sellBid",
      "offset": [
        8244,
        8250
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3723": {
      "fn": "pool.sellBid",
      "offset": [
        8244,
        8250
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3724": {
      "fn": "pool.sellBid",
      "offset": [
        8282,
        8291
      ],
      "op": "DUP7",
      "path": "10"
    },
    "3725": {
      "fn": "pool.sellBid",
      "offset": [
        8282,
        8291
      ],
      "op": "SWAP5",
      "path": "10"
    },
    "3726": {
      "fn": "pool.sellBid",
      "offset": [
        8230,
        8234
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x5"
    },
    "3728": {
      "fn": "pool.sellBid",
      "offset": [
        8230,
        8234
      ],
      "op": "SWAP5",
      "path": "10"
    },
    "3729": {
      "fn": "pool.sellBid",
      "offset": [
        8230,
        8269
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "3730": {
      "fn": "pool.sellBid",
      "offset": [
        8235,
        8243
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "3731": {
      "fn": "pool.sellBid",
      "offset": [
        8244,
        8246
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3732": {
      "fn": "pool.sellBid",
      "offset": [
        8244,
        8250
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3733": {
      "fn": "pool.sellBid",
      "offset": [
        8244,
        8250
      ],
      "op": "LT",
      "path": "10"
    },
    "3734": {
      "fn": "pool.sellBid",
      "offset": [
        8244,
        8250
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xEA1"
    },
    "3737": {
      "fn": "pool.sellBid",
      "offset": [
        8244,
        8250
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "3738": {
      "fn": "pool.sellBid",
      "offset": [
        8244,
        8250
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xEA1"
    },
    "3741": {
      "fn": "pool.sellBid",
      "offset": [
        8244,
        8250
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x298B"
    },
    "3744": {
      "fn": "pool.sellBid",
      "jump": "i",
      "offset": [
        8244,
        8250
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3745": {
      "fn": "pool.sellBid",
      "offset": [
        8244,
        8250
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3746": {
      "fn": "pool.sellBid",
      "offset": [
        8244,
        8250
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3747": {
      "fn": "pool.sellBid",
      "offset": [
        8244,
        8250
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3749": {
      "fn": "pool.sellBid",
      "offset": [
        8244,
        8250
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3750": {
      "fn": "pool.sellBid",
      "offset": [
        8244,
        8250
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "3752": {
      "fn": "pool.sellBid",
      "offset": [
        8244,
        8250
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3754": {
      "fn": "pool.sellBid",
      "offset": [
        8244,
        8250
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "3755": {
      "fn": "pool.sellBid",
      "offset": [
        8244,
        8250
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3756": {
      "fn": "pool.sellBid",
      "offset": [
        8244,
        8250
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "3758": {
      "fn": "pool.sellBid",
      "offset": [
        8244,
        8250
      ],
      "op": "MUL",
      "path": "10"
    },
    "3759": {
      "fn": "pool.sellBid",
      "offset": [
        8244,
        8250
      ],
      "op": "ADD",
      "path": "10"
    },
    "3760": {
      "fn": "pool.sellBid",
      "offset": [
        8244,
        8256
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "3762": {
      "fn": "pool.sellBid",
      "offset": [
        8244,
        8256
      ],
      "op": "ADD",
      "path": "10"
    },
    "3763": {
      "fn": "pool.sellBid",
      "offset": [
        8257,
        8258
      ],
      "op": "DUP6",
      "path": "10"
    },
    "3764": {
      "fn": "pool.sellBid",
      "offset": [
        8244,
        8259
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3765": {
      "fn": "pool.sellBid",
      "offset": [
        8244,
        8259
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3766": {
      "fn": "pool.sellBid",
      "offset": [
        8244,
        8259
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3767": {
      "fn": "pool.sellBid",
      "offset": [
        8244,
        8259
      ],
      "op": "LT",
      "path": "10"
    },
    "3768": {
      "fn": "pool.sellBid",
      "offset": [
        8244,
        8259
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xEC3"
    },
    "3771": {
      "fn": "pool.sellBid",
      "offset": [
        8244,
        8259
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "3772": {
      "fn": "pool.sellBid",
      "offset": [
        8244,
        8259
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xEC3"
    },
    "3775": {
      "fn": "pool.sellBid",
      "offset": [
        8244,
        8259
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x298B"
    },
    "3778": {
      "fn": "pool.sellBid",
      "jump": "i",
      "offset": [
        8244,
        8259
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3779": {
      "fn": "pool.sellBid",
      "offset": [
        8244,
        8259
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3780": {
      "fn": "pool.sellBid",
      "offset": [
        8244,
        8259
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3781": {
      "fn": "pool.sellBid",
      "offset": [
        8244,
        8259
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3783": {
      "fn": "pool.sellBid",
      "offset": [
        8244,
        8259
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3784": {
      "fn": "pool.sellBid",
      "offset": [
        8244,
        8259
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "3786": {
      "fn": "pool.sellBid",
      "offset": [
        8244,
        8259
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3788": {
      "fn": "pool.sellBid",
      "offset": [
        8244,
        8259
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "3789": {
      "fn": "pool.sellBid",
      "offset": [
        8244,
        8259
      ],
      "op": "ADD",
      "path": "10"
    },
    "3790": {
      "fn": "pool.sellBid",
      "offset": [
        8244,
        8259
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3791": {
      "fn": "pool.sellBid",
      "offset": [
        8235,
        8260
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3792": {
      "fn": "pool.sellBid",
      "offset": [
        8235,
        8260
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3793": {
      "fn": "pool.sellBid",
      "offset": [
        8235,
        8260
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3794": {
      "fn": "pool.sellBid",
      "offset": [
        8235,
        8260
      ],
      "op": "LT",
      "path": "10"
    },
    "3795": {
      "fn": "pool.sellBid",
      "offset": [
        8235,
        8260
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xEDE"
    },
    "3798": {
      "fn": "pool.sellBid",
      "offset": [
        8235,
        8260
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "3799": {
      "fn": "pool.sellBid",
      "offset": [
        8235,
        8260
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xEDE"
    },
    "3802": {
      "fn": "pool.sellBid",
      "offset": [
        8235,
        8260
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x298B"
    },
    "3805": {
      "fn": "pool.sellBid",
      "jump": "i",
      "offset": [
        8235,
        8260
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3806": {
      "fn": "pool.sellBid",
      "offset": [
        8235,
        8260
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3807": {
      "fn": "pool.sellBid",
      "offset": [
        8235,
        8260
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3809": {
      "fn": "pool.sellBid",
      "offset": [
        8235,
        8260
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3810": {
      "fn": "pool.sellBid",
      "offset": [
        8235,
        8260
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3811": {
      "fn": "pool.sellBid",
      "offset": [
        8235,
        8260
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3812": {
      "fn": "pool.sellBid",
      "offset": [
        8235,
        8260
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "3814": {
      "fn": "pool.sellBid",
      "offset": [
        8235,
        8260
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3815": {
      "fn": "pool.sellBid",
      "offset": [
        8235,
        8260
      ],
      "op": "DUP4",
      "path": "10"
    },
    "3816": {
      "fn": "pool.sellBid",
      "offset": [
        8235,
        8260
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "3817": {
      "fn": "pool.sellBid",
      "offset": [
        8235,
        8268
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x2"
    },
    "3819": {
      "fn": "pool.sellBid",
      "offset": [
        8235,
        8260
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "3821": {
      "fn": "pool.sellBid",
      "offset": [
        8235,
        8260
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3822": {
      "fn": "pool.sellBid",
      "offset": [
        8235,
        8260
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "3823": {
      "fn": "pool.sellBid",
      "offset": [
        8235,
        8260
      ],
      "op": "MUL",
      "path": "10"
    },
    "3824": {
      "fn": "pool.sellBid",
      "offset": [
        8235,
        8260
      ],
      "op": "ADD",
      "path": "10"
    },
    "3825": {
      "fn": "pool.sellBid",
      "offset": [
        8235,
        8268
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3826": {
      "fn": "pool.sellBid",
      "offset": [
        8235,
        8268
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3827": {
      "fn": "pool.sellBid",
      "offset": [
        8235,
        8268
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3828": {
      "fn": "pool.sellBid",
      "offset": [
        8235,
        8268
      ],
      "op": "ADD",
      "path": "10"
    },
    "3829": {
      "fn": "pool.sellBid",
      "offset": [
        8235,
        8268
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3830": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3832": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3834": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3836": {
      "op": "SHL"
    },
    "3837": {
      "op": "SUB"
    },
    "3838": {
      "fn": "pool.sellBid",
      "offset": [
        8235,
        8268
      ],
      "op": "AND",
      "path": "10"
    },
    "3839": {
      "fn": "pool.sellBid",
      "offset": [
        8230,
        8269
      ],
      "op": "DUP4",
      "path": "10"
    },
    "3840": {
      "fn": "pool.sellBid",
      "offset": [
        8230,
        8269
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3841": {
      "fn": "pool.sellBid",
      "offset": [
        8230,
        8269
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3842": {
      "fn": "pool.sellBid",
      "offset": [
        8230,
        8269
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3843": {
      "fn": "pool.sellBid",
      "offset": [
        8230,
        8269
      ],
      "op": "ADD",
      "path": "10"
    },
    "3844": {
      "fn": "pool.sellBid",
      "offset": [
        8230,
        8269
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "3845": {
      "fn": "pool.sellBid",
      "offset": [
        8230,
        8269
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3846": {
      "fn": "pool.sellBid",
      "offset": [
        8230,
        8269
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "3847": {
      "fn": "pool.sellBid",
      "offset": [
        8230,
        8269
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3848": {
      "fn": "pool.sellBid",
      "offset": [
        8230,
        8269
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3850": {
      "fn": "pool.sellBid",
      "offset": [
        8230,
        8269
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3851": {
      "fn": "pool.sellBid",
      "offset": [
        8230,
        8269
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3852": {
      "fn": "pool.sellBid",
      "offset": [
        8230,
        8269
      ],
      "op": "ADD",
      "path": "10"
    },
    "3853": {
      "fn": "pool.sellBid",
      "offset": [
        8230,
        8269
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3854": {
      "fn": "pool.sellBid",
      "offset": [
        8230,
        8269
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "3855": {
      "fn": "pool.sellBid",
      "offset": [
        8270,
        8272
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x7"
    },
    "3857": {
      "fn": "pool.sellBid",
      "offset": [
        8270,
        8272
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3858": {
      "fn": "pool.sellBid",
      "offset": [
        8230,
        8273
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3859": {
      "fn": "pool.sellBid",
      "offset": [
        8230,
        8273
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3860": {
      "fn": "pool.sellBid",
      "offset": [
        8230,
        8273
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3861": {
      "fn": "pool.sellBid",
      "offset": [
        8230,
        8273
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "3862": {
      "fn": "pool.sellBid",
      "offset": [
        8230,
        8273
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3863": {
      "fn": "pool.sellBid",
      "offset": [
        8230,
        8273
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3864": {
      "fn": "pool.sellBid",
      "offset": [
        8230,
        8273
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "3865": {
      "fn": "pool.sellBid",
      "offset": [
        8230,
        8291
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3866": {
      "fn": "pool.sellBid",
      "offset": [
        8230,
        8291
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3867": {
      "fn": "pool.sellBid",
      "offset": [
        8230,
        8273
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3868": {
      "fn": "pool.sellBid",
      "offset": [
        8230,
        8273
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3869": {
      "fn": "pool.sellBid",
      "offset": [
        8235,
        8260
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3870": {
      "fn": "pool.sellBid",
      "offset": [
        8230,
        8291
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xF28"
    },
    "3873": {
      "fn": "pool.sellBid",
      "offset": [
        8230,
        8291
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3874": {
      "fn": "pool.sellBid",
      "offset": [
        8230,
        8291
      ],
      "op": "DUP5",
      "path": "10"
    },
    "3875": {
      "fn": "pool.sellBid",
      "offset": [
        8230,
        8291
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3876": {
      "fn": "pool.sellBid",
      "offset": [
        8230,
        8291
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2973"
    },
    "3879": {
      "fn": "pool.sellBid",
      "jump": "i",
      "offset": [
        8230,
        8291
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3880": {
      "fn": "pool.sellBid",
      "offset": [
        8230,
        8291
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3881": {
      "fn": "pool.sellBid",
      "offset": [
        8230,
        8291
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "3882": {
      "fn": "pool.sellBid",
      "offset": [
        8230,
        8291
      ],
      "op": "POP",
      "path": "10"
    },
    "3883": {
      "fn": "pool.sellBid",
      "offset": [
        8230,
        8291
      ],
      "op": "POP",
      "path": "10"
    },
    "3884": {
      "fn": "pool.sellBid",
      "offset": [
        8230,
        8291
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3885": {
      "fn": "pool.sellBid",
      "offset": [
        8230,
        8291
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3886": {
      "fn": "pool.sellBid",
      "offset": [
        8230,
        8291
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "3887": {
      "fn": "pool.sellBid",
      "offset": [
        8230,
        8291
      ],
      "op": "POP",
      "path": "10"
    },
    "3888": {
      "fn": "pool.sellBid",
      "offset": [
        8460,
        8462
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 34,
      "value": "0x6"
    },
    "3890": {
      "fn": "pool.sellBid",
      "offset": [
        8463,
        8465
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x7"
    },
    "3892": {
      "fn": "pool.sellBid",
      "offset": [
        8463,
        8465
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3893": {
      "fn": "pool.sellBid",
      "offset": [
        8460,
        8466
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3894": {
      "fn": "pool.sellBid",
      "offset": [
        8460,
        8466
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3895": {
      "fn": "pool.sellBid",
      "offset": [
        8460,
        8466
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3896": {
      "fn": "pool.sellBid",
      "offset": [
        8460,
        8466
      ],
      "op": "LT",
      "path": "10"
    },
    "3897": {
      "fn": "pool.sellBid",
      "offset": [
        8460,
        8466
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xF44"
    },
    "3900": {
      "fn": "pool.sellBid",
      "offset": [
        8460,
        8466
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "3901": {
      "fn": "pool.sellBid",
      "offset": [
        8460,
        8466
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xF44"
    },
    "3904": {
      "fn": "pool.sellBid",
      "offset": [
        8460,
        8466
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x298B"
    },
    "3907": {
      "fn": "pool.sellBid",
      "jump": "i",
      "offset": [
        8460,
        8466
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3908": {
      "fn": "pool.sellBid",
      "offset": [
        8460,
        8466
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3909": {
      "fn": "pool.sellBid",
      "offset": [
        8460,
        8466
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3910": {
      "fn": "pool.sellBid",
      "offset": [
        8460,
        8466
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3912": {
      "fn": "pool.sellBid",
      "offset": [
        8460,
        8466
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3913": {
      "fn": "pool.sellBid",
      "offset": [
        8460,
        8466
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "3915": {
      "fn": "pool.sellBid",
      "offset": [
        8460,
        8466
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3917": {
      "fn": "pool.sellBid",
      "offset": [
        8460,
        8466
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "3918": {
      "fn": "pool.sellBid",
      "offset": [
        8460,
        8466
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3919": {
      "fn": "pool.sellBid",
      "offset": [
        8460,
        8466
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "3921": {
      "fn": "pool.sellBid",
      "offset": [
        8460,
        8466
      ],
      "op": "MUL",
      "path": "10"
    },
    "3922": {
      "fn": "pool.sellBid",
      "offset": [
        8460,
        8466
      ],
      "op": "ADD",
      "path": "10"
    },
    "3923": {
      "fn": "pool.sellBid",
      "offset": [
        8460,
        8473
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3925": {
      "fn": "pool.sellBid",
      "offset": [
        8460,
        8473
      ],
      "op": "ADD",
      "path": "10"
    },
    "3926": {
      "fn": "pool.sellBid",
      "offset": [
        8460,
        8473
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3927": {
      "fn": "pool.sellBid",
      "offset": [
        8425,
        8429
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "3929": {
      "fn": "pool.sellBid",
      "offset": [
        8425,
        8433
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3931": {
      "fn": "pool.sellBid",
      "offset": [
        8430,
        8432
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x7"
    },
    "3933": {
      "fn": "pool.sellBid",
      "offset": [
        8430,
        8432
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3934": {
      "fn": "pool.sellBid",
      "offset": [
        8425,
        8433
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3935": {
      "fn": "pool.sellBid",
      "offset": [
        8425,
        8433
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3936": {
      "fn": "pool.sellBid",
      "offset": [
        8425,
        8433
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "3938": {
      "fn": "pool.sellBid",
      "offset": [
        8425,
        8433
      ],
      "op": "ADD",
      "path": "10"
    },
    "3939": {
      "fn": "pool.sellBid",
      "offset": [
        8425,
        8433
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3940": {
      "fn": "pool.sellBid",
      "offset": [
        8425,
        8433
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3941": {
      "fn": "pool.sellBid",
      "offset": [
        8425,
        8433
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3942": {
      "fn": "pool.sellBid",
      "offset": [
        8425,
        8433
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "3944": {
      "fn": "pool.sellBid",
      "offset": [
        8425,
        8433
      ],
      "op": "ADD",
      "path": "10"
    },
    "3945": {
      "fn": "pool.sellBid",
      "offset": [
        8425,
        8433
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3947": {
      "fn": "pool.sellBid",
      "offset": [
        8425,
        8433
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "3948": {
      "fn": "pool.sellBid",
      "offset": [
        8434,
        8436
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x6"
    },
    "3950": {
      "fn": "pool.sellBid",
      "offset": [
        8437,
        8439
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x7"
    },
    "3952": {
      "fn": "pool.sellBid",
      "offset": [
        8437,
        8439
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3953": {
      "fn": "pool.sellBid",
      "offset": [
        8434,
        8440
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3954": {
      "fn": "pool.sellBid",
      "offset": [
        8434,
        8440
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3955": {
      "fn": "pool.sellBid",
      "offset": [
        8434,
        8440
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3956": {
      "fn": "pool.sellBid",
      "offset": [
        8434,
        8440
      ],
      "op": "LT",
      "path": "10"
    },
    "3957": {
      "fn": "pool.sellBid",
      "offset": [
        8434,
        8440
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xF80"
    },
    "3960": {
      "fn": "pool.sellBid",
      "offset": [
        8434,
        8440
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "3961": {
      "fn": "pool.sellBid",
      "offset": [
        8434,
        8440
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xF80"
    },
    "3964": {
      "fn": "pool.sellBid",
      "offset": [
        8434,
        8440
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x298B"
    },
    "3967": {
      "fn": "pool.sellBid",
      "jump": "i",
      "offset": [
        8434,
        8440
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3968": {
      "fn": "pool.sellBid",
      "offset": [
        8434,
        8440
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3969": {
      "fn": "pool.sellBid",
      "offset": [
        8434,
        8440
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3970": {
      "fn": "pool.sellBid",
      "offset": [
        8434,
        8440
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3972": {
      "fn": "pool.sellBid",
      "offset": [
        8434,
        8440
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3973": {
      "fn": "pool.sellBid",
      "offset": [
        8434,
        8440
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "3975": {
      "fn": "pool.sellBid",
      "offset": [
        8434,
        8440
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3977": {
      "fn": "pool.sellBid",
      "offset": [
        8434,
        8440
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "3978": {
      "fn": "pool.sellBid",
      "offset": [
        8434,
        8440
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3979": {
      "fn": "pool.sellBid",
      "offset": [
        8434,
        8440
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "3981": {
      "fn": "pool.sellBid",
      "offset": [
        8434,
        8440
      ],
      "op": "MUL",
      "path": "10"
    },
    "3982": {
      "fn": "pool.sellBid",
      "offset": [
        8434,
        8440
      ],
      "op": "ADD",
      "path": "10"
    },
    "3983": {
      "fn": "pool.sellBid",
      "offset": [
        8434,
        8446
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "3985": {
      "fn": "pool.sellBid",
      "offset": [
        8434,
        8446
      ],
      "op": "ADD",
      "path": "10"
    },
    "3986": {
      "fn": "pool.sellBid",
      "offset": [
        8447,
        8448
      ],
      "op": "DUP4",
      "path": "10"
    },
    "3987": {
      "fn": "pool.sellBid",
      "offset": [
        8434,
        8449
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3988": {
      "fn": "pool.sellBid",
      "offset": [
        8434,
        8449
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3989": {
      "fn": "pool.sellBid",
      "offset": [
        8434,
        8449
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3990": {
      "fn": "pool.sellBid",
      "offset": [
        8434,
        8449
      ],
      "op": "LT",
      "path": "10"
    },
    "3991": {
      "fn": "pool.sellBid",
      "offset": [
        8434,
        8449
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xFA2"
    },
    "3994": {
      "fn": "pool.sellBid",
      "offset": [
        8434,
        8449
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "3995": {
      "fn": "pool.sellBid",
      "offset": [
        8434,
        8449
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xFA2"
    },
    "3998": {
      "fn": "pool.sellBid",
      "offset": [
        8434,
        8449
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x298B"
    },
    "4001": {
      "fn": "pool.sellBid",
      "jump": "i",
      "offset": [
        8434,
        8449
      ],
      "op": "JUMP",
      "path": "10"
    },
    "4002": {
      "fn": "pool.sellBid",
      "offset": [
        8434,
        8449
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4003": {
      "fn": "pool.sellBid",
      "offset": [
        8434,
        8449
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4004": {
      "fn": "pool.sellBid",
      "offset": [
        8434,
        8449
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "4006": {
      "fn": "pool.sellBid",
      "offset": [
        8434,
        8449
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4007": {
      "fn": "pool.sellBid",
      "offset": [
        8434,
        8449
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "4009": {
      "fn": "pool.sellBid",
      "offset": [
        8434,
        8449
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "4011": {
      "fn": "pool.sellBid",
      "offset": [
        8434,
        8449
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "4012": {
      "fn": "pool.sellBid",
      "offset": [
        8434,
        8449
      ],
      "op": "ADD",
      "path": "10"
    },
    "4013": {
      "fn": "pool.sellBid",
      "offset": [
        8434,
        8449
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "4014": {
      "fn": "pool.sellBid",
      "offset": [
        8425,
        8450
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4015": {
      "fn": "pool.sellBid",
      "offset": [
        8425,
        8450
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "4016": {
      "fn": "pool.sellBid",
      "offset": [
        8425,
        8450
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4017": {
      "fn": "pool.sellBid",
      "offset": [
        8425,
        8450
      ],
      "op": "LT",
      "path": "10"
    },
    "4018": {
      "fn": "pool.sellBid",
      "offset": [
        8425,
        8450
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xFBD"
    },
    "4021": {
      "fn": "pool.sellBid",
      "offset": [
        8425,
        8450
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "4022": {
      "fn": "pool.sellBid",
      "offset": [
        8425,
        8450
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xFBD"
    },
    "4025": {
      "fn": "pool.sellBid",
      "offset": [
        8425,
        8450
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x298B"
    },
    "4028": {
      "fn": "pool.sellBid",
      "jump": "i",
      "offset": [
        8425,
        8450
      ],
      "op": "JUMP",
      "path": "10"
    },
    "4029": {
      "fn": "pool.sellBid",
      "offset": [
        8425,
        8450
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4030": {
      "fn": "pool.sellBid",
      "offset": [
        8425,
        8450
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4031": {
      "fn": "pool.sellBid",
      "offset": [
        8425,
        8450
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "4033": {
      "fn": "pool.sellBid",
      "offset": [
        8425,
        8450
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4034": {
      "fn": "pool.sellBid",
      "offset": [
        8425,
        8450
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "4036": {
      "fn": "pool.sellBid",
      "offset": [
        8425,
        8450
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "4038": {
      "fn": "pool.sellBid",
      "offset": [
        8425,
        8450
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "4039": {
      "fn": "pool.sellBid",
      "offset": [
        8425,
        8450
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4040": {
      "fn": "pool.sellBid",
      "offset": [
        8425,
        8450
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "4042": {
      "fn": "pool.sellBid",
      "offset": [
        8425,
        8450
      ],
      "op": "MUL",
      "path": "10"
    },
    "4043": {
      "fn": "pool.sellBid",
      "offset": [
        8425,
        8450
      ],
      "op": "ADD",
      "path": "10"
    },
    "4044": {
      "fn": "pool.sellBid",
      "offset": [
        8425,
        8456
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "4046": {
      "fn": "pool.sellBid",
      "offset": [
        8425,
        8456
      ],
      "op": "ADD",
      "path": "10"
    },
    "4047": {
      "fn": "pool.sellBid",
      "offset": [
        8425,
        8456
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "4048": {
      "fn": "pool.sellBid",
      "offset": [
        8393,
        8402
      ],
      "op": "DUP4",
      "path": "10"
    },
    "4049": {
      "fn": "pool.sellBid",
      "offset": [
        8393,
        8456
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xFDA"
    },
    "4052": {
      "fn": "pool.sellBid",
      "offset": [
        8393,
        8456
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "4053": {
      "fn": "pool.sellBid",
      "offset": [
        8393,
        8456
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4054": {
      "fn": "pool.sellBid",
      "offset": [
        8393,
        8456
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x29FE"
    },
    "4057": {
      "fn": "pool.sellBid",
      "jump": "i",
      "offset": [
        8393,
        8456
      ],
      "op": "JUMP",
      "path": "10"
    },
    "4058": {
      "fn": "pool.sellBid",
      "offset": [
        8393,
        8456
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4059": {
      "fn": "pool.sellBid",
      "offset": [
        8392,
        8473
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xFE4"
    },
    "4062": {
      "fn": "pool.sellBid",
      "offset": [
        8392,
        8473
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "4063": {
      "fn": "pool.sellBid",
      "offset": [
        8392,
        8473
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4064": {
      "fn": "pool.sellBid",
      "offset": [
        8392,
        8473
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2A1D"
    },
    "4067": {
      "fn": "pool.sellBid",
      "jump": "i",
      "offset": [
        8392,
        8473
      ],
      "op": "JUMP",
      "path": "10"
    },
    "4068": {
      "fn": "pool.sellBid",
      "offset": [
        8392,
        8473
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4069": {
      "fn": "pool.sellBid",
      "offset": [
        8319,
        8321
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x7"
    },
    "4071": {
      "fn": "pool.sellBid",
      "offset": [
        8319,
        8321
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "4072": {
      "fn": "pool.sellBid",
      "offset": [
        8309,
        8348
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "4074": {
      "fn": "pool.sellBid",
      "offset": [
        8314,
        8322
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4075": {
      "fn": "pool.sellBid",
      "offset": [
        8314,
        8322
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4076": {
      "fn": "pool.sellBid",
      "offset": [
        8314,
        8322
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4077": {
      "fn": "pool.sellBid",
      "offset": [
        8314,
        8318
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "4079": {
      "fn": "pool.sellBid",
      "offset": [
        8314,
        8322
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "4081": {
      "fn": "pool.sellBid",
      "offset": [
        8314,
        8322
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4082": {
      "fn": "pool.sellBid",
      "offset": [
        8314,
        8322
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "4084": {
      "fn": "pool.sellBid",
      "offset": [
        8314,
        8322
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4085": {
      "fn": "pool.sellBid",
      "offset": [
        8314,
        8322
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "4086": {
      "fn": "pool.sellBid",
      "offset": [
        8323,
        8325
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x6"
    },
    "4088": {
      "fn": "pool.sellBid",
      "offset": [
        8323,
        8329
      ],
      "op": "DUP1",
      "path": "10"
    },
    "4089": {
      "fn": "pool.sellBid",
      "offset": [
        8323,
        8329
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "4090": {
      "fn": "pool.sellBid",
      "offset": [
        8309,
        8313
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x5"
    },
    "4092": {
      "fn": "pool.sellBid",
      "offset": [
        8309,
        8313
      ],
      "op": "SWAP5",
      "path": "10"
    },
    "4093": {
      "fn": "pool.sellBid",
      "offset": [
        8319,
        8321
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4094": {
      "fn": "pool.sellBid",
      "offset": [
        8323,
        8329
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4095": {
      "fn": "pool.sellBid",
      "offset": [
        8323,
        8329
      ],
      "op": "LT",
      "path": "10"
    },
    "4096": {
      "fn": "pool.sellBid",
      "offset": [
        8323,
        8329
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x100B"
    },
    "4099": {
      "fn": "pool.sellBid",
      "offset": [
        8323,
        8329
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "4100": {
      "fn": "pool.sellBid",
      "offset": [
        8323,
        8329
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x100B"
    },
    "4103": {
      "fn": "pool.sellBid",
      "offset": [
        8323,
        8329
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x298B"
    },
    "4106": {
      "fn": "pool.sellBid",
      "jump": "i",
      "offset": [
        8323,
        8329
      ],
      "op": "JUMP",
      "path": "10"
    },
    "4107": {
      "fn": "pool.sellBid",
      "offset": [
        8323,
        8329
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4108": {
      "fn": "pool.sellBid",
      "offset": [
        8323,
        8329
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4109": {
      "fn": "pool.sellBid",
      "offset": [
        8323,
        8329
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "4111": {
      "fn": "pool.sellBid",
      "offset": [
        8323,
        8329
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4112": {
      "fn": "pool.sellBid",
      "offset": [
        8323,
        8329
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "4114": {
      "fn": "pool.sellBid",
      "offset": [
        8323,
        8329
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "4116": {
      "fn": "pool.sellBid",
      "offset": [
        8323,
        8329
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "4117": {
      "fn": "pool.sellBid",
      "offset": [
        8323,
        8329
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4118": {
      "fn": "pool.sellBid",
      "offset": [
        8323,
        8329
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "4120": {
      "fn": "pool.sellBid",
      "offset": [
        8323,
        8329
      ],
      "op": "MUL",
      "path": "10"
    },
    "4121": {
      "fn": "pool.sellBid",
      "offset": [
        8323,
        8329
      ],
      "op": "ADD",
      "path": "10"
    },
    "4122": {
      "fn": "pool.sellBid",
      "offset": [
        8323,
        8335
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "4124": {
      "fn": "pool.sellBid",
      "offset": [
        8323,
        8335
      ],
      "op": "ADD",
      "path": "10"
    },
    "4125": {
      "fn": "pool.sellBid",
      "offset": [
        8336,
        8337
      ],
      "op": "DUP6",
      "path": "10"
    },
    "4126": {
      "fn": "pool.sellBid",
      "offset": [
        8323,
        8338
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4127": {
      "fn": "pool.sellBid",
      "offset": [
        8323,
        8338
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "4128": {
      "fn": "pool.sellBid",
      "offset": [
        8323,
        8338
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4129": {
      "fn": "pool.sellBid",
      "offset": [
        8323,
        8338
      ],
      "op": "LT",
      "path": "10"
    },
    "4130": {
      "fn": "pool.sellBid",
      "offset": [
        8323,
        8338
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x102D"
    },
    "4133": {
      "fn": "pool.sellBid",
      "offset": [
        8323,
        8338
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "4134": {
      "fn": "pool.sellBid",
      "offset": [
        8323,
        8338
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x102D"
    },
    "4137": {
      "fn": "pool.sellBid",
      "offset": [
        8323,
        8338
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x298B"
    },
    "4140": {
      "fn": "pool.sellBid",
      "jump": "i",
      "offset": [
        8323,
        8338
      ],
      "op": "JUMP",
      "path": "10"
    },
    "4141": {
      "fn": "pool.sellBid",
      "offset": [
        8323,
        8338
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4142": {
      "fn": "pool.sellBid",
      "offset": [
        8323,
        8338
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4143": {
      "fn": "pool.sellBid",
      "offset": [
        8323,
        8338
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "4145": {
      "fn": "pool.sellBid",
      "offset": [
        8323,
        8338
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4146": {
      "fn": "pool.sellBid",
      "offset": [
        8323,
        8338
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "4148": {
      "fn": "pool.sellBid",
      "offset": [
        8323,
        8338
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "4150": {
      "fn": "pool.sellBid",
      "offset": [
        8323,
        8338
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "4151": {
      "fn": "pool.sellBid",
      "offset": [
        8323,
        8338
      ],
      "op": "ADD",
      "path": "10"
    },
    "4152": {
      "fn": "pool.sellBid",
      "offset": [
        8323,
        8338
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "4153": {
      "fn": "pool.sellBid",
      "offset": [
        8314,
        8339
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4154": {
      "fn": "pool.sellBid",
      "offset": [
        8314,
        8339
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "4155": {
      "fn": "pool.sellBid",
      "offset": [
        8314,
        8339
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4156": {
      "fn": "pool.sellBid",
      "offset": [
        8314,
        8339
      ],
      "op": "LT",
      "path": "10"
    },
    "4157": {
      "fn": "pool.sellBid",
      "offset": [
        8314,
        8339
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1048"
    },
    "4160": {
      "fn": "pool.sellBid",
      "offset": [
        8314,
        8339
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "4161": {
      "fn": "pool.sellBid",
      "offset": [
        8314,
        8339
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1048"
    },
    "4164": {
      "fn": "pool.sellBid",
      "offset": [
        8314,
        8339
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x298B"
    },
    "4167": {
      "fn": "pool.sellBid",
      "jump": "i",
      "offset": [
        8314,
        8339
      ],
      "op": "JUMP",
      "path": "10"
    },
    "4168": {
      "fn": "pool.sellBid",
      "offset": [
        8314,
        8339
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4169": {
      "fn": "pool.sellBid",
      "offset": [
        8314,
        8339
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "4171": {
      "fn": "pool.sellBid",
      "offset": [
        8314,
        8339
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "4172": {
      "fn": "pool.sellBid",
      "offset": [
        8314,
        8339
      ],
      "op": "DUP3",
      "path": "10"
    },
    "4173": {
      "fn": "pool.sellBid",
      "offset": [
        8314,
        8339
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4174": {
      "fn": "pool.sellBid",
      "offset": [
        8314,
        8339
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "4176": {
      "fn": "pool.sellBid",
      "offset": [
        8314,
        8339
      ],
      "op": "DUP1",
      "path": "10"
    },
    "4177": {
      "fn": "pool.sellBid",
      "offset": [
        8314,
        8339
      ],
      "op": "DUP4",
      "path": "10"
    },
    "4178": {
      "fn": "pool.sellBid",
      "offset": [
        8314,
        8339
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "4179": {
      "fn": "pool.sellBid",
      "offset": [
        8314,
        8347
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x2"
    },
    "4181": {
      "fn": "pool.sellBid",
      "offset": [
        8314,
        8339
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "4183": {
      "fn": "pool.sellBid",
      "offset": [
        8314,
        8339
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4184": {
      "fn": "pool.sellBid",
      "offset": [
        8314,
        8339
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "4185": {
      "fn": "pool.sellBid",
      "offset": [
        8314,
        8339
      ],
      "op": "MUL",
      "path": "10"
    },
    "4186": {
      "fn": "pool.sellBid",
      "offset": [
        8314,
        8339
      ],
      "op": "ADD",
      "path": "10"
    },
    "4187": {
      "fn": "pool.sellBid",
      "offset": [
        8314,
        8347
      ],
      "op": "DUP3",
      "path": "10"
    },
    "4188": {
      "fn": "pool.sellBid",
      "offset": [
        8314,
        8347
      ],
      "op": "ADD",
      "path": "10"
    },
    "4189": {
      "fn": "pool.sellBid",
      "offset": [
        8314,
        8347
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "4190": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4192": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4194": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4196": {
      "op": "SHL"
    },
    "4197": {
      "op": "SUB"
    },
    "4198": {
      "fn": "pool.sellBid",
      "offset": [
        8314,
        8347
      ],
      "op": "AND",
      "path": "10"
    },
    "4199": {
      "fn": "pool.sellBid",
      "offset": [
        8309,
        8348
      ],
      "op": "DUP5",
      "path": "10"
    },
    "4200": {
      "fn": "pool.sellBid",
      "offset": [
        8309,
        8348
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4201": {
      "fn": "pool.sellBid",
      "offset": [
        8309,
        8348
      ],
      "op": "DUP4",
      "path": "10"
    },
    "4202": {
      "fn": "pool.sellBid",
      "offset": [
        8309,
        8348
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4203": {
      "fn": "pool.sellBid",
      "offset": [
        8309,
        8348
      ],
      "op": "ADD",
      "path": "10"
    },
    "4204": {
      "fn": "pool.sellBid",
      "offset": [
        8309,
        8348
      ],
      "op": "SWAP5",
      "path": "10"
    },
    "4205": {
      "fn": "pool.sellBid",
      "offset": [
        8309,
        8348
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4206": {
      "fn": "pool.sellBid",
      "offset": [
        8309,
        8348
      ],
      "op": "SWAP5",
      "path": "10"
    },
    "4207": {
      "fn": "pool.sellBid",
      "offset": [
        8309,
        8348
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4208": {
      "fn": "pool.sellBid",
      "offset": [
        8309,
        8348
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "4210": {
      "fn": "pool.sellBid",
      "offset": [
        8309,
        8348
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "4211": {
      "fn": "pool.sellBid",
      "offset": [
        8309,
        8348
      ],
      "op": "DUP4",
      "path": "10"
    },
    "4212": {
      "fn": "pool.sellBid",
      "offset": [
        8309,
        8348
      ],
      "op": "ADD",
      "path": "10"
    },
    "4213": {
      "fn": "pool.sellBid",
      "offset": [
        8309,
        8348
      ],
      "op": "DUP3",
      "path": "10"
    },
    "4214": {
      "fn": "pool.sellBid",
      "offset": [
        8309,
        8348
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "4215": {
      "fn": "pool.sellBid",
      "offset": [
        8349,
        8351
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x7"
    },
    "4217": {
      "fn": "pool.sellBid",
      "offset": [
        8349,
        8351
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "4218": {
      "fn": "pool.sellBid",
      "offset": [
        8309,
        8352
      ],
      "op": "DUP4",
      "path": "10"
    },
    "4219": {
      "fn": "pool.sellBid",
      "offset": [
        8309,
        8352
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4220": {
      "fn": "pool.sellBid",
      "offset": [
        8309,
        8352
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4221": {
      "fn": "pool.sellBid",
      "offset": [
        8309,
        8352
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "4222": {
      "fn": "pool.sellBid",
      "offset": [
        8309,
        8352
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4223": {
      "fn": "pool.sellBid",
      "offset": [
        8309,
        8352
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4224": {
      "fn": "pool.sellBid",
      "offset": [
        8309,
        8352
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4225": {
      "fn": "pool.sellBid",
      "offset": [
        8309,
        8352
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "4226": {
      "fn": "pool.sellBid",
      "offset": [
        8309,
        8387
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4227": {
      "fn": "pool.sellBid",
      "offset": [
        8309,
        8387
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "4228": {
      "fn": "pool.sellBid",
      "offset": [
        8309,
        8387
      ],
      "op": "ADD",
      "path": "10"
    },
    "4229": {
      "fn": "pool.sellBid",
      "offset": [
        8309,
        8474
      ],
      "op": "DUP1",
      "path": "10"
    },
    "4230": {
      "fn": "pool.sellBid",
      "offset": [
        8309,
        8474
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "4231": {
      "fn": "pool.sellBid",
      "offset": [
        8309,
        8387
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4232": {
      "fn": "pool.sellBid",
      "offset": [
        8309,
        8387
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "4233": {
      "fn": "pool.sellBid",
      "offset": [
        8314,
        8339
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4234": {
      "fn": "pool.sellBid",
      "offset": [
        8309,
        8474
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1094"
    },
    "4237": {
      "fn": "pool.sellBid",
      "offset": [
        8309,
        8474
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4238": {
      "fn": "pool.sellBid",
      "offset": [
        8309,
        8474
      ],
      "op": "DUP5",
      "path": "10"
    },
    "4239": {
      "fn": "pool.sellBid",
      "offset": [
        8309,
        8474
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4240": {
      "fn": "pool.sellBid",
      "offset": [
        8309,
        8474
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x29A1"
    },
    "4243": {
      "fn": "pool.sellBid",
      "jump": "i",
      "offset": [
        8309,
        8474
      ],
      "op": "JUMP",
      "path": "10"
    },
    "4244": {
      "fn": "pool.sellBid",
      "offset": [
        8309,
        8474
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4245": {
      "fn": "pool.sellBid",
      "offset": [
        8309,
        8474
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4246": {
      "fn": "pool.sellBid",
      "offset": [
        8309,
        8474
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "4247": {
      "fn": "pool.sellBid",
      "offset": [
        8309,
        8474
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "4248": {
      "op": "POP"
    },
    "4249": {
      "op": "POP"
    },
    "4250": {
      "fn": "pool.sellBid",
      "offset": [
        8557,
        8559
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 35,
      "value": "0x7"
    },
    "4252": {
      "fn": "pool.sellBid",
      "offset": [
        8557,
        8559
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "4253": {
      "fn": "pool.sellBid",
      "offset": [
        8552,
        8560
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "4255": {
      "fn": "pool.sellBid",
      "offset": [
        8552,
        8560
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4256": {
      "fn": "pool.sellBid",
      "offset": [
        8552,
        8560
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4257": {
      "fn": "pool.sellBid",
      "offset": [
        8552,
        8560
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4258": {
      "fn": "pool.sellBid",
      "offset": [
        8552,
        8556
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "4260": {
      "fn": "pool.sellBid",
      "offset": [
        8552,
        8560
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "4262": {
      "fn": "pool.sellBid",
      "offset": [
        8552,
        8560
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4263": {
      "fn": "pool.sellBid",
      "offset": [
        8552,
        8560
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "4265": {
      "fn": "pool.sellBid",
      "offset": [
        8552,
        8560
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4266": {
      "fn": "pool.sellBid",
      "offset": [
        8552,
        8560
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "4267": {
      "fn": "pool.sellBid",
      "offset": [
        8561,
        8563
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x6"
    },
    "4269": {
      "fn": "pool.sellBid",
      "offset": [
        8561,
        8567
      ],
      "op": "DUP1",
      "path": "10"
    },
    "4270": {
      "fn": "pool.sellBid",
      "offset": [
        8561,
        8567
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "4271": {
      "fn": "pool.sellBid",
      "offset": [
        8552,
        8560
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "4272": {
      "fn": "pool.sellBid",
      "offset": [
        8552,
        8560
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "4273": {
      "fn": "pool.sellBid",
      "offset": [
        8561,
        8563
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4274": {
      "fn": "pool.sellBid",
      "offset": [
        8561,
        8563
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "4275": {
      "fn": "pool.sellBid",
      "offset": [
        8561,
        8567
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4276": {
      "fn": "pool.sellBid",
      "offset": [
        8561,
        8567
      ],
      "op": "LT",
      "path": "10"
    },
    "4277": {
      "fn": "pool.sellBid",
      "offset": [
        8561,
        8567
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x10C0"
    },
    "4280": {
      "fn": "pool.sellBid",
      "offset": [
        8561,
        8567
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "4281": {
      "fn": "pool.sellBid",
      "offset": [
        8561,
        8567
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x10C0"
    },
    "4284": {
      "fn": "pool.sellBid",
      "offset": [
        8561,
        8567
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x298B"
    },
    "4287": {
      "fn": "pool.sellBid",
      "jump": "i",
      "offset": [
        8561,
        8567
      ],
      "op": "JUMP",
      "path": "10"
    },
    "4288": {
      "fn": "pool.sellBid",
      "offset": [
        8561,
        8567
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4289": {
      "fn": "pool.sellBid",
      "offset": [
        8561,
        8567
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4290": {
      "fn": "pool.sellBid",
      "offset": [
        8561,
        8567
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "4292": {
      "fn": "pool.sellBid",
      "offset": [
        8561,
        8567
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4293": {
      "fn": "pool.sellBid",
      "offset": [
        8561,
        8567
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "4295": {
      "fn": "pool.sellBid",
      "offset": [
        8561,
        8567
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "4297": {
      "fn": "pool.sellBid",
      "offset": [
        8561,
        8567
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "4298": {
      "fn": "pool.sellBid",
      "offset": [
        8561,
        8567
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4299": {
      "fn": "pool.sellBid",
      "offset": [
        8561,
        8567
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "4301": {
      "fn": "pool.sellBid",
      "offset": [
        8561,
        8567
      ],
      "op": "MUL",
      "path": "10"
    },
    "4302": {
      "fn": "pool.sellBid",
      "offset": [
        8561,
        8567
      ],
      "op": "ADD",
      "path": "10"
    },
    "4303": {
      "fn": "pool.sellBid",
      "offset": [
        8561,
        8573
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "4305": {
      "fn": "pool.sellBid",
      "offset": [
        8561,
        8573
      ],
      "op": "ADD",
      "path": "10"
    },
    "4306": {
      "fn": "pool.sellBid",
      "offset": [
        8574,
        8575
      ],
      "op": "DUP3",
      "path": "10"
    },
    "4307": {
      "fn": "pool.sellBid",
      "offset": [
        8561,
        8576
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4308": {
      "fn": "pool.sellBid",
      "offset": [
        8561,
        8576
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "4309": {
      "fn": "pool.sellBid",
      "offset": [
        8561,
        8576
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4310": {
      "fn": "pool.sellBid",
      "offset": [
        8561,
        8576
      ],
      "op": "LT",
      "path": "10"
    },
    "4311": {
      "fn": "pool.sellBid",
      "offset": [
        8561,
        8576
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x10E2"
    },
    "4314": {
      "fn": "pool.sellBid",
      "offset": [
        8561,
        8576
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "4315": {
      "fn": "pool.sellBid",
      "offset": [
        8561,
        8576
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x10E2"
    },
    "4318": {
      "fn": "pool.sellBid",
      "offset": [
        8561,
        8576
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x298B"
    },
    "4321": {
      "fn": "pool.sellBid",
      "jump": "i",
      "offset": [
        8561,
        8576
      ],
      "op": "JUMP",
      "path": "10"
    },
    "4322": {
      "fn": "pool.sellBid",
      "offset": [
        8561,
        8576
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4323": {
      "fn": "pool.sellBid",
      "offset": [
        8561,
        8576
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4324": {
      "fn": "pool.sellBid",
      "offset": [
        8561,
        8576
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "4326": {
      "fn": "pool.sellBid",
      "offset": [
        8561,
        8576
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4327": {
      "fn": "pool.sellBid",
      "offset": [
        8561,
        8576
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "4329": {
      "fn": "pool.sellBid",
      "offset": [
        8561,
        8576
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "4331": {
      "fn": "pool.sellBid",
      "offset": [
        8561,
        8576
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "4332": {
      "fn": "pool.sellBid",
      "offset": [
        8561,
        8576
      ],
      "op": "ADD",
      "path": "10"
    },
    "4333": {
      "fn": "pool.sellBid",
      "offset": [
        8561,
        8576
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "4334": {
      "fn": "pool.sellBid",
      "offset": [
        8552,
        8577
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4335": {
      "fn": "pool.sellBid",
      "offset": [
        8552,
        8577
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "4336": {
      "fn": "pool.sellBid",
      "offset": [
        8552,
        8577
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4337": {
      "fn": "pool.sellBid",
      "offset": [
        8552,
        8577
      ],
      "op": "LT",
      "path": "10"
    },
    "4338": {
      "fn": "pool.sellBid",
      "offset": [
        8552,
        8577
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x10FD"
    },
    "4341": {
      "fn": "pool.sellBid",
      "offset": [
        8552,
        8577
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "4342": {
      "fn": "pool.sellBid",
      "offset": [
        8552,
        8577
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x10FD"
    },
    "4345": {
      "fn": "pool.sellBid",
      "offset": [
        8552,
        8577
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x298B"
    },
    "4348": {
      "fn": "pool.sellBid",
      "jump": "i",
      "offset": [
        8552,
        8577
      ],
      "op": "JUMP",
      "path": "10"
    },
    "4349": {
      "fn": "pool.sellBid",
      "offset": [
        8552,
        8577
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4350": {
      "fn": "pool.sellBid",
      "offset": [
        8552,
        8577
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4351": {
      "fn": "pool.sellBid",
      "offset": [
        8552,
        8577
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "4353": {
      "fn": "pool.sellBid",
      "offset": [
        8552,
        8577
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4354": {
      "fn": "pool.sellBid",
      "offset": [
        8552,
        8577
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "4356": {
      "fn": "pool.sellBid",
      "offset": [
        8552,
        8577
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "4358": {
      "fn": "pool.sellBid",
      "offset": [
        8552,
        8577
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "4359": {
      "fn": "pool.sellBid",
      "offset": [
        8552,
        8577
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4360": {
      "fn": "pool.sellBid",
      "offset": [
        8552,
        8577
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "4362": {
      "fn": "pool.sellBid",
      "offset": [
        8552,
        8577
      ],
      "op": "MUL",
      "path": "10"
    },
    "4363": {
      "fn": "pool.sellBid",
      "offset": [
        8552,
        8577
      ],
      "op": "ADD",
      "path": "10"
    },
    "4364": {
      "fn": "pool.sellBid",
      "offset": [
        8552,
        8583
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "4366": {
      "fn": "pool.sellBid",
      "offset": [
        8552,
        8583
      ],
      "op": "ADD",
      "path": "10"
    },
    "4367": {
      "fn": "pool.sellBid",
      "offset": [
        8552,
        8583
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "4368": {
      "fn": "pool.sellBid",
      "offset": [
        8540,
        8549
      ],
      "op": "DUP3",
      "path": "10"
    },
    "4369": {
      "fn": "pool.sellBid",
      "offset": [
        8540,
        8583
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x111A"
    },
    "4372": {
      "fn": "pool.sellBid",
      "offset": [
        8540,
        8583
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "4373": {
      "fn": "pool.sellBid",
      "offset": [
        8540,
        8583
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4374": {
      "fn": "pool.sellBid",
      "offset": [
        8540,
        8583
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x29FE"
    },
    "4377": {
      "fn": "pool.sellBid",
      "jump": "i",
      "offset": [
        8540,
        8583
      ],
      "op": "JUMP",
      "path": "10"
    },
    "4378": {
      "fn": "pool.sellBid",
      "offset": [
        8540,
        8583
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4379": {
      "fn": "pool.sellBid",
      "offset": [
        8525,
        8584
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1124"
    },
    "4382": {
      "fn": "pool.sellBid",
      "offset": [
        8525,
        8584
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4383": {
      "fn": "pool.sellBid",
      "offset": [
        8525,
        8584
      ],
      "op": "DUP5",
      "path": "10"
    },
    "4384": {
      "fn": "pool.sellBid",
      "offset": [
        8525,
        8584
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2973"
    },
    "4387": {
      "fn": "pool.sellBid",
      "jump": "i",
      "offset": [
        8525,
        8584
      ],
      "op": "JUMP",
      "path": "10"
    },
    "4388": {
      "fn": "pool.sellBid",
      "offset": [
        8525,
        8584
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4389": {
      "fn": "pool.sellBid",
      "offset": [
        8525,
        8584
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "4390": {
      "fn": "pool.sellBid",
      "offset": [
        8525,
        8584
      ],
      "op": "POP",
      "path": "10"
    },
    "4391": {
      "fn": "pool.sellBid",
      "offset": [
        8652,
        8661
      ],
      "op": "DUP2",
      "path": "10",
      "statement": 36
    },
    "4392": {
      "fn": "pool.sellBid",
      "offset": [
        8635,
        8637
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x6"
    },
    "4394": {
      "fn": "pool.sellBid",
      "offset": [
        8638,
        8640
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x7"
    },
    "4396": {
      "fn": "pool.sellBid",
      "offset": [
        8638,
        8640
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "4397": {
      "fn": "pool.sellBid",
      "offset": [
        8635,
        8641
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4398": {
      "fn": "pool.sellBid",
      "offset": [
        8635,
        8641
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "4399": {
      "fn": "pool.sellBid",
      "offset": [
        8635,
        8641
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4400": {
      "fn": "pool.sellBid",
      "offset": [
        8635,
        8641
      ],
      "op": "LT",
      "path": "10"
    },
    "4401": {
      "fn": "pool.sellBid",
      "offset": [
        8635,
        8641
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x113C"
    },
    "4404": {
      "fn": "pool.sellBid",
      "offset": [
        8635,
        8641
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "4405": {
      "fn": "pool.sellBid",
      "offset": [
        8635,
        8641
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x113C"
    },
    "4408": {
      "fn": "pool.sellBid",
      "offset": [
        8635,
        8641
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x298B"
    },
    "4411": {
      "fn": "pool.sellBid",
      "jump": "i",
      "offset": [
        8635,
        8641
      ],
      "op": "JUMP",
      "path": "10"
    },
    "4412": {
      "fn": "pool.sellBid",
      "offset": [
        8635,
        8641
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4413": {
      "fn": "pool.sellBid",
      "offset": [
        8635,
        8641
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4414": {
      "fn": "pool.sellBid",
      "offset": [
        8635,
        8641
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "4416": {
      "fn": "pool.sellBid",
      "offset": [
        8635,
        8641
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4417": {
      "fn": "pool.sellBid",
      "offset": [
        8635,
        8641
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "4419": {
      "fn": "pool.sellBid",
      "offset": [
        8635,
        8641
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "4421": {
      "fn": "pool.sellBid",
      "offset": [
        8635,
        8641
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "4422": {
      "fn": "pool.sellBid",
      "offset": [
        8635,
        8641
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4423": {
      "fn": "pool.sellBid",
      "offset": [
        8635,
        8641
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "4425": {
      "fn": "pool.sellBid",
      "offset": [
        8635,
        8641
      ],
      "op": "MUL",
      "path": "10"
    },
    "4426": {
      "fn": "pool.sellBid",
      "offset": [
        8635,
        8641
      ],
      "op": "ADD",
      "path": "10"
    },
    "4427": {
      "fn": "pool.sellBid",
      "offset": [
        8635,
        8648
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x2"
    },
    "4429": {
      "fn": "pool.sellBid",
      "offset": [
        8635,
        8648
      ],
      "op": "ADD",
      "path": "10"
    },
    "4430": {
      "fn": "pool.sellBid",
      "offset": [
        8635,
        8648
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "4432": {
      "fn": "pool.sellBid",
      "offset": [
        8635,
        8661
      ],
      "op": "DUP3",
      "path": "10"
    },
    "4433": {
      "fn": "pool.sellBid",
      "offset": [
        8635,
        8661
      ],
      "op": "DUP3",
      "path": "10"
    },
    "4434": {
      "fn": "pool.sellBid",
      "offset": [
        8635,
        8661
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "4435": {
      "fn": "pool.sellBid",
      "offset": [
        8635,
        8661
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x115C"
    },
    "4438": {
      "fn": "pool.sellBid",
      "offset": [
        8635,
        8661
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "4439": {
      "fn": "pool.sellBid",
      "offset": [
        8635,
        8661
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4440": {
      "fn": "pool.sellBid",
      "offset": [
        8635,
        8661
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x29A1"
    },
    "4443": {
      "fn": "pool.sellBid",
      "jump": "i",
      "offset": [
        8635,
        8661
      ],
      "op": "JUMP",
      "path": "10"
    },
    "4444": {
      "fn": "pool.sellBid",
      "offset": [
        8635,
        8661
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4445": {
      "fn": "pool.sellBid",
      "offset": [
        8635,
        8661
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4446": {
      "fn": "pool.sellBid",
      "offset": [
        8635,
        8661
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "4447": {
      "fn": "pool.sellBid",
      "offset": [
        8635,
        8661
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "4448": {
      "op": "POP"
    },
    "4449": {
      "op": "POP"
    },
    "4450": {
      "fn": "pool.sellBid",
      "offset": [
        8721,
        8723
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 37,
      "value": "0x7"
    },
    "4452": {
      "fn": "pool.sellBid",
      "offset": [
        8721,
        8723
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "4453": {
      "fn": "pool.sellBid",
      "offset": [
        8749,
        8750
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "4455": {
      "fn": "pool.sellBid",
      "offset": [
        8716,
        8724
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4456": {
      "fn": "pool.sellBid",
      "offset": [
        8716,
        8724
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4457": {
      "fn": "pool.sellBid",
      "offset": [
        8716,
        8724
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4458": {
      "fn": "pool.sellBid",
      "offset": [
        8716,
        8720
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "4460": {
      "fn": "pool.sellBid",
      "offset": [
        8716,
        8724
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "4462": {
      "fn": "pool.sellBid",
      "offset": [
        8716,
        8724
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4463": {
      "fn": "pool.sellBid",
      "offset": [
        8716,
        8724
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "4465": {
      "fn": "pool.sellBid",
      "offset": [
        8716,
        8724
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4466": {
      "fn": "pool.sellBid",
      "offset": [
        8716,
        8724
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "4467": {
      "fn": "pool.sellBid",
      "offset": [
        8725,
        8727
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x6"
    },
    "4469": {
      "fn": "pool.sellBid",
      "offset": [
        8725,
        8731
      ],
      "op": "DUP1",
      "path": "10"
    },
    "4470": {
      "fn": "pool.sellBid",
      "offset": [
        8725,
        8731
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "4471": {
      "fn": "pool.sellBid",
      "offset": [
        8749,
        8750
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "4472": {
      "fn": "pool.sellBid",
      "offset": [
        8749,
        8750
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "4473": {
      "fn": "pool.sellBid",
      "offset": [
        8716,
        8724
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "4474": {
      "fn": "pool.sellBid",
      "offset": [
        8716,
        8724
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "4475": {
      "fn": "pool.sellBid",
      "offset": [
        8725,
        8727
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4476": {
      "fn": "pool.sellBid",
      "offset": [
        8725,
        8727
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "4477": {
      "fn": "pool.sellBid",
      "offset": [
        8721,
        8723
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4478": {
      "fn": "pool.sellBid",
      "offset": [
        8725,
        8731
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4479": {
      "fn": "pool.sellBid",
      "offset": [
        8725,
        8731
      ],
      "op": "LT",
      "path": "10"
    },
    "4480": {
      "fn": "pool.sellBid",
      "offset": [
        8725,
        8731
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x118B"
    },
    "4483": {
      "fn": "pool.sellBid",
      "offset": [
        8725,
        8731
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "4484": {
      "fn": "pool.sellBid",
      "offset": [
        8725,
        8731
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x118B"
    },
    "4487": {
      "fn": "pool.sellBid",
      "offset": [
        8725,
        8731
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x298B"
    },
    "4490": {
      "fn": "pool.sellBid",
      "jump": "i",
      "offset": [
        8725,
        8731
      ],
      "op": "JUMP",
      "path": "10"
    },
    "4491": {
      "fn": "pool.sellBid",
      "offset": [
        8725,
        8731
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4492": {
      "fn": "pool.sellBid",
      "offset": [
        8725,
        8731
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4493": {
      "fn": "pool.sellBid",
      "offset": [
        8725,
        8731
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "4495": {
      "fn": "pool.sellBid",
      "offset": [
        8725,
        8731
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4496": {
      "fn": "pool.sellBid",
      "offset": [
        8725,
        8731
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "4498": {
      "fn": "pool.sellBid",
      "offset": [
        8725,
        8731
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "4500": {
      "fn": "pool.sellBid",
      "offset": [
        8725,
        8731
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "4501": {
      "fn": "pool.sellBid",
      "offset": [
        8725,
        8731
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4502": {
      "fn": "pool.sellBid",
      "offset": [
        8725,
        8731
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "4504": {
      "fn": "pool.sellBid",
      "offset": [
        8725,
        8731
      ],
      "op": "MUL",
      "path": "10"
    },
    "4505": {
      "fn": "pool.sellBid",
      "offset": [
        8725,
        8731
      ],
      "op": "ADD",
      "path": "10"
    },
    "4506": {
      "fn": "pool.sellBid",
      "offset": [
        8725,
        8737
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "4508": {
      "fn": "pool.sellBid",
      "offset": [
        8725,
        8737
      ],
      "op": "ADD",
      "path": "10"
    },
    "4509": {
      "fn": "pool.sellBid",
      "offset": [
        8738,
        8739
      ],
      "op": "DUP4",
      "path": "10"
    },
    "4510": {
      "fn": "pool.sellBid",
      "offset": [
        8725,
        8740
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4511": {
      "fn": "pool.sellBid",
      "offset": [
        8725,
        8740
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "4512": {
      "fn": "pool.sellBid",
      "offset": [
        8725,
        8740
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4513": {
      "fn": "pool.sellBid",
      "offset": [
        8725,
        8740
      ],
      "op": "LT",
      "path": "10"
    },
    "4514": {
      "fn": "pool.sellBid",
      "offset": [
        8725,
        8740
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x11AD"
    },
    "4517": {
      "fn": "pool.sellBid",
      "offset": [
        8725,
        8740
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "4518": {
      "fn": "pool.sellBid",
      "offset": [
        8725,
        8740
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x11AD"
    },
    "4521": {
      "fn": "pool.sellBid",
      "offset": [
        8725,
        8740
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x298B"
    },
    "4524": {
      "fn": "pool.sellBid",
      "jump": "i",
      "offset": [
        8725,
        8740
      ],
      "op": "JUMP",
      "path": "10"
    },
    "4525": {
      "fn": "pool.sellBid",
      "offset": [
        8725,
        8740
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4526": {
      "fn": "pool.sellBid",
      "offset": [
        8725,
        8740
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4527": {
      "fn": "pool.sellBid",
      "offset": [
        8725,
        8740
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "4529": {
      "fn": "pool.sellBid",
      "offset": [
        8725,
        8740
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4530": {
      "fn": "pool.sellBid",
      "offset": [
        8725,
        8740
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "4532": {
      "fn": "pool.sellBid",
      "offset": [
        8725,
        8740
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "4534": {
      "fn": "pool.sellBid",
      "offset": [
        8725,
        8740
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "4535": {
      "fn": "pool.sellBid",
      "offset": [
        8725,
        8740
      ],
      "op": "ADD",
      "path": "10"
    },
    "4536": {
      "fn": "pool.sellBid",
      "offset": [
        8725,
        8740
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "4537": {
      "fn": "pool.sellBid",
      "offset": [
        8716,
        8741
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4538": {
      "fn": "pool.sellBid",
      "offset": [
        8716,
        8741
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "4539": {
      "fn": "pool.sellBid",
      "offset": [
        8716,
        8741
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4540": {
      "fn": "pool.sellBid",
      "offset": [
        8716,
        8741
      ],
      "op": "LT",
      "path": "10"
    },
    "4541": {
      "fn": "pool.sellBid",
      "offset": [
        8716,
        8741
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x11C8"
    },
    "4544": {
      "fn": "pool.sellBid",
      "offset": [
        8716,
        8741
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "4545": {
      "fn": "pool.sellBid",
      "offset": [
        8716,
        8741
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x11C8"
    },
    "4548": {
      "fn": "pool.sellBid",
      "offset": [
        8716,
        8741
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x298B"
    },
    "4551": {
      "fn": "pool.sellBid",
      "jump": "i",
      "offset": [
        8716,
        8741
      ],
      "op": "JUMP",
      "path": "10"
    },
    "4552": {
      "fn": "pool.sellBid",
      "offset": [
        8716,
        8741
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4553": {
      "fn": "pool.sellBid",
      "offset": [
        8716,
        8741
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4554": {
      "fn": "pool.sellBid",
      "offset": [
        8716,
        8741
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "4556": {
      "fn": "pool.sellBid",
      "offset": [
        8716,
        8741
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4557": {
      "fn": "pool.sellBid",
      "offset": [
        8716,
        8741
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "4559": {
      "fn": "pool.sellBid",
      "offset": [
        8716,
        8741
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "4561": {
      "fn": "pool.sellBid",
      "offset": [
        8716,
        8741
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "4562": {
      "fn": "pool.sellBid",
      "offset": [
        8716,
        8741
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4563": {
      "fn": "pool.sellBid",
      "offset": [
        8716,
        8741
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "4565": {
      "fn": "pool.sellBid",
      "offset": [
        8716,
        8741
      ],
      "op": "MUL",
      "path": "10"
    },
    "4566": {
      "fn": "pool.sellBid",
      "offset": [
        8716,
        8741
      ],
      "op": "ADD",
      "path": "10"
    },
    "4567": {
      "fn": "pool.sellBid",
      "offset": [
        8716,
        8746
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "4569": {
      "fn": "pool.sellBid",
      "offset": [
        8716,
        8746
      ],
      "op": "ADD",
      "path": "10"
    },
    "4570": {
      "fn": "pool.sellBid",
      "offset": [
        8716,
        8750
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4571": {
      "fn": "pool.sellBid",
      "offset": [
        8716,
        8750
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4572": {
      "fn": "pool.sellBid",
      "offset": [
        8716,
        8750
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "4573": {
      "fn": "pool.sellBid",
      "offset": [
        8716,
        8750
      ],
      "op": "POP",
      "path": "10"
    },
    "4574": {
      "fn": "pool.sellBid",
      "offset": [
        8836,
        8838
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 38,
      "value": "0x6"
    },
    "4576": {
      "fn": "pool.sellBid",
      "offset": [
        8839,
        8841
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x7"
    },
    "4578": {
      "fn": "pool.sellBid",
      "offset": [
        8839,
        8841
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "4579": {
      "fn": "pool.sellBid",
      "offset": [
        8836,
        8842
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4580": {
      "fn": "pool.sellBid",
      "offset": [
        8836,
        8842
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "4581": {
      "fn": "pool.sellBid",
      "offset": [
        8836,
        8842
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4582": {
      "fn": "pool.sellBid",
      "offset": [
        8836,
        8842
      ],
      "op": "LT",
      "path": "10"
    },
    "4583": {
      "fn": "pool.sellBid",
      "offset": [
        8836,
        8842
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x11F2"
    },
    "4586": {
      "fn": "pool.sellBid",
      "offset": [
        8836,
        8842
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "4587": {
      "fn": "pool.sellBid",
      "offset": [
        8836,
        8842
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x11F2"
    },
    "4590": {
      "fn": "pool.sellBid",
      "offset": [
        8836,
        8842
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x298B"
    },
    "4593": {
      "fn": "pool.sellBid",
      "jump": "i",
      "offset": [
        8836,
        8842
      ],
      "op": "JUMP",
      "path": "10"
    },
    "4594": {
      "fn": "pool.sellBid",
      "offset": [
        8836,
        8842
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4595": {
      "fn": "pool.sellBid",
      "offset": [
        8836,
        8842
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4596": {
      "fn": "pool.sellBid",
      "offset": [
        8836,
        8842
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "4598": {
      "fn": "pool.sellBid",
      "offset": [
        8836,
        8842
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4599": {
      "fn": "pool.sellBid",
      "offset": [
        8836,
        8842
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "4601": {
      "fn": "pool.sellBid",
      "offset": [
        8836,
        8842
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "4603": {
      "fn": "pool.sellBid",
      "offset": [
        8836,
        8842
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "4604": {
      "fn": "pool.sellBid",
      "offset": [
        8836,
        8842
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4605": {
      "fn": "pool.sellBid",
      "offset": [
        8836,
        8842
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "4607": {
      "fn": "pool.sellBid",
      "offset": [
        8836,
        8842
      ],
      "op": "MUL",
      "path": "10"
    },
    "4608": {
      "fn": "pool.sellBid",
      "offset": [
        8836,
        8842
      ],
      "op": "ADD",
      "path": "10"
    },
    "4609": {
      "fn": "pool.sellBid",
      "offset": [
        8836,
        8848
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "4611": {
      "fn": "pool.sellBid",
      "offset": [
        8836,
        8848
      ],
      "op": "ADD",
      "path": "10"
    },
    "4612": {
      "fn": "pool.sellBid",
      "offset": [
        8836,
        8854
      ],
      "op": "DUP1",
      "path": "10"
    },
    "4613": {
      "fn": "pool.sellBid",
      "offset": [
        8836,
        8854
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "4614": {
      "fn": "pool.sellBid",
      "offset": [
        8836,
        8854
      ],
      "op": "DUP1",
      "path": "10"
    },
    "4615": {
      "fn": "pool.sellBid",
      "offset": [
        8836,
        8854
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1212"
    },
    "4618": {
      "fn": "pool.sellBid",
      "offset": [
        8836,
        8854
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "4619": {
      "fn": "pool.sellBid",
      "offset": [
        8836,
        8854
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1212"
    },
    "4622": {
      "fn": "pool.sellBid",
      "offset": [
        8836,
        8854
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2A3F"
    },
    "4625": {
      "fn": "pool.sellBid",
      "jump": "i",
      "offset": [
        8836,
        8854
      ],
      "op": "JUMP",
      "path": "10"
    },
    "4626": {
      "fn": "pool.sellBid",
      "offset": [
        8836,
        8854
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4627": {
      "fn": "pool.sellBid",
      "offset": [
        8836,
        8854
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "4629": {
      "fn": "pool.sellBid",
      "offset": [
        8836,
        8854
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4630": {
      "fn": "pool.sellBid",
      "offset": [
        8836,
        8854
      ],
      "op": "SUB",
      "path": "10"
    },
    "4631": {
      "fn": "pool.sellBid",
      "offset": [
        8836,
        8854
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4632": {
      "fn": "pool.sellBid",
      "offset": [
        8836,
        8854
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4633": {
      "fn": "pool.sellBid",
      "offset": [
        8836,
        8854
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4634": {
      "fn": "pool.sellBid",
      "offset": [
        8836,
        8854
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "4636": {
      "fn": "pool.sellBid",
      "offset": [
        8836,
        8854
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4637": {
      "fn": "pool.sellBid",
      "offset": [
        8836,
        8854
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "4639": {
      "fn": "pool.sellBid",
      "offset": [
        8836,
        8854
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "4641": {
      "fn": "pool.sellBid",
      "offset": [
        8836,
        8854
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "4642": {
      "fn": "pool.sellBid",
      "offset": [
        8836,
        8854
      ],
      "op": "ADD",
      "path": "10"
    },
    "4643": {
      "fn": "pool.sellBid",
      "offset": [
        8836,
        8854
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "4645": {
      "fn": "pool.sellBid",
      "offset": [
        8836,
        8854
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4646": {
      "fn": "pool.sellBid",
      "offset": [
        8836,
        8854
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "4647": {
      "fn": "pool.sellBid",
      "offset": [
        8836,
        8854
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4648": {
      "fn": "pool.sellBid",
      "offset": [
        8836,
        8854
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "4649": {
      "fn": "pool.sellBid",
      "offset": [
        8882,
        8891
      ],
      "op": "DUP2",
      "path": "10",
      "statement": 39
    },
    "4650": {
      "fn": "pool.sellBid",
      "offset": [
        8872,
        8891
      ],
      "op": "DUP5",
      "path": "10"
    },
    "4651": {
      "fn": "pool.sellBid",
      "offset": [
        8872,
        8891
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1234"
    },
    "4654": {
      "fn": "pool.sellBid",
      "offset": [
        8872,
        8891
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "4655": {
      "fn": "pool.sellBid",
      "offset": [
        8872,
        8891
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4656": {
      "fn": "pool.sellBid",
      "offset": [
        8872,
        8891
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x29A1"
    },
    "4659": {
      "fn": "pool.sellBid",
      "jump": "i",
      "offset": [
        8872,
        8891
      ],
      "op": "JUMP",
      "path": "10"
    },
    "4660": {
      "fn": "pool.sellBid",
      "offset": [
        8872,
        8891
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4661": {
      "fn": "pool.sellBid",
      "offset": [
        8872,
        8891
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "4662": {
      "fn": "pool.sellBid",
      "offset": [
        8872,
        8891
      ],
      "op": "POP",
      "path": "10"
    },
    "4663": {
      "fn": "pool.sellBid",
      "offset": [
        8155,
        9519
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x15B3"
    },
    "4666": {
      "fn": "pool.sellBid",
      "offset": [
        8155,
        9519
      ],
      "op": "JUMP",
      "path": "10"
    },
    "4667": {
      "fn": "pool.sellBid",
      "offset": [
        8155,
        9519
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4668": {
      "fn": "pool.sellBid",
      "offset": [
        8972,
        8974
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 40,
      "value": "0x7"
    },
    "4670": {
      "fn": "pool.sellBid",
      "offset": [
        8972,
        8974
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "4671": {
      "fn": "pool.sellBid",
      "offset": [
        8962,
        9001
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "4673": {
      "fn": "pool.sellBid",
      "offset": [
        8967,
        8975
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4674": {
      "fn": "pool.sellBid",
      "offset": [
        8967,
        8975
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4675": {
      "fn": "pool.sellBid",
      "offset": [
        8967,
        8975
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4676": {
      "fn": "pool.sellBid",
      "offset": [
        8967,
        8971
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "4678": {
      "fn": "pool.sellBid",
      "offset": [
        8967,
        8975
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "4680": {
      "fn": "pool.sellBid",
      "offset": [
        8967,
        8975
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4681": {
      "fn": "pool.sellBid",
      "offset": [
        8967,
        8975
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "4683": {
      "fn": "pool.sellBid",
      "offset": [
        8967,
        8975
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4684": {
      "fn": "pool.sellBid",
      "offset": [
        8967,
        8975
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "4685": {
      "fn": "pool.sellBid",
      "offset": [
        8976,
        8978
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x6"
    },
    "4687": {
      "fn": "pool.sellBid",
      "offset": [
        8976,
        8982
      ],
      "op": "DUP1",
      "path": "10"
    },
    "4688": {
      "fn": "pool.sellBid",
      "offset": [
        8976,
        8982
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "4689": {
      "fn": "pool.sellBid",
      "offset": [
        9014,
        9020
      ],
      "op": "DUP9",
      "path": "10"
    },
    "4690": {
      "fn": "pool.sellBid",
      "offset": [
        9014,
        9020
      ],
      "op": "SWAP5",
      "path": "10"
    },
    "4691": {
      "fn": "pool.sellBid",
      "offset": [
        8962,
        8966
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x5"
    },
    "4693": {
      "fn": "pool.sellBid",
      "offset": [
        8962,
        8966
      ],
      "op": "SWAP5",
      "path": "10"
    },
    "4694": {
      "fn": "pool.sellBid",
      "offset": [
        8962,
        9001
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "4695": {
      "fn": "pool.sellBid",
      "offset": [
        8967,
        8975
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "4696": {
      "fn": "pool.sellBid",
      "offset": [
        8976,
        8978
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "4697": {
      "fn": "pool.sellBid",
      "offset": [
        8976,
        8982
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4698": {
      "fn": "pool.sellBid",
      "offset": [
        8976,
        8982
      ],
      "op": "LT",
      "path": "10"
    },
    "4699": {
      "fn": "pool.sellBid",
      "offset": [
        8976,
        8982
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1266"
    },
    "4702": {
      "fn": "pool.sellBid",
      "offset": [
        8976,
        8982
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "4703": {
      "fn": "pool.sellBid",
      "offset": [
        8976,
        8982
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1266"
    },
    "4706": {
      "fn": "pool.sellBid",
      "offset": [
        8976,
        8982
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x298B"
    },
    "4709": {
      "fn": "pool.sellBid",
      "jump": "i",
      "offset": [
        8976,
        8982
      ],
      "op": "JUMP",
      "path": "10"
    },
    "4710": {
      "fn": "pool.sellBid",
      "offset": [
        8976,
        8982
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4711": {
      "fn": "pool.sellBid",
      "offset": [
        8976,
        8982
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4712": {
      "fn": "pool.sellBid",
      "offset": [
        8976,
        8982
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "4714": {
      "fn": "pool.sellBid",
      "offset": [
        8976,
        8982
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4715": {
      "fn": "pool.sellBid",
      "offset": [
        8976,
        8982
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "4717": {
      "fn": "pool.sellBid",
      "offset": [
        8976,
        8982
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "4719": {
      "fn": "pool.sellBid",
      "offset": [
        8976,
        8982
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "4720": {
      "fn": "pool.sellBid",
      "offset": [
        8976,
        8982
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4721": {
      "fn": "pool.sellBid",
      "offset": [
        8976,
        8982
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "4723": {
      "fn": "pool.sellBid",
      "offset": [
        8976,
        8982
      ],
      "op": "MUL",
      "path": "10"
    },
    "4724": {
      "fn": "pool.sellBid",
      "offset": [
        8976,
        8982
      ],
      "op": "ADD",
      "path": "10"
    },
    "4725": {
      "fn": "pool.sellBid",
      "offset": [
        8976,
        8988
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "4727": {
      "fn": "pool.sellBid",
      "offset": [
        8976,
        8988
      ],
      "op": "ADD",
      "path": "10"
    },
    "4728": {
      "fn": "pool.sellBid",
      "offset": [
        8989,
        8990
      ],
      "op": "DUP6",
      "path": "10"
    },
    "4729": {
      "fn": "pool.sellBid",
      "offset": [
        8976,
        8991
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4730": {
      "fn": "pool.sellBid",
      "offset": [
        8976,
        8991
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "4731": {
      "fn": "pool.sellBid",
      "offset": [
        8976,
        8991
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4732": {
      "fn": "pool.sellBid",
      "offset": [
        8976,
        8991
      ],
      "op": "LT",
      "path": "10"
    },
    "4733": {
      "fn": "pool.sellBid",
      "offset": [
        8976,
        8991
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1288"
    },
    "4736": {
      "fn": "pool.sellBid",
      "offset": [
        8976,
        8991
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "4737": {
      "fn": "pool.sellBid",
      "offset": [
        8976,
        8991
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1288"
    },
    "4740": {
      "fn": "pool.sellBid",
      "offset": [
        8976,
        8991
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x298B"
    },
    "4743": {
      "fn": "pool.sellBid",
      "jump": "i",
      "offset": [
        8976,
        8991
      ],
      "op": "JUMP",
      "path": "10"
    },
    "4744": {
      "fn": "pool.sellBid",
      "offset": [
        8976,
        8991
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4745": {
      "fn": "pool.sellBid",
      "offset": [
        8976,
        8991
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4746": {
      "fn": "pool.sellBid",
      "offset": [
        8976,
        8991
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "4748": {
      "fn": "pool.sellBid",
      "offset": [
        8976,
        8991
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4749": {
      "fn": "pool.sellBid",
      "offset": [
        8976,
        8991
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "4751": {
      "fn": "pool.sellBid",
      "offset": [
        8976,
        8991
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "4753": {
      "fn": "pool.sellBid",
      "offset": [
        8976,
        8991
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "4754": {
      "fn": "pool.sellBid",
      "offset": [
        8976,
        8991
      ],
      "op": "ADD",
      "path": "10"
    },
    "4755": {
      "fn": "pool.sellBid",
      "offset": [
        8976,
        8991
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "4756": {
      "fn": "pool.sellBid",
      "offset": [
        8967,
        8992
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4757": {
      "fn": "pool.sellBid",
      "offset": [
        8967,
        8992
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "4758": {
      "fn": "pool.sellBid",
      "offset": [
        8967,
        8992
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4759": {
      "fn": "pool.sellBid",
      "offset": [
        8967,
        8992
      ],
      "op": "LT",
      "path": "10"
    },
    "4760": {
      "fn": "pool.sellBid",
      "offset": [
        8967,
        8992
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x12A3"
    },
    "4763": {
      "fn": "pool.sellBid",
      "offset": [
        8967,
        8992
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "4764": {
      "fn": "pool.sellBid",
      "offset": [
        8967,
        8992
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x12A3"
    },
    "4767": {
      "fn": "pool.sellBid",
      "offset": [
        8967,
        8992
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x298B"
    },
    "4770": {
      "fn": "pool.sellBid",
      "jump": "i",
      "offset": [
        8967,
        8992
      ],
      "op": "JUMP",
      "path": "10"
    },
    "4771": {
      "fn": "pool.sellBid",
      "offset": [
        8967,
        8992
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4772": {
      "fn": "pool.sellBid",
      "offset": [
        8967,
        8992
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "4774": {
      "fn": "pool.sellBid",
      "offset": [
        8967,
        8992
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "4775": {
      "fn": "pool.sellBid",
      "offset": [
        8967,
        8992
      ],
      "op": "DUP3",
      "path": "10"
    },
    "4776": {
      "fn": "pool.sellBid",
      "offset": [
        8967,
        8992
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4777": {
      "fn": "pool.sellBid",
      "offset": [
        8967,
        8992
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "4779": {
      "fn": "pool.sellBid",
      "offset": [
        8967,
        8992
      ],
      "op": "DUP1",
      "path": "10"
    },
    "4780": {
      "fn": "pool.sellBid",
      "offset": [
        8967,
        8992
      ],
      "op": "DUP4",
      "path": "10"
    },
    "4781": {
      "fn": "pool.sellBid",
      "offset": [
        8967,
        8992
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "4782": {
      "fn": "pool.sellBid",
      "offset": [
        8967,
        9000
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x2"
    },
    "4784": {
      "fn": "pool.sellBid",
      "offset": [
        8967,
        8992
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "4786": {
      "fn": "pool.sellBid",
      "offset": [
        8967,
        8992
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4787": {
      "fn": "pool.sellBid",
      "offset": [
        8967,
        8992
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "4788": {
      "fn": "pool.sellBid",
      "offset": [
        8967,
        8992
      ],
      "op": "MUL",
      "path": "10"
    },
    "4789": {
      "fn": "pool.sellBid",
      "offset": [
        8967,
        8992
      ],
      "op": "ADD",
      "path": "10"
    },
    "4790": {
      "fn": "pool.sellBid",
      "offset": [
        8967,
        9000
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "4791": {
      "fn": "pool.sellBid",
      "offset": [
        8967,
        9000
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4792": {
      "fn": "pool.sellBid",
      "offset": [
        8967,
        9000
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "4793": {
      "fn": "pool.sellBid",
      "offset": [
        8967,
        9000
      ],
      "op": "ADD",
      "path": "10"
    },
    "4794": {
      "fn": "pool.sellBid",
      "offset": [
        8967,
        9000
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "4795": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4797": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4799": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4801": {
      "op": "SHL"
    },
    "4802": {
      "op": "SUB"
    },
    "4803": {
      "fn": "pool.sellBid",
      "offset": [
        8967,
        9000
      ],
      "op": "AND",
      "path": "10"
    },
    "4804": {
      "fn": "pool.sellBid",
      "offset": [
        8962,
        9001
      ],
      "op": "DUP4",
      "path": "10"
    },
    "4805": {
      "fn": "pool.sellBid",
      "offset": [
        8962,
        9001
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4806": {
      "fn": "pool.sellBid",
      "offset": [
        8962,
        9001
      ],
      "op": "DUP3",
      "path": "10"
    },
    "4807": {
      "fn": "pool.sellBid",
      "offset": [
        8962,
        9001
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4808": {
      "fn": "pool.sellBid",
      "offset": [
        8962,
        9001
      ],
      "op": "ADD",
      "path": "10"
    },
    "4809": {
      "fn": "pool.sellBid",
      "offset": [
        8962,
        9001
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "4810": {
      "fn": "pool.sellBid",
      "offset": [
        8962,
        9001
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4811": {
      "fn": "pool.sellBid",
      "offset": [
        8962,
        9001
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "4812": {
      "fn": "pool.sellBid",
      "offset": [
        8962,
        9001
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4813": {
      "fn": "pool.sellBid",
      "offset": [
        8962,
        9001
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "4815": {
      "fn": "pool.sellBid",
      "offset": [
        8962,
        9001
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "4816": {
      "fn": "pool.sellBid",
      "offset": [
        8962,
        9001
      ],
      "op": "DUP3",
      "path": "10"
    },
    "4817": {
      "fn": "pool.sellBid",
      "offset": [
        8962,
        9001
      ],
      "op": "ADD",
      "path": "10"
    },
    "4818": {
      "fn": "pool.sellBid",
      "offset": [
        8962,
        9001
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4819": {
      "fn": "pool.sellBid",
      "offset": [
        8962,
        9001
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "4820": {
      "fn": "pool.sellBid",
      "offset": [
        9002,
        9004
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x7"
    },
    "4822": {
      "fn": "pool.sellBid",
      "offset": [
        9002,
        9004
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "4823": {
      "fn": "pool.sellBid",
      "offset": [
        8962,
        9005
      ],
      "op": "DUP3",
      "path": "10"
    },
    "4824": {
      "fn": "pool.sellBid",
      "offset": [
        8962,
        9005
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4825": {
      "fn": "pool.sellBid",
      "offset": [
        8962,
        9005
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4826": {
      "fn": "pool.sellBid",
      "offset": [
        8962,
        9005
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "4827": {
      "fn": "pool.sellBid",
      "offset": [
        8962,
        9005
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4828": {
      "fn": "pool.sellBid",
      "offset": [
        8962,
        9005
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4829": {
      "fn": "pool.sellBid",
      "offset": [
        8962,
        9005
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "4830": {
      "fn": "pool.sellBid",
      "offset": [
        8962,
        9020
      ],
      "op": "DUP1",
      "path": "10"
    },
    "4831": {
      "fn": "pool.sellBid",
      "offset": [
        8962,
        9020
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "4832": {
      "fn": "pool.sellBid",
      "offset": [
        8962,
        9005
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4833": {
      "fn": "pool.sellBid",
      "offset": [
        8962,
        9005
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "4834": {
      "fn": "pool.sellBid",
      "offset": [
        8967,
        8992
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4835": {
      "fn": "pool.sellBid",
      "offset": [
        8962,
        9020
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x12ED"
    },
    "4838": {
      "fn": "pool.sellBid",
      "offset": [
        8962,
        9020
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4839": {
      "fn": "pool.sellBid",
      "offset": [
        8962,
        9020
      ],
      "op": "DUP5",
      "path": "10"
    },
    "4840": {
      "fn": "pool.sellBid",
      "offset": [
        8962,
        9020
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4841": {
      "fn": "pool.sellBid",
      "offset": [
        8962,
        9020
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2973"
    },
    "4844": {
      "fn": "pool.sellBid",
      "jump": "i",
      "offset": [
        8962,
        9020
      ],
      "op": "JUMP",
      "path": "10"
    },
    "4845": {
      "fn": "pool.sellBid",
      "offset": [
        8962,
        9020
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4846": {
      "fn": "pool.sellBid",
      "offset": [
        8962,
        9020
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "4847": {
      "fn": "pool.sellBid",
      "offset": [
        8962,
        9020
      ],
      "op": "POP",
      "path": "10"
    },
    "4848": {
      "fn": "pool.sellBid",
      "offset": [
        8962,
        9020
      ],
      "op": "POP",
      "path": "10"
    },
    "4849": {
      "fn": "pool.sellBid",
      "offset": [
        8962,
        9020
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4850": {
      "fn": "pool.sellBid",
      "offset": [
        8962,
        9020
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4851": {
      "fn": "pool.sellBid",
      "offset": [
        8962,
        9020
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "4852": {
      "fn": "pool.sellBid",
      "offset": [
        8962,
        9020
      ],
      "op": "POP",
      "path": "10"
    },
    "4853": {
      "fn": "pool.sellBid",
      "offset": [
        9186,
        9188
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 41,
      "value": "0x6"
    },
    "4855": {
      "fn": "pool.sellBid",
      "offset": [
        9189,
        9191
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x7"
    },
    "4857": {
      "fn": "pool.sellBid",
      "offset": [
        9189,
        9191
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "4858": {
      "fn": "pool.sellBid",
      "offset": [
        9186,
        9192
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4859": {
      "fn": "pool.sellBid",
      "offset": [
        9186,
        9192
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "4860": {
      "fn": "pool.sellBid",
      "offset": [
        9186,
        9192
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4861": {
      "fn": "pool.sellBid",
      "offset": [
        9186,
        9192
      ],
      "op": "LT",
      "path": "10"
    },
    "4862": {
      "fn": "pool.sellBid",
      "offset": [
        9186,
        9192
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1309"
    },
    "4865": {
      "fn": "pool.sellBid",
      "offset": [
        9186,
        9192
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "4866": {
      "fn": "pool.sellBid",
      "offset": [
        9186,
        9192
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1309"
    },
    "4869": {
      "fn": "pool.sellBid",
      "offset": [
        9186,
        9192
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x298B"
    },
    "4872": {
      "fn": "pool.sellBid",
      "jump": "i",
      "offset": [
        9186,
        9192
      ],
      "op": "JUMP",
      "path": "10"
    },
    "4873": {
      "fn": "pool.sellBid",
      "offset": [
        9186,
        9192
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4874": {
      "fn": "pool.sellBid",
      "offset": [
        9186,
        9192
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4875": {
      "fn": "pool.sellBid",
      "offset": [
        9186,
        9192
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "4877": {
      "fn": "pool.sellBid",
      "offset": [
        9186,
        9192
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4878": {
      "fn": "pool.sellBid",
      "offset": [
        9186,
        9192
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "4880": {
      "fn": "pool.sellBid",
      "offset": [
        9186,
        9192
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "4882": {
      "fn": "pool.sellBid",
      "offset": [
        9186,
        9192
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "4883": {
      "fn": "pool.sellBid",
      "offset": [
        9186,
        9192
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4884": {
      "fn": "pool.sellBid",
      "offset": [
        9186,
        9192
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "4886": {
      "fn": "pool.sellBid",
      "offset": [
        9186,
        9192
      ],
      "op": "MUL",
      "path": "10"
    },
    "4887": {
      "fn": "pool.sellBid",
      "offset": [
        9186,
        9192
      ],
      "op": "ADD",
      "path": "10"
    },
    "4888": {
      "fn": "pool.sellBid",
      "offset": [
        9186,
        9199
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "4890": {
      "fn": "pool.sellBid",
      "offset": [
        9186,
        9199
      ],
      "op": "ADD",
      "path": "10"
    },
    "4891": {
      "fn": "pool.sellBid",
      "offset": [
        9186,
        9199
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "4892": {
      "fn": "pool.sellBid",
      "offset": [
        9151,
        9155
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "4894": {
      "fn": "pool.sellBid",
      "offset": [
        9151,
        9159
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "4896": {
      "fn": "pool.sellBid",
      "offset": [
        9156,
        9158
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x7"
    },
    "4898": {
      "fn": "pool.sellBid",
      "offset": [
        9156,
        9158
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "4899": {
      "fn": "pool.sellBid",
      "offset": [
        9151,
        9159
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4900": {
      "fn": "pool.sellBid",
      "offset": [
        9151,
        9159
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4901": {
      "fn": "pool.sellBid",
      "offset": [
        9151,
        9159
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "4903": {
      "fn": "pool.sellBid",
      "offset": [
        9151,
        9159
      ],
      "op": "ADD",
      "path": "10"
    },
    "4904": {
      "fn": "pool.sellBid",
      "offset": [
        9151,
        9159
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4905": {
      "fn": "pool.sellBid",
      "offset": [
        9151,
        9159
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4906": {
      "fn": "pool.sellBid",
      "offset": [
        9151,
        9159
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4907": {
      "fn": "pool.sellBid",
      "offset": [
        9151,
        9159
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "4909": {
      "fn": "pool.sellBid",
      "offset": [
        9151,
        9159
      ],
      "op": "ADD",
      "path": "10"
    },
    "4910": {
      "fn": "pool.sellBid",
      "offset": [
        9151,
        9159
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "4912": {
      "fn": "pool.sellBid",
      "offset": [
        9151,
        9159
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "4913": {
      "fn": "pool.sellBid",
      "offset": [
        9160,
        9162
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x6"
    },
    "4915": {
      "fn": "pool.sellBid",
      "offset": [
        9163,
        9165
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x7"
    },
    "4917": {
      "fn": "pool.sellBid",
      "offset": [
        9163,
        9165
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "4918": {
      "fn": "pool.sellBid",
      "offset": [
        9160,
        9166
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4919": {
      "fn": "pool.sellBid",
      "offset": [
        9160,
        9166
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "4920": {
      "fn": "pool.sellBid",
      "offset": [
        9160,
        9166
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4921": {
      "fn": "pool.sellBid",
      "offset": [
        9160,
        9166
      ],
      "op": "LT",
      "path": "10"
    },
    "4922": {
      "fn": "pool.sellBid",
      "offset": [
        9160,
        9166
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1345"
    },
    "4925": {
      "fn": "pool.sellBid",
      "offset": [
        9160,
        9166
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "4926": {
      "fn": "pool.sellBid",
      "offset": [
        9160,
        9166
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1345"
    },
    "4929": {
      "fn": "pool.sellBid",
      "offset": [
        9160,
        9166
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x298B"
    },
    "4932": {
      "fn": "pool.sellBid",
      "jump": "i",
      "offset": [
        9160,
        9166
      ],
      "op": "JUMP",
      "path": "10"
    },
    "4933": {
      "fn": "pool.sellBid",
      "offset": [
        9160,
        9166
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4934": {
      "fn": "pool.sellBid",
      "offset": [
        9160,
        9166
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4935": {
      "fn": "pool.sellBid",
      "offset": [
        9160,
        9166
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "4937": {
      "fn": "pool.sellBid",
      "offset": [
        9160,
        9166
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4938": {
      "fn": "pool.sellBid",
      "offset": [
        9160,
        9166
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "4940": {
      "fn": "pool.sellBid",
      "offset": [
        9160,
        9166
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "4942": {
      "fn": "pool.sellBid",
      "offset": [
        9160,
        9166
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "4943": {
      "fn": "pool.sellBid",
      "offset": [
        9160,
        9166
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4944": {
      "fn": "pool.sellBid",
      "offset": [
        9160,
        9166
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "4946": {
      "fn": "pool.sellBid",
      "offset": [
        9160,
        9166
      ],
      "op": "MUL",
      "path": "10"
    },
    "4947": {
      "fn": "pool.sellBid",
      "offset": [
        9160,
        9166
      ],
      "op": "ADD",
      "path": "10"
    },
    "4948": {
      "fn": "pool.sellBid",
      "offset": [
        9160,
        9172
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "4950": {
      "fn": "pool.sellBid",
      "offset": [
        9160,
        9172
      ],
      "op": "ADD",
      "path": "10"
    },
    "4951": {
      "fn": "pool.sellBid",
      "offset": [
        9173,
        9174
      ],
      "op": "DUP4",
      "path": "10"
    },
    "4952": {
      "fn": "pool.sellBid",
      "offset": [
        9160,
        9175
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4953": {
      "fn": "pool.sellBid",
      "offset": [
        9160,
        9175
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "4954": {
      "fn": "pool.sellBid",
      "offset": [
        9160,
        9175
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4955": {
      "fn": "pool.sellBid",
      "offset": [
        9160,
        9175
      ],
      "op": "LT",
      "path": "10"
    },
    "4956": {
      "fn": "pool.sellBid",
      "offset": [
        9160,
        9175
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1367"
    },
    "4959": {
      "fn": "pool.sellBid",
      "offset": [
        9160,
        9175
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "4960": {
      "fn": "pool.sellBid",
      "offset": [
        9160,
        9175
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1367"
    },
    "4963": {
      "fn": "pool.sellBid",
      "offset": [
        9160,
        9175
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x298B"
    },
    "4966": {
      "fn": "pool.sellBid",
      "jump": "i",
      "offset": [
        9160,
        9175
      ],
      "op": "JUMP",
      "path": "10"
    },
    "4967": {
      "fn": "pool.sellBid",
      "offset": [
        9160,
        9175
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4968": {
      "fn": "pool.sellBid",
      "offset": [
        9160,
        9175
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4969": {
      "fn": "pool.sellBid",
      "offset": [
        9160,
        9175
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "4971": {
      "fn": "pool.sellBid",
      "offset": [
        9160,
        9175
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4972": {
      "fn": "pool.sellBid",
      "offset": [
        9160,
        9175
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "4974": {
      "fn": "pool.sellBid",
      "offset": [
        9160,
        9175
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "4976": {
      "fn": "pool.sellBid",
      "offset": [
        9160,
        9175
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "4977": {
      "fn": "pool.sellBid",
      "offset": [
        9160,
        9175
      ],
      "op": "ADD",
      "path": "10"
    },
    "4978": {
      "fn": "pool.sellBid",
      "offset": [
        9160,
        9175
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "4979": {
      "fn": "pool.sellBid",
      "offset": [
        9151,
        9176
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4980": {
      "fn": "pool.sellBid",
      "offset": [
        9151,
        9176
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "4981": {
      "fn": "pool.sellBid",
      "offset": [
        9151,
        9176
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4982": {
      "fn": "pool.sellBid",
      "offset": [
        9151,
        9176
      ],
      "op": "LT",
      "path": "10"
    },
    "4983": {
      "fn": "pool.sellBid",
      "offset": [
        9151,
        9176
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1382"
    },
    "4986": {
      "fn": "pool.sellBid",
      "offset": [
        9151,
        9176
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "4987": {
      "fn": "pool.sellBid",
      "offset": [
        9151,
        9176
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1382"
    },
    "4990": {
      "fn": "pool.sellBid",
      "offset": [
        9151,
        9176
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x298B"
    },
    "4993": {
      "fn": "pool.sellBid",
      "jump": "i",
      "offset": [
        9151,
        9176
      ],
      "op": "JUMP",
      "path": "10"
    },
    "4994": {
      "fn": "pool.sellBid",
      "offset": [
        9151,
        9176
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4995": {
      "fn": "pool.sellBid",
      "offset": [
        9151,
        9176
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4996": {
      "fn": "pool.sellBid",
      "offset": [
        9151,
        9176
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "4998": {
      "fn": "pool.sellBid",
      "offset": [
        9151,
        9176
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4999": {
      "fn": "pool.sellBid",
      "offset": [
        9151,
        9176
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "5001": {
      "fn": "pool.sellBid",
      "offset": [
        9151,
        9176
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "5003": {
      "fn": "pool.sellBid",
      "offset": [
        9151,
        9176
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "5004": {
      "fn": "pool.sellBid",
      "offset": [
        9151,
        9176
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5005": {
      "fn": "pool.sellBid",
      "offset": [
        9151,
        9176
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "5007": {
      "fn": "pool.sellBid",
      "offset": [
        9151,
        9176
      ],
      "op": "MUL",
      "path": "10"
    },
    "5008": {
      "fn": "pool.sellBid",
      "offset": [
        9151,
        9176
      ],
      "op": "ADD",
      "path": "10"
    },
    "5009": {
      "fn": "pool.sellBid",
      "offset": [
        9151,
        9182
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "5011": {
      "fn": "pool.sellBid",
      "offset": [
        9151,
        9182
      ],
      "op": "ADD",
      "path": "10"
    },
    "5012": {
      "fn": "pool.sellBid",
      "offset": [
        9151,
        9182
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "5013": {
      "fn": "pool.sellBid",
      "offset": [
        9122,
        9128
      ],
      "op": "DUP6",
      "path": "10"
    },
    "5014": {
      "fn": "pool.sellBid",
      "offset": [
        9122,
        9182
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x139F"
    },
    "5017": {
      "fn": "pool.sellBid",
      "offset": [
        9122,
        9182
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "5018": {
      "fn": "pool.sellBid",
      "offset": [
        9122,
        9182
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5019": {
      "fn": "pool.sellBid",
      "offset": [
        9122,
        9182
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x29FE"
    },
    "5022": {
      "fn": "pool.sellBid",
      "jump": "i",
      "offset": [
        9122,
        9182
      ],
      "op": "JUMP",
      "path": "10"
    },
    "5023": {
      "fn": "pool.sellBid",
      "offset": [
        9122,
        9182
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "5024": {
      "fn": "pool.sellBid",
      "offset": [
        9121,
        9199
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x13A9"
    },
    "5027": {
      "fn": "pool.sellBid",
      "offset": [
        9121,
        9199
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "5028": {
      "fn": "pool.sellBid",
      "offset": [
        9121,
        9199
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5029": {
      "fn": "pool.sellBid",
      "offset": [
        9121,
        9199
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2A1D"
    },
    "5032": {
      "fn": "pool.sellBid",
      "jump": "i",
      "offset": [
        9121,
        9199
      ],
      "op": "JUMP",
      "path": "10"
    },
    "5033": {
      "fn": "pool.sellBid",
      "offset": [
        9121,
        9199
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "5034": {
      "fn": "pool.sellBid",
      "offset": [
        9048,
        9050
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x7"
    },
    "5036": {
      "fn": "pool.sellBid",
      "offset": [
        9048,
        9050
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "5037": {
      "fn": "pool.sellBid",
      "offset": [
        9038,
        9077
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "5039": {
      "fn": "pool.sellBid",
      "offset": [
        9043,
        9051
      ],
      "op": "DUP2",
      "path": "10"
    },
    "5040": {
      "fn": "pool.sellBid",
      "offset": [
        9043,
        9051
      ],
      "op": "DUP2",
      "path": "10"
    },
    "5041": {
      "fn": "pool.sellBid",
      "offset": [
        9043,
        9051
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "5042": {
      "fn": "pool.sellBid",
      "offset": [
        9043,
        9047
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "5044": {
      "fn": "pool.sellBid",
      "offset": [
        9043,
        9051
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "5046": {
      "fn": "pool.sellBid",
      "offset": [
        9043,
        9051
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "5047": {
      "fn": "pool.sellBid",
      "offset": [
        9043,
        9051
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "5049": {
      "fn": "pool.sellBid",
      "offset": [
        9043,
        9051
      ],
      "op": "DUP2",
      "path": "10"
    },
    "5050": {
      "fn": "pool.sellBid",
      "offset": [
        9043,
        9051
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "5051": {
      "fn": "pool.sellBid",
      "offset": [
        9052,
        9054
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x6"
    },
    "5053": {
      "fn": "pool.sellBid",
      "offset": [
        9052,
        9058
      ],
      "op": "DUP1",
      "path": "10"
    },
    "5054": {
      "fn": "pool.sellBid",
      "offset": [
        9052,
        9058
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "5055": {
      "fn": "pool.sellBid",
      "offset": [
        9038,
        9042
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x5"
    },
    "5057": {
      "fn": "pool.sellBid",
      "offset": [
        9038,
        9042
      ],
      "op": "SWAP5",
      "path": "10"
    },
    "5058": {
      "fn": "pool.sellBid",
      "offset": [
        9048,
        9050
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5059": {
      "fn": "pool.sellBid",
      "offset": [
        9052,
        9058
      ],
      "op": "DUP2",
      "path": "10"
    },
    "5060": {
      "fn": "pool.sellBid",
      "offset": [
        9052,
        9058
      ],
      "op": "LT",
      "path": "10"
    },
    "5061": {
      "fn": "pool.sellBid",
      "offset": [
        9052,
        9058
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x13D0"
    },
    "5064": {
      "fn": "pool.sellBid",
      "offset": [
        9052,
        9058
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "5065": {
      "fn": "pool.sellBid",
      "offset": [
        9052,
        9058
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x13D0"
    },
    "5068": {
      "fn": "pool.sellBid",
      "offset": [
        9052,
        9058
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x298B"
    },
    "5071": {
      "fn": "pool.sellBid",
      "jump": "i",
      "offset": [
        9052,
        9058
      ],
      "op": "JUMP",
      "path": "10"
    },
    "5072": {
      "fn": "pool.sellBid",
      "offset": [
        9052,
        9058
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "5073": {
      "fn": "pool.sellBid",
      "offset": [
        9052,
        9058
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5074": {
      "fn": "pool.sellBid",
      "offset": [
        9052,
        9058
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "5076": {
      "fn": "pool.sellBid",
      "offset": [
        9052,
        9058
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "5077": {
      "fn": "pool.sellBid",
      "offset": [
        9052,
        9058
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "5079": {
      "fn": "pool.sellBid",
      "offset": [
        9052,
        9058
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "5081": {
      "fn": "pool.sellBid",
      "offset": [
        9052,
        9058
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "5082": {
      "fn": "pool.sellBid",
      "offset": [
        9052,
        9058
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5083": {
      "fn": "pool.sellBid",
      "offset": [
        9052,
        9058
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "5085": {
      "fn": "pool.sellBid",
      "offset": [
        9052,
        9058
      ],
      "op": "MUL",
      "path": "10"
    },
    "5086": {
      "fn": "pool.sellBid",
      "offset": [
        9052,
        9058
      ],
      "op": "ADD",
      "path": "10"
    },
    "5087": {
      "fn": "pool.sellBid",
      "offset": [
        9052,
        9064
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "5089": {
      "fn": "pool.sellBid",
      "offset": [
        9052,
        9064
      ],
      "op": "ADD",
      "path": "10"
    },
    "5090": {
      "fn": "pool.sellBid",
      "offset": [
        9065,
        9066
      ],
      "op": "DUP6",
      "path": "10"
    },
    "5091": {
      "fn": "pool.sellBid",
      "offset": [
        9052,
        9067
      ],
      "op": "DUP2",
      "path": "10"
    },
    "5092": {
      "fn": "pool.sellBid",
      "offset": [
        9052,
        9067
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "5093": {
      "fn": "pool.sellBid",
      "offset": [
        9052,
        9067
      ],
      "op": "DUP2",
      "path": "10"
    },
    "5094": {
      "fn": "pool.sellBid",
      "offset": [
        9052,
        9067
      ],
      "op": "LT",
      "path": "10"
    },
    "5095": {
      "fn": "pool.sellBid",
      "offset": [
        9052,
        9067
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x13F2"
    },
    "5098": {
      "fn": "pool.sellBid",
      "offset": [
        9052,
        9067
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "5099": {
      "fn": "pool.sellBid",
      "offset": [
        9052,
        9067
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x13F2"
    },
    "5102": {
      "fn": "pool.sellBid",
      "offset": [
        9052,
        9067
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x298B"
    },
    "5105": {
      "fn": "pool.sellBid",
      "jump": "i",
      "offset": [
        9052,
        9067
      ],
      "op": "JUMP",
      "path": "10"
    },
    "5106": {
      "fn": "pool.sellBid",
      "offset": [
        9052,
        9067
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "5107": {
      "fn": "pool.sellBid",
      "offset": [
        9052,
        9067
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5108": {
      "fn": "pool.sellBid",
      "offset": [
        9052,
        9067
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "5110": {
      "fn": "pool.sellBid",
      "offset": [
        9052,
        9067
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "5111": {
      "fn": "pool.sellBid",
      "offset": [
        9052,
        9067
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "5113": {
      "fn": "pool.sellBid",
      "offset": [
        9052,
        9067
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "5115": {
      "fn": "pool.sellBid",
      "offset": [
        9052,
        9067
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "5116": {
      "fn": "pool.sellBid",
      "offset": [
        9052,
        9067
      ],
      "op": "ADD",
      "path": "10"
    },
    "5117": {
      "fn": "pool.sellBid",
      "offset": [
        9052,
        9067
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "5118": {
      "fn": "pool.sellBid",
      "offset": [
        9043,
        9068
      ],
      "op": "DUP2",
      "path": "10"
    },
    "5119": {
      "fn": "pool.sellBid",
      "offset": [
        9043,
        9068
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "5120": {
      "fn": "pool.sellBid",
      "offset": [
        9043,
        9068
      ],
      "op": "DUP2",
      "path": "10"
    },
    "5121": {
      "fn": "pool.sellBid",
      "offset": [
        9043,
        9068
      ],
      "op": "LT",
      "path": "10"
    },
    "5122": {
      "fn": "pool.sellBid",
      "offset": [
        9043,
        9068
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x140D"
    },
    "5125": {
      "fn": "pool.sellBid",
      "offset": [
        9043,
        9068
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "5126": {
      "fn": "pool.sellBid",
      "offset": [
        9043,
        9068
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x140D"
    },
    "5129": {
      "fn": "pool.sellBid",
      "offset": [
        9043,
        9068
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x298B"
    },
    "5132": {
      "fn": "pool.sellBid",
      "jump": "i",
      "offset": [
        9043,
        9068
      ],
      "op": "JUMP",
      "path": "10"
    },
    "5133": {
      "fn": "pool.sellBid",
      "offset": [
        9043,
        9068
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "5134": {
      "fn": "pool.sellBid",
      "offset": [
        9043,
        9068
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "5136": {
      "fn": "pool.sellBid",
      "offset": [
        9043,
        9068
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "5137": {
      "fn": "pool.sellBid",
      "offset": [
        9043,
        9068
      ],
      "op": "DUP3",
      "path": "10"
    },
    "5138": {
      "fn": "pool.sellBid",
      "offset": [
        9043,
        9068
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "5139": {
      "fn": "pool.sellBid",
      "offset": [
        9043,
        9068
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "5141": {
      "fn": "pool.sellBid",
      "offset": [
        9043,
        9068
      ],
      "op": "DUP1",
      "path": "10"
    },
    "5142": {
      "fn": "pool.sellBid",
      "offset": [
        9043,
        9068
      ],
      "op": "DUP4",
      "path": "10"
    },
    "5143": {
      "fn": "pool.sellBid",
      "offset": [
        9043,
        9068
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "5144": {
      "fn": "pool.sellBid",
      "offset": [
        9043,
        9076
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x2"
    },
    "5146": {
      "fn": "pool.sellBid",
      "offset": [
        9043,
        9068
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "5148": {
      "fn": "pool.sellBid",
      "offset": [
        9043,
        9068
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5149": {
      "fn": "pool.sellBid",
      "offset": [
        9043,
        9068
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "5150": {
      "fn": "pool.sellBid",
      "offset": [
        9043,
        9068
      ],
      "op": "MUL",
      "path": "10"
    },
    "5151": {
      "fn": "pool.sellBid",
      "offset": [
        9043,
        9068
      ],
      "op": "ADD",
      "path": "10"
    },
    "5152": {
      "fn": "pool.sellBid",
      "offset": [
        9043,
        9076
      ],
      "op": "DUP3",
      "path": "10"
    },
    "5153": {
      "fn": "pool.sellBid",
      "offset": [
        9043,
        9076
      ],
      "op": "ADD",
      "path": "10"
    },
    "5154": {
      "fn": "pool.sellBid",
      "offset": [
        9043,
        9076
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "5155": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5157": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5159": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5161": {
      "op": "SHL"
    },
    "5162": {
      "op": "SUB"
    },
    "5163": {
      "fn": "pool.sellBid",
      "offset": [
        9043,
        9076
      ],
      "op": "AND",
      "path": "10"
    },
    "5164": {
      "fn": "pool.sellBid",
      "offset": [
        9038,
        9077
      ],
      "op": "DUP5",
      "path": "10"
    },
    "5165": {
      "fn": "pool.sellBid",
      "offset": [
        9038,
        9077
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "5166": {
      "fn": "pool.sellBid",
      "offset": [
        9038,
        9077
      ],
      "op": "DUP4",
      "path": "10"
    },
    "5167": {
      "fn": "pool.sellBid",
      "offset": [
        9038,
        9077
      ],
      "op": "DUP2",
      "path": "10"
    },
    "5168": {
      "fn": "pool.sellBid",
      "offset": [
        9038,
        9077
      ],
      "op": "ADD",
      "path": "10"
    },
    "5169": {
      "fn": "pool.sellBid",
      "offset": [
        9038,
        9077
      ],
      "op": "SWAP5",
      "path": "10"
    },
    "5170": {
      "fn": "pool.sellBid",
      "offset": [
        9038,
        9077
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5171": {
      "fn": "pool.sellBid",
      "offset": [
        9038,
        9077
      ],
      "op": "SWAP5",
      "path": "10"
    },
    "5172": {
      "fn": "pool.sellBid",
      "offset": [
        9038,
        9077
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "5173": {
      "fn": "pool.sellBid",
      "offset": [
        9038,
        9077
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "5175": {
      "fn": "pool.sellBid",
      "offset": [
        9038,
        9077
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "5176": {
      "fn": "pool.sellBid",
      "offset": [
        9038,
        9077
      ],
      "op": "DUP4",
      "path": "10"
    },
    "5177": {
      "fn": "pool.sellBid",
      "offset": [
        9038,
        9077
      ],
      "op": "ADD",
      "path": "10"
    },
    "5178": {
      "fn": "pool.sellBid",
      "offset": [
        9038,
        9077
      ],
      "op": "DUP3",
      "path": "10"
    },
    "5179": {
      "fn": "pool.sellBid",
      "offset": [
        9038,
        9077
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "5180": {
      "fn": "pool.sellBid",
      "offset": [
        9078,
        9080
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x7"
    },
    "5182": {
      "fn": "pool.sellBid",
      "offset": [
        9078,
        9080
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "5183": {
      "fn": "pool.sellBid",
      "offset": [
        9038,
        9081
      ],
      "op": "DUP4",
      "path": "10"
    },
    "5184": {
      "fn": "pool.sellBid",
      "offset": [
        9038,
        9081
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "5185": {
      "fn": "pool.sellBid",
      "offset": [
        9038,
        9081
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5186": {
      "fn": "pool.sellBid",
      "offset": [
        9038,
        9081
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "5187": {
      "fn": "pool.sellBid",
      "offset": [
        9038,
        9081
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "5188": {
      "fn": "pool.sellBid",
      "offset": [
        9038,
        9081
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5189": {
      "fn": "pool.sellBid",
      "offset": [
        9038,
        9081
      ],
      "op": "DUP2",
      "path": "10"
    },
    "5190": {
      "fn": "pool.sellBid",
      "offset": [
        9038,
        9081
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "5191": {
      "fn": "pool.sellBid",
      "offset": [
        9038,
        9116
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5192": {
      "fn": "pool.sellBid",
      "offset": [
        9038,
        9116
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "5193": {
      "fn": "pool.sellBid",
      "offset": [
        9038,
        9116
      ],
      "op": "ADD",
      "path": "10"
    },
    "5194": {
      "fn": "pool.sellBid",
      "offset": [
        9038,
        9200
      ],
      "op": "DUP1",
      "path": "10"
    },
    "5195": {
      "fn": "pool.sellBid",
      "offset": [
        9038,
        9200
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "5196": {
      "fn": "pool.sellBid",
      "offset": [
        9038,
        9116
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5197": {
      "fn": "pool.sellBid",
      "offset": [
        9038,
        9116
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "5198": {
      "fn": "pool.sellBid",
      "offset": [
        9043,
        9068
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5199": {
      "fn": "pool.sellBid",
      "offset": [
        9038,
        9200
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1459"
    },
    "5202": {
      "fn": "pool.sellBid",
      "offset": [
        9038,
        9200
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5203": {
      "fn": "pool.sellBid",
      "offset": [
        9038,
        9200
      ],
      "op": "DUP5",
      "path": "10"
    },
    "5204": {
      "fn": "pool.sellBid",
      "offset": [
        9038,
        9200
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5205": {
      "fn": "pool.sellBid",
      "offset": [
        9038,
        9200
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x29A1"
    },
    "5208": {
      "fn": "pool.sellBid",
      "jump": "i",
      "offset": [
        9038,
        9200
      ],
      "op": "JUMP",
      "path": "10"
    },
    "5209": {
      "fn": "pool.sellBid",
      "offset": [
        9038,
        9200
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "5210": {
      "fn": "pool.sellBid",
      "offset": [
        9038,
        9200
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5211": {
      "fn": "pool.sellBid",
      "offset": [
        9038,
        9200
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "5212": {
      "fn": "pool.sellBid",
      "offset": [
        9038,
        9200
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "5213": {
      "op": "POP"
    },
    "5214": {
      "op": "POP"
    },
    "5215": {
      "fn": "pool.sellBid",
      "offset": [
        9280,
        9282
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 42,
      "value": "0x7"
    },
    "5217": {
      "fn": "pool.sellBid",
      "offset": [
        9280,
        9282
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "5218": {
      "fn": "pool.sellBid",
      "offset": [
        9275,
        9283
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "5220": {
      "fn": "pool.sellBid",
      "offset": [
        9275,
        9283
      ],
      "op": "DUP2",
      "path": "10"
    },
    "5221": {
      "fn": "pool.sellBid",
      "offset": [
        9275,
        9283
      ],
      "op": "DUP2",
      "path": "10"
    },
    "5222": {
      "fn": "pool.sellBid",
      "offset": [
        9275,
        9283
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "5223": {
      "fn": "pool.sellBid",
      "offset": [
        9275,
        9279
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "5225": {
      "fn": "pool.sellBid",
      "offset": [
        9275,
        9283
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "5227": {
      "fn": "pool.sellBid",
      "offset": [
        9275,
        9283
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "5228": {
      "fn": "pool.sellBid",
      "offset": [
        9275,
        9283
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "5230": {
      "fn": "pool.sellBid",
      "offset": [
        9275,
        9283
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5231": {
      "fn": "pool.sellBid",
      "offset": [
        9275,
        9283
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "5232": {
      "fn": "pool.sellBid",
      "offset": [
        9284,
        9286
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x6"
    },
    "5234": {
      "fn": "pool.sellBid",
      "offset": [
        9284,
        9290
      ],
      "op": "DUP1",
      "path": "10"
    },
    "5235": {
      "fn": "pool.sellBid",
      "offset": [
        9284,
        9290
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "5236": {
      "fn": "pool.sellBid",
      "offset": [
        9275,
        9283
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "5237": {
      "fn": "pool.sellBid",
      "offset": [
        9275,
        9283
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "5238": {
      "fn": "pool.sellBid",
      "offset": [
        9284,
        9286
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5239": {
      "fn": "pool.sellBid",
      "offset": [
        9284,
        9286
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "5240": {
      "fn": "pool.sellBid",
      "offset": [
        9284,
        9290
      ],
      "op": "DUP2",
      "path": "10"
    },
    "5241": {
      "fn": "pool.sellBid",
      "offset": [
        9284,
        9290
      ],
      "op": "LT",
      "path": "10"
    },
    "5242": {
      "fn": "pool.sellBid",
      "offset": [
        9284,
        9290
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1485"
    },
    "5245": {
      "fn": "pool.sellBid",
      "offset": [
        9284,
        9290
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "5246": {
      "fn": "pool.sellBid",
      "offset": [
        9284,
        9290
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1485"
    },
    "5249": {
      "fn": "pool.sellBid",
      "offset": [
        9284,
        9290
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x298B"
    },
    "5252": {
      "fn": "pool.sellBid",
      "jump": "i",
      "offset": [
        9284,
        9290
      ],
      "op": "JUMP",
      "path": "10"
    },
    "5253": {
      "fn": "pool.sellBid",
      "offset": [
        9284,
        9290
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "5254": {
      "fn": "pool.sellBid",
      "offset": [
        9284,
        9290
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5255": {
      "fn": "pool.sellBid",
      "offset": [
        9284,
        9290
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "5257": {
      "fn": "pool.sellBid",
      "offset": [
        9284,
        9290
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "5258": {
      "fn": "pool.sellBid",
      "offset": [
        9284,
        9290
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "5260": {
      "fn": "pool.sellBid",
      "offset": [
        9284,
        9290
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "5262": {
      "fn": "pool.sellBid",
      "offset": [
        9284,
        9290
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "5263": {
      "fn": "pool.sellBid",
      "offset": [
        9284,
        9290
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5264": {
      "fn": "pool.sellBid",
      "offset": [
        9284,
        9290
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "5266": {
      "fn": "pool.sellBid",
      "offset": [
        9284,
        9290
      ],
      "op": "MUL",
      "path": "10"
    },
    "5267": {
      "fn": "pool.sellBid",
      "offset": [
        9284,
        9290
      ],
      "op": "ADD",
      "path": "10"
    },
    "5268": {
      "fn": "pool.sellBid",
      "offset": [
        9284,
        9296
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "5270": {
      "fn": "pool.sellBid",
      "offset": [
        9284,
        9296
      ],
      "op": "ADD",
      "path": "10"
    },
    "5271": {
      "fn": "pool.sellBid",
      "offset": [
        9297,
        9298
      ],
      "op": "DUP3",
      "path": "10"
    },
    "5272": {
      "fn": "pool.sellBid",
      "offset": [
        9284,
        9299
      ],
      "op": "DUP2",
      "path": "10"
    },
    "5273": {
      "fn": "pool.sellBid",
      "offset": [
        9284,
        9299
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "5274": {
      "fn": "pool.sellBid",
      "offset": [
        9284,
        9299
      ],
      "op": "DUP2",
      "path": "10"
    },
    "5275": {
      "fn": "pool.sellBid",
      "offset": [
        9284,
        9299
      ],
      "op": "LT",
      "path": "10"
    },
    "5276": {
      "fn": "pool.sellBid",
      "offset": [
        9284,
        9299
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x14A7"
    },
    "5279": {
      "fn": "pool.sellBid",
      "offset": [
        9284,
        9299
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "5280": {
      "fn": "pool.sellBid",
      "offset": [
        9284,
        9299
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x14A7"
    },
    "5283": {
      "fn": "pool.sellBid",
      "offset": [
        9284,
        9299
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x298B"
    },
    "5286": {
      "fn": "pool.sellBid",
      "jump": "i",
      "offset": [
        9284,
        9299
      ],
      "op": "JUMP",
      "path": "10"
    },
    "5287": {
      "fn": "pool.sellBid",
      "offset": [
        9284,
        9299
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "5288": {
      "fn": "pool.sellBid",
      "offset": [
        9284,
        9299
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5289": {
      "fn": "pool.sellBid",
      "offset": [
        9284,
        9299
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "5291": {
      "fn": "pool.sellBid",
      "offset": [
        9284,
        9299
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "5292": {
      "fn": "pool.sellBid",
      "offset": [
        9284,
        9299
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "5294": {
      "fn": "pool.sellBid",
      "offset": [
        9284,
        9299
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "5296": {
      "fn": "pool.sellBid",
      "offset": [
        9284,
        9299
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "5297": {
      "fn": "pool.sellBid",
      "offset": [
        9284,
        9299
      ],
      "op": "ADD",
      "path": "10"
    },
    "5298": {
      "fn": "pool.sellBid",
      "offset": [
        9284,
        9299
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "5299": {
      "fn": "pool.sellBid",
      "offset": [
        9275,
        9300
      ],
      "op": "DUP2",
      "path": "10"
    },
    "5300": {
      "fn": "pool.sellBid",
      "offset": [
        9275,
        9300
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "5301": {
      "fn": "pool.sellBid",
      "offset": [
        9275,
        9300
      ],
      "op": "DUP2",
      "path": "10"
    },
    "5302": {
      "fn": "pool.sellBid",
      "offset": [
        9275,
        9300
      ],
      "op": "LT",
      "path": "10"
    },
    "5303": {
      "fn": "pool.sellBid",
      "offset": [
        9275,
        9300
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x14C2"
    },
    "5306": {
      "fn": "pool.sellBid",
      "offset": [
        9275,
        9300
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "5307": {
      "fn": "pool.sellBid",
      "offset": [
        9275,
        9300
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x14C2"
    },
    "5310": {
      "fn": "pool.sellBid",
      "offset": [
        9275,
        9300
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x298B"
    },
    "5313": {
      "fn": "pool.sellBid",
      "jump": "i",
      "offset": [
        9275,
        9300
      ],
      "op": "JUMP",
      "path": "10"
    },
    "5314": {
      "fn": "pool.sellBid",
      "offset": [
        9275,
        9300
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "5315": {
      "fn": "pool.sellBid",
      "offset": [
        9275,
        9300
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5316": {
      "fn": "pool.sellBid",
      "offset": [
        9275,
        9300
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "5318": {
      "fn": "pool.sellBid",
      "offset": [
        9275,
        9300
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "5319": {
      "fn": "pool.sellBid",
      "offset": [
        9275,
        9300
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "5321": {
      "fn": "pool.sellBid",
      "offset": [
        9275,
        9300
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "5323": {
      "fn": "pool.sellBid",
      "offset": [
        9275,
        9300
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "5324": {
      "fn": "pool.sellBid",
      "offset": [
        9275,
        9300
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5325": {
      "fn": "pool.sellBid",
      "offset": [
        9275,
        9300
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "5327": {
      "fn": "pool.sellBid",
      "offset": [
        9275,
        9300
      ],
      "op": "MUL",
      "path": "10"
    },
    "5328": {
      "fn": "pool.sellBid",
      "offset": [
        9275,
        9300
      ],
      "op": "ADD",
      "path": "10"
    },
    "5329": {
      "fn": "pool.sellBid",
      "offset": [
        9275,
        9306
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "5331": {
      "fn": "pool.sellBid",
      "offset": [
        9275,
        9306
      ],
      "op": "ADD",
      "path": "10"
    },
    "5332": {
      "fn": "pool.sellBid",
      "offset": [
        9275,
        9306
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "5333": {
      "fn": "pool.sellBid",
      "offset": [
        9266,
        9272
      ],
      "op": "DUP5",
      "path": "10"
    },
    "5334": {
      "fn": "pool.sellBid",
      "offset": [
        9266,
        9306
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x14DF"
    },
    "5337": {
      "fn": "pool.sellBid",
      "offset": [
        9266,
        9306
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "5338": {
      "fn": "pool.sellBid",
      "offset": [
        9266,
        9306
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5339": {
      "fn": "pool.sellBid",
      "offset": [
        9266,
        9306
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x29FE"
    },
    "5342": {
      "fn": "pool.sellBid",
      "jump": "i",
      "offset": [
        9266,
        9306
      ],
      "op": "JUMP",
      "path": "10"
    },
    "5343": {
      "fn": "pool.sellBid",
      "offset": [
        9266,
        9306
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "5344": {
      "fn": "pool.sellBid",
      "offset": [
        9251,
        9307
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x14E9"
    },
    "5347": {
      "fn": "pool.sellBid",
      "offset": [
        9251,
        9307
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5348": {
      "fn": "pool.sellBid",
      "offset": [
        9251,
        9307
      ],
      "op": "DUP5",
      "path": "10"
    },
    "5349": {
      "fn": "pool.sellBid",
      "offset": [
        9251,
        9307
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2973"
    },
    "5352": {
      "fn": "pool.sellBid",
      "jump": "i",
      "offset": [
        9251,
        9307
      ],
      "op": "JUMP",
      "path": "10"
    },
    "5353": {
      "fn": "pool.sellBid",
      "offset": [
        9251,
        9307
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "5354": {
      "fn": "pool.sellBid",
      "offset": [
        9251,
        9307
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "5355": {
      "fn": "pool.sellBid",
      "offset": [
        9251,
        9307
      ],
      "op": "POP",
      "path": "10"
    },
    "5356": {
      "fn": "pool.sellBid",
      "offset": [
        9375,
        9381
      ],
      "op": "DUP4",
      "path": "10",
      "statement": 43
    },
    "5357": {
      "fn": "pool.sellBid",
      "offset": [
        9358,
        9360
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x6"
    },
    "5359": {
      "fn": "pool.sellBid",
      "offset": [
        9361,
        9363
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x7"
    },
    "5361": {
      "fn": "pool.sellBid",
      "offset": [
        9361,
        9363
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "5362": {
      "fn": "pool.sellBid",
      "offset": [
        9358,
        9364
      ],
      "op": "DUP2",
      "path": "10"
    },
    "5363": {
      "fn": "pool.sellBid",
      "offset": [
        9358,
        9364
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "5364": {
      "fn": "pool.sellBid",
      "offset": [
        9358,
        9364
      ],
      "op": "DUP2",
      "path": "10"
    },
    "5365": {
      "fn": "pool.sellBid",
      "offset": [
        9358,
        9364
      ],
      "op": "LT",
      "path": "10"
    },
    "5366": {
      "fn": "pool.sellBid",
      "offset": [
        9358,
        9364
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1501"
    },
    "5369": {
      "fn": "pool.sellBid",
      "offset": [
        9358,
        9364
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "5370": {
      "fn": "pool.sellBid",
      "offset": [
        9358,
        9364
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1501"
    },
    "5373": {
      "fn": "pool.sellBid",
      "offset": [
        9358,
        9364
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x298B"
    },
    "5376": {
      "fn": "pool.sellBid",
      "jump": "i",
      "offset": [
        9358,
        9364
      ],
      "op": "JUMP",
      "path": "10"
    },
    "5377": {
      "fn": "pool.sellBid",
      "offset": [
        9358,
        9364
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "5378": {
      "fn": "pool.sellBid",
      "offset": [
        9358,
        9364
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5379": {
      "fn": "pool.sellBid",
      "offset": [
        9358,
        9364
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "5381": {
      "fn": "pool.sellBid",
      "offset": [
        9358,
        9364
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "5382": {
      "fn": "pool.sellBid",
      "offset": [
        9358,
        9364
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "5384": {
      "fn": "pool.sellBid",
      "offset": [
        9358,
        9364
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "5386": {
      "fn": "pool.sellBid",
      "offset": [
        9358,
        9364
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "5387": {
      "fn": "pool.sellBid",
      "offset": [
        9358,
        9364
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5388": {
      "fn": "pool.sellBid",
      "offset": [
        9358,
        9364
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "5390": {
      "fn": "pool.sellBid",
      "offset": [
        9358,
        9364
      ],
      "op": "MUL",
      "path": "10"
    },
    "5391": {
      "fn": "pool.sellBid",
      "offset": [
        9358,
        9364
      ],
      "op": "ADD",
      "path": "10"
    },
    "5392": {
      "fn": "pool.sellBid",
      "offset": [
        9358,
        9371
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x2"
    },
    "5394": {
      "fn": "pool.sellBid",
      "offset": [
        9358,
        9371
      ],
      "op": "ADD",
      "path": "10"
    },
    "5395": {
      "fn": "pool.sellBid",
      "offset": [
        9358,
        9371
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "5397": {
      "fn": "pool.sellBid",
      "offset": [
        9358,
        9381
      ],
      "op": "DUP3",
      "path": "10"
    },
    "5398": {
      "fn": "pool.sellBid",
      "offset": [
        9358,
        9381
      ],
      "op": "DUP3",
      "path": "10"
    },
    "5399": {
      "fn": "pool.sellBid",
      "offset": [
        9358,
        9381
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "5400": {
      "fn": "pool.sellBid",
      "offset": [
        9358,
        9381
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1521"
    },
    "5403": {
      "fn": "pool.sellBid",
      "offset": [
        9358,
        9381
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "5404": {
      "fn": "pool.sellBid",
      "offset": [
        9358,
        9381
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5405": {
      "fn": "pool.sellBid",
      "offset": [
        9358,
        9381
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x29A1"
    },
    "5408": {
      "fn": "pool.sellBid",
      "jump": "i",
      "offset": [
        9358,
        9381
      ],
      "op": "JUMP",
      "path": "10"
    },
    "5409": {
      "fn": "pool.sellBid",
      "offset": [
        9358,
        9381
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "5410": {
      "fn": "pool.sellBid",
      "offset": [
        9358,
        9381
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5411": {
      "fn": "pool.sellBid",
      "offset": [
        9358,
        9381
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "5412": {
      "fn": "pool.sellBid",
      "offset": [
        9358,
        9381
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "5413": {
      "op": "POP"
    },
    "5414": {
      "op": "POP"
    },
    "5415": {
      "fn": "pool.sellBid",
      "offset": [
        9441,
        9443
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 44,
      "value": "0x7"
    },
    "5417": {
      "fn": "pool.sellBid",
      "offset": [
        9441,
        9443
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "5418": {
      "fn": "pool.sellBid",
      "offset": [
        9436,
        9444
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "5420": {
      "fn": "pool.sellBid",
      "offset": [
        9436,
        9444
      ],
      "op": "DUP2",
      "path": "10"
    },
    "5421": {
      "fn": "pool.sellBid",
      "offset": [
        9436,
        9444
      ],
      "op": "DUP2",
      "path": "10"
    },
    "5422": {
      "fn": "pool.sellBid",
      "offset": [
        9436,
        9444
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "5423": {
      "fn": "pool.sellBid",
      "offset": [
        9436,
        9440
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "5425": {
      "fn": "pool.sellBid",
      "offset": [
        9436,
        9444
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "5427": {
      "fn": "pool.sellBid",
      "offset": [
        9436,
        9444
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "5428": {
      "fn": "pool.sellBid",
      "offset": [
        9436,
        9444
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "5430": {
      "fn": "pool.sellBid",
      "offset": [
        9436,
        9444
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5431": {
      "fn": "pool.sellBid",
      "offset": [
        9436,
        9444
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "5432": {
      "fn": "pool.sellBid",
      "offset": [
        9445,
        9447
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x6"
    },
    "5434": {
      "fn": "pool.sellBid",
      "offset": [
        9445,
        9451
      ],
      "op": "DUP1",
      "path": "10"
    },
    "5435": {
      "fn": "pool.sellBid",
      "offset": [
        9445,
        9451
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "5436": {
      "fn": "pool.sellBid",
      "offset": [
        9470,
        9476
      ],
      "op": "DUP8",
      "path": "10"
    },
    "5437": {
      "fn": "pool.sellBid",
      "offset": [
        9470,
        9476
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "5438": {
      "fn": "pool.sellBid",
      "offset": [
        9441,
        9443
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5439": {
      "fn": "pool.sellBid",
      "offset": [
        9445,
        9451
      ],
      "op": "DUP2",
      "path": "10"
    },
    "5440": {
      "fn": "pool.sellBid",
      "offset": [
        9445,
        9451
      ],
      "op": "LT",
      "path": "10"
    },
    "5441": {
      "fn": "pool.sellBid",
      "offset": [
        9445,
        9451
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x154C"
    },
    "5444": {
      "fn": "pool.sellBid",
      "offset": [
        9445,
        9451
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "5445": {
      "fn": "pool.sellBid",
      "offset": [
        9445,
        9451
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x154C"
    },
    "5448": {
      "fn": "pool.sellBid",
      "offset": [
        9445,
        9451
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x298B"
    },
    "5451": {
      "fn": "pool.sellBid",
      "jump": "i",
      "offset": [
        9445,
        9451
      ],
      "op": "JUMP",
      "path": "10"
    },
    "5452": {
      "fn": "pool.sellBid",
      "offset": [
        9445,
        9451
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "5453": {
      "fn": "pool.sellBid",
      "offset": [
        9445,
        9451
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5454": {
      "fn": "pool.sellBid",
      "offset": [
        9445,
        9451
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "5456": {
      "fn": "pool.sellBid",
      "offset": [
        9445,
        9451
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "5457": {
      "fn": "pool.sellBid",
      "offset": [
        9445,
        9451
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "5459": {
      "fn": "pool.sellBid",
      "offset": [
        9445,
        9451
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "5461": {
      "fn": "pool.sellBid",
      "offset": [
        9445,
        9451
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "5462": {
      "fn": "pool.sellBid",
      "offset": [
        9445,
        9451
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5463": {
      "fn": "pool.sellBid",
      "offset": [
        9445,
        9451
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "5465": {
      "fn": "pool.sellBid",
      "offset": [
        9445,
        9451
      ],
      "op": "MUL",
      "path": "10"
    },
    "5466": {
      "fn": "pool.sellBid",
      "offset": [
        9445,
        9451
      ],
      "op": "ADD",
      "path": "10"
    },
    "5467": {
      "fn": "pool.sellBid",
      "offset": [
        9445,
        9457
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "5469": {
      "fn": "pool.sellBid",
      "offset": [
        9445,
        9457
      ],
      "op": "ADD",
      "path": "10"
    },
    "5470": {
      "fn": "pool.sellBid",
      "offset": [
        9458,
        9459
      ],
      "op": "DUP4",
      "path": "10"
    },
    "5471": {
      "fn": "pool.sellBid",
      "offset": [
        9445,
        9460
      ],
      "op": "DUP2",
      "path": "10"
    },
    "5472": {
      "fn": "pool.sellBid",
      "offset": [
        9445,
        9460
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "5473": {
      "fn": "pool.sellBid",
      "offset": [
        9445,
        9460
      ],
      "op": "DUP2",
      "path": "10"
    },
    "5474": {
      "fn": "pool.sellBid",
      "offset": [
        9445,
        9460
      ],
      "op": "LT",
      "path": "10"
    },
    "5475": {
      "fn": "pool.sellBid",
      "offset": [
        9445,
        9460
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x156E"
    },
    "5478": {
      "fn": "pool.sellBid",
      "offset": [
        9445,
        9460
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "5479": {
      "fn": "pool.sellBid",
      "offset": [
        9445,
        9460
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x156E"
    },
    "5482": {
      "fn": "pool.sellBid",
      "offset": [
        9445,
        9460
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x298B"
    },
    "5485": {
      "fn": "pool.sellBid",
      "jump": "i",
      "offset": [
        9445,
        9460
      ],
      "op": "JUMP",
      "path": "10"
    },
    "5486": {
      "fn": "pool.sellBid",
      "offset": [
        9445,
        9460
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "5487": {
      "fn": "pool.sellBid",
      "offset": [
        9445,
        9460
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5488": {
      "fn": "pool.sellBid",
      "offset": [
        9445,
        9460
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "5490": {
      "fn": "pool.sellBid",
      "offset": [
        9445,
        9460
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "5491": {
      "fn": "pool.sellBid",
      "offset": [
        9445,
        9460
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "5493": {
      "fn": "pool.sellBid",
      "offset": [
        9445,
        9460
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "5495": {
      "fn": "pool.sellBid",
      "offset": [
        9445,
        9460
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "5496": {
      "fn": "pool.sellBid",
      "offset": [
        9445,
        9460
      ],
      "op": "ADD",
      "path": "10"
    },
    "5497": {
      "fn": "pool.sellBid",
      "offset": [
        9445,
        9460
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "5498": {
      "fn": "pool.sellBid",
      "offset": [
        9436,
        9461
      ],
      "op": "DUP2",
      "path": "10"
    },
    "5499": {
      "fn": "pool.sellBid",
      "offset": [
        9436,
        9461
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "5500": {
      "fn": "pool.sellBid",
      "offset": [
        9436,
        9461
      ],
      "op": "DUP2",
      "path": "10"
    },
    "5501": {
      "fn": "pool.sellBid",
      "offset": [
        9436,
        9461
      ],
      "op": "LT",
      "path": "10"
    },
    "5502": {
      "fn": "pool.sellBid",
      "offset": [
        9436,
        9461
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1589"
    },
    "5505": {
      "fn": "pool.sellBid",
      "offset": [
        9436,
        9461
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "5506": {
      "fn": "pool.sellBid",
      "offset": [
        9436,
        9461
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1589"
    },
    "5509": {
      "fn": "pool.sellBid",
      "offset": [
        9436,
        9461
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x298B"
    },
    "5512": {
      "fn": "pool.sellBid",
      "jump": "i",
      "offset": [
        9436,
        9461
      ],
      "op": "JUMP",
      "path": "10"
    },
    "5513": {
      "fn": "pool.sellBid",
      "offset": [
        9436,
        9461
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "5514": {
      "fn": "pool.sellBid",
      "offset": [
        9436,
        9461
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5515": {
      "fn": "pool.sellBid",
      "offset": [
        9436,
        9461
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "5517": {
      "fn": "pool.sellBid",
      "offset": [
        9436,
        9461
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "5518": {
      "fn": "pool.sellBid",
      "offset": [
        9436,
        9461
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "5520": {
      "fn": "pool.sellBid",
      "offset": [
        9436,
        9461
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "5522": {
      "fn": "pool.sellBid",
      "offset": [
        9436,
        9461
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "5523": {
      "fn": "pool.sellBid",
      "offset": [
        9436,
        9461
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5524": {
      "fn": "pool.sellBid",
      "offset": [
        9436,
        9461
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "5526": {
      "fn": "pool.sellBid",
      "offset": [
        9436,
        9461
      ],
      "op": "MUL",
      "path": "10"
    },
    "5527": {
      "fn": "pool.sellBid",
      "offset": [
        9436,
        9461
      ],
      "op": "ADD",
      "path": "10"
    },
    "5528": {
      "fn": "pool.sellBid",
      "offset": [
        9436,
        9466
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "5530": {
      "fn": "pool.sellBid",
      "offset": [
        9436,
        9466
      ],
      "op": "ADD",
      "path": "10"
    },
    "5531": {
      "fn": "pool.sellBid",
      "offset": [
        9436,
        9466
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "5533": {
      "fn": "pool.sellBid",
      "offset": [
        9436,
        9476
      ],
      "op": "DUP3",
      "path": "10"
    },
    "5534": {
      "fn": "pool.sellBid",
      "offset": [
        9436,
        9476
      ],
      "op": "DUP3",
      "path": "10"
    },
    "5535": {
      "fn": "pool.sellBid",
      "offset": [
        9436,
        9476
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "5536": {
      "fn": "pool.sellBid",
      "offset": [
        9436,
        9476
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x15A9"
    },
    "5539": {
      "fn": "pool.sellBid",
      "offset": [
        9436,
        9476
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "5540": {
      "fn": "pool.sellBid",
      "offset": [
        9436,
        9476
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5541": {
      "fn": "pool.sellBid",
      "offset": [
        9436,
        9476
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x29A1"
    },
    "5544": {
      "fn": "pool.sellBid",
      "jump": "i",
      "offset": [
        9436,
        9476
      ],
      "op": "JUMP",
      "path": "10"
    },
    "5545": {
      "fn": "pool.sellBid",
      "offset": [
        9436,
        9476
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "5546": {
      "fn": "pool.sellBid",
      "offset": [
        9436,
        9476
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5547": {
      "fn": "pool.sellBid",
      "offset": [
        9436,
        9476
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "5548": {
      "fn": "pool.sellBid",
      "offset": [
        9436,
        9476
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "5549": {
      "op": "POP"
    },
    "5550": {
      "fn": "pool.sellBid",
      "offset": [
        9503,
        9504
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 45,
      "value": "0x0"
    },
    "5552": {
      "fn": "pool.sellBid",
      "offset": [
        9503,
        9504
      ],
      "op": "SWAP5",
      "path": "10"
    },
    "5553": {
      "op": "POP"
    },
    "5554": {
      "op": "POP"
    },
    "5555": {
      "fn": "pool.sellBid",
      "offset": [
        8155,
        9519
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "5556": {
      "fn": "pool.sellBid",
      "offset": [
        9532,
        9535
      ],
      "op": "DUP1",
      "path": "10",
      "statement": 46
    },
    "5557": {
      "fn": "pool.sellBid",
      "offset": [
        9532,
        9535
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x15BD"
    },
    "5560": {
      "fn": "pool.sellBid",
      "offset": [
        9532,
        9535
      ],
      "op": "DUP2",
      "path": "10"
    },
    "5561": {
      "fn": "pool.sellBid",
      "offset": [
        9532,
        9535
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2A55"
    },
    "5564": {
      "fn": "pool.sellBid",
      "jump": "i",
      "offset": [
        9532,
        9535
      ],
      "op": "JUMP",
      "path": "10"
    },
    "5565": {
      "fn": "pool.sellBid",
      "offset": [
        9532,
        9535
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "5566": {
      "fn": "pool.sellBid",
      "offset": [
        9532,
        9535
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "5567": {
      "fn": "pool.sellBid",
      "offset": [
        9532,
        9535
      ],
      "op": "POP",
      "path": "10"
    },
    "5568": {
      "fn": "pool.sellBid",
      "offset": [
        9532,
        9535
      ],
      "op": "POP",
      "path": "10"
    },
    "5569": {
      "fn": "pool.sellBid",
      "offset": [
        8066,
        9546
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xDF1"
    },
    "5572": {
      "fn": "pool.sellBid",
      "offset": [
        8066,
        9546
      ],
      "op": "JUMP",
      "path": "10"
    },
    "5573": {
      "fn": "pool.sellBid",
      "offset": [
        8066,
        9546
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "5574": {
      "fn": "pool.sellBid",
      "offset": [
        9580,
        9593
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 47,
      "value": "0x15D0"
    },
    "5577": {
      "fn": "pool.getEthPrice",
      "offset": [
        15200,
        15204
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xED7"
    },
    "5580": {
      "fn": "pool.getEthPrice",
      "offset": [
        15189,
        15197
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "5582": {
      "fn": "pool.getEthPrice",
      "offset": [
        15189,
        15204
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "5583": {
      "fn": "pool.getEthPrice",
      "offset": [
        14561,
        15211
      ],
      "op": "JUMP",
      "path": "10"
    },
    "5584": {
      "fn": "pool.sellBid",
      "offset": [
        9580,
        9593
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "5585": {
      "fn": "pool.sellBid",
      "offset": [
        9755,
        9763
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 48,
      "value": "0x1"
    },
    "5587": {
      "fn": "pool.sellBid",
      "offset": [
        9755,
        9763
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "5588": {
      "fn": "pool.sellBid",
      "offset": [
        9717,
        9739
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x15DD"
    },
    "5591": {
      "fn": "pool.sellBid",
      "offset": [
        9755,
        9763
      ],
      "op": "DUP2",
      "path": "10"
    },
    "5592": {
      "fn": "pool.sellBid",
      "offset": [
        9717,
        9728
      ],
      "op": "DUP9",
      "path": "10"
    },
    "5593": {
      "fn": "pool.sellBid",
      "offset": [
        9717,
        9739
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x29FE"
    },
    "5596": {
      "fn": "pool.sellBid",
      "jump": "i",
      "offset": [
        9717,
        9739
      ],
      "op": "JUMP",
      "path": "10"
    },
    "5597": {
      "fn": "pool.sellBid",
      "offset": [
        9717,
        9739
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "5598": {
      "fn": "pool.sellBid",
      "offset": [
        9704,
        9739
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x15E7"
    },
    "5601": {
      "fn": "pool.sellBid",
      "offset": [
        9704,
        9739
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5602": {
      "fn": "pool.sellBid",
      "offset": [
        9704,
        9714
      ],
      "op": "DUP6",
      "path": "10"
    },
    "5603": {
      "fn": "pool.sellBid",
      "offset": [
        9704,
        9739
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2973"
    },
    "5606": {
      "fn": "pool.sellBid",
      "jump": "i",
      "offset": [
        9704,
        9739
      ],
      "op": "JUMP",
      "path": "10"
    },
    "5607": {
      "fn": "pool.sellBid",
      "offset": [
        9704,
        9739
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "5608": {
      "fn": "pool.sellBid",
      "offset": [
        9703,
        9763
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x15F1"
    },
    "5611": {
      "fn": "pool.sellBid",
      "offset": [
        9703,
        9763
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "5612": {
      "fn": "pool.sellBid",
      "offset": [
        9703,
        9763
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5613": {
      "fn": "pool.sellBid",
      "offset": [
        9703,
        9763
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2A1D"
    },
    "5616": {
      "fn": "pool.sellBid",
      "jump": "i",
      "offset": [
        9703,
        9763
      ],
      "op": "JUMP",
      "path": "10"
    },
    "5617": {
      "fn": "pool.sellBid",
      "offset": [
        9703,
        9763
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "5618": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5620": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5622": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5624": {
      "op": "SHL"
    },
    "5625": {
      "op": "SUB"
    },
    "5626": {
      "fn": "pool.sellBid",
      "offset": [
        9678,
        9689
      ],
      "op": "DUP7",
      "path": "10"
    },
    "5627": {
      "fn": "pool.sellBid",
      "offset": [
        9678,
        9689
      ],
      "op": "AND",
      "path": "10"
    },
    "5628": {
      "fn": "pool.sellBid",
      "offset": [
        9678,
        9689
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "5630": {
      "fn": "pool.sellBid",
      "offset": [
        9678,
        9689
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5631": {
      "fn": "pool.sellBid",
      "offset": [
        9678,
        9689
      ],
      "op": "DUP2",
      "path": "10"
    },
    "5632": {
      "fn": "pool.sellBid",
      "offset": [
        9678,
        9689
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "5633": {
      "fn": "pool.sellBid",
      "offset": [
        9678,
        9682
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x5"
    },
    "5635": {
      "fn": "pool.sellBid",
      "offset": [
        9678,
        9689
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "5637": {
      "fn": "pool.sellBid",
      "offset": [
        9678,
        9689
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5638": {
      "fn": "pool.sellBid",
      "offset": [
        9678,
        9689
      ],
      "op": "DUP2",
      "path": "10"
    },
    "5639": {
      "fn": "pool.sellBid",
      "offset": [
        9678,
        9689
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "5640": {
      "fn": "pool.sellBid",
      "offset": [
        9678,
        9689
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "5642": {
      "fn": "pool.sellBid",
      "offset": [
        9678,
        9689
      ],
      "op": "DUP1",
      "path": "10"
    },
    "5643": {
      "fn": "pool.sellBid",
      "offset": [
        9678,
        9689
      ],
      "op": "DUP4",
      "path": "10"
    },
    "5644": {
      "fn": "pool.sellBid",
      "offset": [
        9678,
        9689
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "5645": {
      "fn": "pool.sellBid",
      "offset": [
        9690,
        9692
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x7"
    },
    "5647": {
      "fn": "pool.sellBid",
      "offset": [
        9690,
        9692
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "5648": {
      "fn": "pool.sellBid",
      "offset": [
        9678,
        9693
      ],
      "op": "DUP5",
      "path": "10"
    },
    "5649": {
      "fn": "pool.sellBid",
      "offset": [
        9678,
        9693
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "5650": {
      "fn": "pool.sellBid",
      "offset": [
        9678,
        9693
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5651": {
      "fn": "pool.sellBid",
      "offset": [
        9678,
        9693
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "5652": {
      "fn": "pool.sellBid",
      "offset": [
        9678,
        9693
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "5653": {
      "fn": "pool.sellBid",
      "offset": [
        9678,
        9693
      ],
      "op": "DUP2",
      "path": "10"
    },
    "5654": {
      "fn": "pool.sellBid",
      "offset": [
        9678,
        9693
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "5655": {
      "fn": "pool.sellBid",
      "offset": [
        9678,
        9764
      ],
      "op": "DUP1",
      "path": "10"
    },
    "5656": {
      "fn": "pool.sellBid",
      "offset": [
        9678,
        9764
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "5657": {
      "fn": "pool.sellBid",
      "offset": [
        9678,
        9693
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5658": {
      "fn": "pool.sellBid",
      "offset": [
        9678,
        9693
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "5659": {
      "fn": "pool.sellBid",
      "offset": [
        9678,
        9689
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5660": {
      "fn": "pool.sellBid",
      "offset": [
        9678,
        9764
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1626"
    },
    "5663": {
      "fn": "pool.sellBid",
      "offset": [
        9678,
        9764
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5664": {
      "fn": "pool.sellBid",
      "offset": [
        9678,
        9764
      ],
      "op": "DUP5",
      "path": "10"
    },
    "5665": {
      "fn": "pool.sellBid",
      "offset": [
        9678,
        9764
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5666": {
      "fn": "pool.sellBid",
      "offset": [
        9678,
        9764
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2973"
    },
    "5669": {
      "fn": "pool.sellBid",
      "jump": "i",
      "offset": [
        9678,
        9764
      ],
      "op": "JUMP",
      "path": "10"
    },
    "5670": {
      "fn": "pool.sellBid",
      "offset": [
        9678,
        9764
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "5671": {
      "fn": "pool.sellBid",
      "offset": [
        9678,
        9764
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5672": {
      "fn": "pool.sellBid",
      "offset": [
        9678,
        9764
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "5673": {
      "fn": "pool.sellBid",
      "offset": [
        9678,
        9764
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "5674": {
      "op": "POP"
    },
    "5675": {
      "op": "POP"
    },
    "5676": {
      "op": "POP"
    },
    "5677": {
      "op": "POP"
    },
    "5678": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5680": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5682": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5684": {
      "op": "SHL"
    },
    "5685": {
      "op": "SUB"
    },
    "5686": {
      "fn": "pool.sellBid",
      "offset": [
        9774,
        9785
      ],
      "op": "SWAP3",
      "path": "10",
      "statement": 49
    },
    "5687": {
      "fn": "pool.sellBid",
      "offset": [
        9774,
        9785
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5688": {
      "fn": "pool.sellBid",
      "offset": [
        9774,
        9785
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "5689": {
      "fn": "pool.sellBid",
      "offset": [
        9774,
        9785
      ],
      "op": "AND",
      "path": "10"
    },
    "5690": {
      "fn": "pool.sellBid",
      "offset": [
        9774,
        9785
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "5692": {
      "fn": "pool.sellBid",
      "offset": [
        9774,
        9785
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5693": {
      "fn": "pool.sellBid",
      "offset": [
        9774,
        9785
      ],
      "op": "DUP2",
      "path": "10"
    },
    "5694": {
      "fn": "pool.sellBid",
      "offset": [
        9774,
        9785
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "5695": {
      "fn": "pool.sellBid",
      "offset": [
        9774,
        9778
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x5"
    },
    "5697": {
      "fn": "pool.sellBid",
      "offset": [
        9774,
        9785
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "5699": {
      "fn": "pool.sellBid",
      "offset": [
        9774,
        9785
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5700": {
      "fn": "pool.sellBid",
      "offset": [
        9774,
        9785
      ],
      "op": "DUP2",
      "path": "10"
    },
    "5701": {
      "fn": "pool.sellBid",
      "offset": [
        9774,
        9785
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "5702": {
      "fn": "pool.sellBid",
      "offset": [
        9774,
        9785
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "5704": {
      "fn": "pool.sellBid",
      "offset": [
        9774,
        9785
      ],
      "op": "DUP1",
      "path": "10"
    },
    "5705": {
      "fn": "pool.sellBid",
      "offset": [
        9774,
        9785
      ],
      "op": "DUP4",
      "path": "10"
    },
    "5706": {
      "fn": "pool.sellBid",
      "offset": [
        9774,
        9785
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "5707": {
      "fn": "pool.sellBid",
      "offset": [
        9786,
        9788
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x7"
    },
    "5709": {
      "fn": "pool.sellBid",
      "offset": [
        9786,
        9788
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "5710": {
      "fn": "pool.sellBid",
      "offset": [
        9774,
        9789
      ],
      "op": "DUP5",
      "path": "10"
    },
    "5711": {
      "fn": "pool.sellBid",
      "offset": [
        9774,
        9789
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "5712": {
      "fn": "pool.sellBid",
      "offset": [
        9774,
        9789
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5713": {
      "fn": "pool.sellBid",
      "offset": [
        9774,
        9789
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "5714": {
      "fn": "pool.sellBid",
      "offset": [
        9774,
        9789
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "5715": {
      "fn": "pool.sellBid",
      "offset": [
        9774,
        9789
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5716": {
      "fn": "pool.sellBid",
      "offset": [
        9774,
        9789
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "5717": {
      "fn": "pool.sellBid",
      "offset": [
        9774,
        9794
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "5719": {
      "fn": "pool.sellBid",
      "offset": [
        9774,
        9794
      ],
      "op": "ADD",
      "path": "10"
    },
    "5720": {
      "fn": "pool.sellBid",
      "offset": [
        9774,
        9815
      ],
      "op": "DUP1",
      "path": "10"
    },
    "5721": {
      "fn": "pool.sellBid",
      "offset": [
        9774,
        9815
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "5722": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "5724": {
      "op": "NOT"
    },
    "5725": {
      "fn": "pool.sellBid",
      "offset": [
        9774,
        9815
      ],
      "op": "AND",
      "path": "10"
    },
    "5726": {
      "fn": "pool.sellBid",
      "offset": [
        9797,
        9815
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x2"
    },
    "5728": {
      "fn": "pool.sellBid",
      "offset": [
        9774,
        9815
      ],
      "op": "OR",
      "path": "10"
    },
    "5729": {
      "fn": "pool.sellBid",
      "offset": [
        9774,
        9815
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5730": {
      "fn": "pool.sellBid",
      "offset": [
        9774,
        9815
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "5731": {
      "op": "POP"
    },
    "5732": {
      "op": "POP"
    },
    "5733": {
      "op": "POP"
    },
    "5734": {
      "fn": "pool.sellBid",
      "jump": "o",
      "offset": [
        6994,
        9822
      ],
      "op": "JUMP",
      "path": "10"
    },
    "5735": {
      "offset": [
        1395,
        1439
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "5736": {
      "fn": "pool.sellBid",
      "offset": [
        1395,
        1439
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "5738": {
      "fn": "pool.sellBid",
      "offset": [
        1395,
        1439
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "5740": {
      "fn": "pool.sellBid",
      "offset": [
        1395,
        1439
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "5741": {
      "fn": "pool.sellBid",
      "offset": [
        1395,
        1439
      ],
      "op": "DUP2",
      "path": "10"
    },
    "5742": {
      "fn": "pool.sellBid",
      "offset": [
        1395,
        1439
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "5744": {
      "fn": "pool.sellBid",
      "offset": [
        1395,
        1439
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "5745": {
      "fn": "pool.sellBid",
      "offset": [
        1395,
        1439
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "5747": {
      "fn": "pool.sellBid",
      "offset": [
        1395,
        1439
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "5749": {
      "fn": "pool.sellBid",
      "offset": [
        1395,
        1439
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "5750": {
      "fn": "pool.sellBid",
      "offset": [
        1395,
        1439
      ],
      "op": "DUP2",
      "path": "10"
    },
    "5751": {
      "fn": "pool.sellBid",
      "offset": [
        1395,
        1439
      ],
      "op": "DUP2",
      "path": "10"
    },
    "5752": {
      "fn": "pool.sellBid",
      "offset": [
        1395,
        1439
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "5753": {
      "fn": "pool.sellBid",
      "offset": [
        1395,
        1439
      ],
      "op": "DUP2",
      "path": "10"
    },
    "5754": {
      "fn": "pool.sellBid",
      "offset": [
        1395,
        1439
      ],
      "op": "LT",
      "path": "10"
    },
    "5755": {
      "fn": "pool.sellBid",
      "offset": [
        1395,
        1439
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1683"
    },
    "5758": {
      "fn": "pool.sellBid",
      "offset": [
        1395,
        1439
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "5759": {
      "fn": "pool.sellBid",
      "offset": [
        1395,
        1439
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "5761": {
      "fn": "pool.sellBid",
      "offset": [
        1395,
        1439
      ],
      "op": "DUP1",
      "path": "10"
    },
    "5762": {
      "fn": "pool.sellBid",
      "offset": [
        1395,
        1439
      ],
      "op": "REVERT",
      "path": "10"
    },
    "5763": {
      "fn": "pool.sellBid",
      "offset": [
        1395,
        1439
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "5764": {
      "fn": "pool.sellBid",
      "offset": [
        1395,
        1439
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "5766": {
      "fn": "pool.sellBid",
      "offset": [
        1395,
        1439
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "5767": {
      "fn": "pool.sellBid",
      "offset": [
        1395,
        1439
      ],
      "op": "DUP3",
      "path": "10"
    },
    "5768": {
      "fn": "pool.sellBid",
      "offset": [
        1395,
        1439
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "5769": {
      "fn": "pool.sellBid",
      "offset": [
        1395,
        1439
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "5771": {
      "fn": "pool.sellBid",
      "offset": [
        1395,
        1439
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5772": {
      "fn": "pool.sellBid",
      "offset": [
        1395,
        1439
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "5773": {
      "fn": "pool.sellBid",
      "offset": [
        1395,
        1439
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "5774": {
      "fn": "pool.sellBid",
      "offset": [
        1395,
        1439
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "5776": {
      "fn": "pool.sellBid",
      "offset": [
        1395,
        1439
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5777": {
      "fn": "pool.sellBid",
      "offset": [
        1395,
        1439
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "5778": {
      "fn": "pool.sellBid",
      "offset": [
        1395,
        1439
      ],
      "op": "MUL",
      "path": "10"
    },
    "5779": {
      "fn": "pool.sellBid",
      "offset": [
        1395,
        1439
      ],
      "op": "ADD",
      "path": "10"
    },
    "5780": {
      "fn": "pool.sellBid",
      "offset": [
        1395,
        1439
      ],
      "op": "DUP1",
      "path": "10"
    },
    "5781": {
      "fn": "pool.sellBid",
      "offset": [
        1395,
        1439
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "5782": {
      "fn": "pool.sellBid",
      "offset": [
        1395,
        1439
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "5784": {
      "fn": "pool.sellBid",
      "offset": [
        1395,
        1439
      ],
      "op": "DUP3",
      "path": "10"
    },
    "5785": {
      "fn": "pool.sellBid",
      "offset": [
        1395,
        1439
      ],
      "op": "ADD",
      "path": "10"
    },
    "5786": {
      "fn": "pool.sellBid",
      "offset": [
        1395,
        1439
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "5787": {
      "fn": "pool.sellBid",
      "offset": [
        1395,
        1439
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x2"
    },
    "5789": {
      "fn": "pool.sellBid",
      "offset": [
        1395,
        1439
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5790": {
      "fn": "pool.sellBid",
      "offset": [
        1395,
        1439
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "5791": {
      "fn": "pool.sellBid",
      "offset": [
        1395,
        1439
      ],
      "op": "ADD",
      "path": "10"
    },
    "5792": {
      "fn": "pool.sellBid",
      "offset": [
        1395,
        1439
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "5793": {
      "fn": "pool.sellBid",
      "offset": [
        1395,
        1439
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5794": {
      "fn": "pool.sellBid",
      "offset": [
        1395,
        1439
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "5795": {
      "op": "POP"
    },
    "5796": {
      "offset": [
        1395,
        1439
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5797": {
      "fn": "pool.sellBid",
      "offset": [
        1395,
        1439
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "5798": {
      "op": "POP"
    },
    "5799": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5801": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5803": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5805": {
      "op": "SHL"
    },
    "5806": {
      "op": "SUB"
    },
    "5807": {
      "offset": [
        1395,
        1439
      ],
      "op": "AND",
      "path": "10"
    },
    "5808": {
      "fn": "pool.sellBid",
      "offset": [
        1395,
        1439
      ],
      "op": "DUP4",
      "path": "10"
    },
    "5809": {
      "fn": "pool.sellBid",
      "jump": "o",
      "offset": [
        1395,
        1439
      ],
      "op": "JUMP",
      "path": "10"
    },
    "5810": {
      "fn": "pool.SecondToExpiry",
      "offset": [
        15694,
        15807
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "5811": {
      "fn": "pool.SecondToExpiry",
      "offset": [
        15741,
        15748
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "5813": {
      "fn": "pool.SecondToExpiry",
      "offset": [
        15784,
        15799
      ],
      "op": "TIMESTAMP",
      "path": "10",
      "statement": 50
    },
    "5814": {
      "fn": "pool.SecondToExpiry",
      "offset": [
        15768,
        15770
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x6"
    },
    "5816": {
      "fn": "pool.SecondToExpiry",
      "offset": [
        15771,
        15773
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x7"
    },
    "5818": {
      "fn": "pool.SecondToExpiry",
      "offset": [
        15771,
        15773
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "5819": {
      "fn": "pool.SecondToExpiry",
      "offset": [
        15768,
        15774
      ],
      "op": "DUP2",
      "path": "10"
    },
    "5820": {
      "fn": "pool.SecondToExpiry",
      "offset": [
        15768,
        15774
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "5821": {
      "fn": "pool.SecondToExpiry",
      "offset": [
        15768,
        15774
      ],
      "op": "DUP2",
      "path": "10"
    },
    "5822": {
      "fn": "pool.SecondToExpiry",
      "offset": [
        15768,
        15774
      ],
      "op": "LT",
      "path": "10"
    },
    "5823": {
      "fn": "pool.SecondToExpiry",
      "offset": [
        15768,
        15774
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x16CA"
    },
    "5826": {
      "fn": "pool.SecondToExpiry",
      "offset": [
        15768,
        15774
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "5827": {
      "fn": "pool.SecondToExpiry",
      "offset": [
        15768,
        15774
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x16CA"
    },
    "5830": {
      "fn": "pool.SecondToExpiry",
      "offset": [
        15768,
        15774
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x298B"
    },
    "5833": {
      "fn": "pool.SecondToExpiry",
      "jump": "i",
      "offset": [
        15768,
        15774
      ],
      "op": "JUMP",
      "path": "10"
    },
    "5834": {
      "fn": "pool.SecondToExpiry",
      "offset": [
        15768,
        15774
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "5835": {
      "fn": "pool.SecondToExpiry",
      "offset": [
        15768,
        15774
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5836": {
      "fn": "pool.SecondToExpiry",
      "offset": [
        15768,
        15774
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "5838": {
      "fn": "pool.SecondToExpiry",
      "offset": [
        15768,
        15774
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "5839": {
      "fn": "pool.SecondToExpiry",
      "offset": [
        15768,
        15774
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "5841": {
      "fn": "pool.SecondToExpiry",
      "offset": [
        15768,
        15774
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "5843": {
      "fn": "pool.SecondToExpiry",
      "offset": [
        15768,
        15774
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "5844": {
      "fn": "pool.SecondToExpiry",
      "offset": [
        15768,
        15774
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5845": {
      "fn": "pool.SecondToExpiry",
      "offset": [
        15768,
        15774
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "5847": {
      "fn": "pool.SecondToExpiry",
      "offset": [
        15768,
        15774
      ],
      "op": "MUL",
      "path": "10"
    },
    "5848": {
      "fn": "pool.SecondToExpiry",
      "offset": [
        15768,
        15774
      ],
      "op": "ADD",
      "path": "10"
    },
    "5849": {
      "fn": "pool.SecondToExpiry",
      "offset": [
        15768,
        15781
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "5851": {
      "fn": "pool.SecondToExpiry",
      "offset": [
        15768,
        15781
      ],
      "op": "ADD",
      "path": "10"
    },
    "5852": {
      "fn": "pool.SecondToExpiry",
      "offset": [
        15768,
        15781
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "5853": {
      "fn": "pool.SecondToExpiry",
      "offset": [
        15768,
        15799
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x16E6"
    },
    "5856": {
      "fn": "pool.SecondToExpiry",
      "offset": [
        15768,
        15799
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "5857": {
      "fn": "pool.SecondToExpiry",
      "offset": [
        15768,
        15799
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5858": {
      "fn": "pool.SecondToExpiry",
      "offset": [
        15768,
        15799
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x29A1"
    },
    "5861": {
      "fn": "pool.SecondToExpiry",
      "jump": "i",
      "offset": [
        15768,
        15799
      ],
      "op": "JUMP",
      "path": "10"
    },
    "5862": {
      "fn": "pool.SecondToExpiry",
      "offset": [
        15768,
        15799
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "5863": {
      "fn": "pool.SecondToExpiry",
      "offset": [
        15760,
        15800
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5864": {
      "fn": "pool.SecondToExpiry",
      "offset": [
        15760,
        15800
      ],
      "op": "POP",
      "path": "10"
    },
    "5865": {
      "fn": "pool.SecondToExpiry",
      "offset": [
        15694,
        15807
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5866": {
      "fn": "pool.SecondToExpiry",
      "jump": "o",
      "offset": [
        15694,
        15807
      ],
      "op": "JUMP",
      "path": "10"
    },
    "5867": {
      "fn": "pool.cancelBid",
      "offset": [
        5513,
        6988
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "5868": {
      "fn": "pool.cancelBid",
      "offset": [
        5710,
        5720
      ],
      "op": "CALLER",
      "path": "10"
    },
    "5869": {
      "fn": "pool.cancelBid",
      "offset": [
        5678,
        5699
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "5871": {
      "fn": "pool.cancelBid",
      "offset": [
        5752,
        5758
      ],
      "op": "DUP1",
      "path": "10",
      "statement": 51
    },
    "5872": {
      "fn": "pool.cancelBid",
      "offset": [
        5752,
        5758
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "5873": {
      "fn": "pool.cancelBid",
      "offset": [
        5752,
        5758
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xFF"
    },
    "5875": {
      "fn": "pool.cancelBid",
      "offset": [
        5752,
        5758
      ],
      "op": "AND",
      "path": "10"
    },
    "5876": {
      "fn": "pool.cancelBid",
      "offset": [
        5752,
        5758
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "5878": {
      "fn": "pool.cancelBid",
      "offset": [
        5752,
        5782
      ],
      "op": "DUP2",
      "path": "10"
    },
    "5879": {
      "fn": "pool.cancelBid",
      "offset": [
        5752,
        5782
      ],
      "op": "GT",
      "path": "10"
    },
    "5880": {
      "fn": "pool.cancelBid",
      "offset": [
        5752,
        5782
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "5881": {
      "fn": "pool.cancelBid",
      "offset": [
        5752,
        5782
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1704"
    },
    "5884": {
      "fn": "pool.cancelBid",
      "offset": [
        5752,
        5782
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "5885": {
      "fn": "pool.cancelBid",
      "offset": [
        5752,
        5782
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1704"
    },
    "5888": {
      "fn": "pool.cancelBid",
      "offset": [
        5752,
        5782
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2870"
    },
    "5891": {
      "fn": "pool.cancelBid",
      "jump": "i",
      "offset": [
        5752,
        5782
      ],
      "op": "JUMP",
      "path": "10"
    },
    "5892": {
      "fn": "pool.cancelBid",
      "offset": [
        5752,
        5782
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "5893": {
      "branch": 110,
      "fn": "pool.cancelBid",
      "offset": [
        5752,
        5782
      ],
      "op": "EQ",
      "path": "10"
    },
    "5894": {
      "fn": "pool.cancelBid",
      "offset": [
        5731,
        5838
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1751"
    },
    "5897": {
      "branch": 110,
      "fn": "pool.cancelBid",
      "offset": [
        5731,
        5838
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "5898": {
      "fn": "pool.cancelBid",
      "offset": [
        5731,
        5838
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "5900": {
      "fn": "pool.cancelBid",
      "offset": [
        5731,
        5838
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "5901": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5905": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5907": {
      "op": "SHL"
    },
    "5908": {
      "fn": "pool.cancelBid",
      "offset": [
        5731,
        5838
      ],
      "op": "DUP2",
      "path": "10"
    },
    "5909": {
      "fn": "pool.cancelBid",
      "offset": [
        5731,
        5838
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "5910": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5912": {
      "fn": "pool.cancelBid",
      "offset": [
        5731,
        5838
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "5914": {
      "fn": "pool.cancelBid",
      "offset": [
        5731,
        5838
      ],
      "op": "DUP3",
      "path": "10"
    },
    "5915": {
      "fn": "pool.cancelBid",
      "offset": [
        5731,
        5838
      ],
      "op": "ADD",
      "path": "10"
    },
    "5916": {
      "op": "MSTORE"
    },
    "5917": {
      "op": "PUSH1",
      "value": "0x1E"
    },
    "5919": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5921": {
      "op": "DUP3"
    },
    "5922": {
      "op": "ADD"
    },
    "5923": {
      "op": "MSTORE"
    },
    "5924": {
      "op": "PUSH32",
      "value": "0x636F6E747261637420627573792C2074727920616761696E206C617465720000"
    },
    "5957": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5959": {
      "op": "DUP3"
    },
    "5960": {
      "op": "ADD"
    },
    "5961": {
      "op": "MSTORE"
    },
    "5962": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5964": {
      "op": "ADD"
    },
    "5965": {
      "fn": "pool.cancelBid",
      "offset": [
        5731,
        5838
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x7DF"
    },
    "5968": {
      "op": "JUMP"
    },
    "5969": {
      "fn": "pool.cancelBid",
      "offset": [
        5731,
        5838
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "5970": {
      "fn": "pool.cancelBid",
      "offset": [
        5893,
        5910
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 52,
      "value": "0x1"
    },
    "5972": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5974": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5976": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5978": {
      "op": "SHL"
    },
    "5979": {
      "op": "SUB"
    },
    "5980": {
      "fn": "pool.cancelBid",
      "offset": [
        5869,
        5880
      ],
      "op": "DUP3",
      "path": "10"
    },
    "5981": {
      "fn": "pool.cancelBid",
      "offset": [
        5869,
        5880
      ],
      "op": "AND",
      "path": "10"
    },
    "5982": {
      "fn": "pool.cancelBid",
      "offset": [
        5869,
        5880
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "5984": {
      "fn": "pool.cancelBid",
      "offset": [
        5869,
        5880
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5985": {
      "fn": "pool.cancelBid",
      "offset": [
        5869,
        5880
      ],
      "op": "DUP2",
      "path": "10"
    },
    "5986": {
      "fn": "pool.cancelBid",
      "offset": [
        5869,
        5880
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "5987": {
      "fn": "pool.cancelBid",
      "offset": [
        5869,
        5873
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x5"
    },
    "5989": {
      "fn": "pool.cancelBid",
      "offset": [
        5869,
        5880
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "5991": {
      "fn": "pool.cancelBid",
      "offset": [
        5869,
        5880
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5992": {
      "fn": "pool.cancelBid",
      "offset": [
        5869,
        5880
      ],
      "op": "DUP2",
      "path": "10"
    },
    "5993": {
      "fn": "pool.cancelBid",
      "offset": [
        5869,
        5880
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "5994": {
      "fn": "pool.cancelBid",
      "offset": [
        5869,
        5880
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "5996": {
      "fn": "pool.cancelBid",
      "offset": [
        5869,
        5880
      ],
      "op": "DUP1",
      "path": "10"
    },
    "5997": {
      "fn": "pool.cancelBid",
      "offset": [
        5869,
        5880
      ],
      "op": "DUP4",
      "path": "10"
    },
    "5998": {
      "fn": "pool.cancelBid",
      "offset": [
        5869,
        5880
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "5999": {
      "fn": "pool.cancelBid",
      "offset": [
        5881,
        5883
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x7"
    },
    "6001": {
      "fn": "pool.cancelBid",
      "offset": [
        5881,
        5883
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "6002": {
      "fn": "pool.cancelBid",
      "offset": [
        5869,
        5884
      ],
      "op": "DUP5",
      "path": "10"
    },
    "6003": {
      "fn": "pool.cancelBid",
      "offset": [
        5869,
        5884
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "6004": {
      "fn": "pool.cancelBid",
      "offset": [
        5869,
        5884
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6005": {
      "fn": "pool.cancelBid",
      "offset": [
        5869,
        5884
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "6006": {
      "fn": "pool.cancelBid",
      "offset": [
        5869,
        5884
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "6007": {
      "fn": "pool.cancelBid",
      "offset": [
        5869,
        5884
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6008": {
      "fn": "pool.cancelBid",
      "offset": [
        5869,
        5884
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "6009": {
      "fn": "pool.cancelBid",
      "offset": [
        5869,
        5889
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "6011": {
      "fn": "pool.cancelBid",
      "offset": [
        5869,
        5889
      ],
      "op": "ADD",
      "path": "10"
    },
    "6012": {
      "fn": "pool.cancelBid",
      "offset": [
        5869,
        5889
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "6013": {
      "fn": "pool.cancelBid",
      "offset": [
        5869,
        5889
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xFF"
    },
    "6015": {
      "fn": "pool.cancelBid",
      "offset": [
        5869,
        5889
      ],
      "op": "AND",
      "path": "10"
    },
    "6016": {
      "fn": "pool.cancelBid",
      "offset": [
        5869,
        5910
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "6018": {
      "fn": "pool.cancelBid",
      "offset": [
        5869,
        5910
      ],
      "op": "DUP2",
      "path": "10"
    },
    "6019": {
      "fn": "pool.cancelBid",
      "offset": [
        5869,
        5910
      ],
      "op": "GT",
      "path": "10"
    },
    "6020": {
      "fn": "pool.cancelBid",
      "offset": [
        5869,
        5910
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "6021": {
      "fn": "pool.cancelBid",
      "offset": [
        5869,
        5910
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1790"
    },
    "6024": {
      "fn": "pool.cancelBid",
      "offset": [
        5869,
        5910
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "6025": {
      "fn": "pool.cancelBid",
      "offset": [
        5869,
        5910
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1790"
    },
    "6028": {
      "fn": "pool.cancelBid",
      "offset": [
        5869,
        5910
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2870"
    },
    "6031": {
      "fn": "pool.cancelBid",
      "jump": "i",
      "offset": [
        5869,
        5910
      ],
      "op": "JUMP",
      "path": "10"
    },
    "6032": {
      "fn": "pool.cancelBid",
      "offset": [
        5869,
        5910
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "6033": {
      "branch": 111,
      "fn": "pool.cancelBid",
      "offset": [
        5869,
        5910
      ],
      "op": "EQ",
      "path": "10"
    },
    "6034": {
      "fn": "pool.cancelBid",
      "offset": [
        5848,
        5964
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x17DD"
    },
    "6037": {
      "branch": 111,
      "fn": "pool.cancelBid",
      "offset": [
        5848,
        5964
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "6038": {
      "fn": "pool.cancelBid",
      "offset": [
        5848,
        5964
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "6040": {
      "fn": "pool.cancelBid",
      "offset": [
        5848,
        5964
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "6041": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6045": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6047": {
      "op": "SHL"
    },
    "6048": {
      "fn": "pool.cancelBid",
      "offset": [
        5848,
        5964
      ],
      "op": "DUP2",
      "path": "10"
    },
    "6049": {
      "fn": "pool.cancelBid",
      "offset": [
        5848,
        5964
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "6050": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6052": {
      "fn": "pool.cancelBid",
      "offset": [
        5848,
        5964
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "6054": {
      "fn": "pool.cancelBid",
      "offset": [
        5848,
        5964
      ],
      "op": "DUP3",
      "path": "10"
    },
    "6055": {
      "fn": "pool.cancelBid",
      "offset": [
        5848,
        5964
      ],
      "op": "ADD",
      "path": "10"
    },
    "6056": {
      "op": "MSTORE"
    },
    "6057": {
      "op": "PUSH1",
      "value": "0x1C"
    },
    "6059": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6061": {
      "op": "DUP3"
    },
    "6062": {
      "op": "ADD"
    },
    "6063": {
      "op": "MSTORE"
    },
    "6064": {
      "op": "PUSH32",
      "value": "0x796F75206E65656420746F20627579206F7074696F6E20666972737400000000"
    },
    "6097": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6099": {
      "op": "DUP3"
    },
    "6100": {
      "op": "ADD"
    },
    "6101": {
      "op": "MSTORE"
    },
    "6102": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6104": {
      "op": "ADD"
    },
    "6105": {
      "fn": "pool.cancelBid",
      "offset": [
        5848,
        5964
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x7DF"
    },
    "6108": {
      "op": "JUMP"
    },
    "6109": {
      "fn": "pool.cancelBid",
      "offset": [
        5848,
        5964
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "6110": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6112": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6114": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6116": {
      "op": "SHL"
    },
    "6117": {
      "op": "SUB"
    },
    "6118": {
      "fn": "pool.cancelBid",
      "offset": [
        5995,
        6006
      ],
      "op": "DUP2",
      "path": "10",
      "statement": 53
    },
    "6119": {
      "fn": "pool.cancelBid",
      "offset": [
        5995,
        6006
      ],
      "op": "AND",
      "path": "10"
    },
    "6120": {
      "fn": "pool.cancelBid",
      "offset": [
        6027,
        6028
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "6122": {
      "fn": "pool.cancelBid",
      "offset": [
        5995,
        6006
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6123": {
      "fn": "pool.cancelBid",
      "offset": [
        5995,
        6006
      ],
      "op": "DUP2",
      "path": "10"
    },
    "6124": {
      "fn": "pool.cancelBid",
      "offset": [
        5995,
        6006
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "6125": {
      "fn": "pool.cancelBid",
      "offset": [
        5995,
        5999
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x5"
    },
    "6127": {
      "fn": "pool.cancelBid",
      "offset": [
        5995,
        6006
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "6129": {
      "fn": "pool.cancelBid",
      "offset": [
        5995,
        6006
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6130": {
      "fn": "pool.cancelBid",
      "offset": [
        5995,
        6006
      ],
      "op": "DUP2",
      "path": "10"
    },
    "6131": {
      "fn": "pool.cancelBid",
      "offset": [
        5995,
        6006
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "6132": {
      "fn": "pool.cancelBid",
      "offset": [
        5995,
        6006
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "6134": {
      "fn": "pool.cancelBid",
      "offset": [
        5995,
        6006
      ],
      "op": "DUP1",
      "path": "10"
    },
    "6135": {
      "fn": "pool.cancelBid",
      "offset": [
        5995,
        6006
      ],
      "op": "DUP4",
      "path": "10"
    },
    "6136": {
      "fn": "pool.cancelBid",
      "offset": [
        5995,
        6006
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "6137": {
      "fn": "pool.cancelBid",
      "offset": [
        6007,
        6009
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x7"
    },
    "6139": {
      "fn": "pool.cancelBid",
      "offset": [
        6007,
        6009
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "6140": {
      "fn": "pool.cancelBid",
      "offset": [
        5995,
        6010
      ],
      "op": "DUP5",
      "path": "10"
    },
    "6141": {
      "fn": "pool.cancelBid",
      "offset": [
        5995,
        6010
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "6142": {
      "fn": "pool.cancelBid",
      "offset": [
        5995,
        6010
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6143": {
      "fn": "pool.cancelBid",
      "offset": [
        5995,
        6010
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "6144": {
      "fn": "pool.cancelBid",
      "offset": [
        5995,
        6010
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "6145": {
      "fn": "pool.cancelBid",
      "offset": [
        5995,
        6010
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6146": {
      "fn": "pool.cancelBid",
      "offset": [
        5995,
        6010
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "6147": {
      "fn": "pool.cancelBid",
      "offset": [
        5995,
        6024
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x2"
    },
    "6149": {
      "fn": "pool.cancelBid",
      "offset": [
        5995,
        6024
      ],
      "op": "ADD",
      "path": "10"
    },
    "6150": {
      "fn": "pool.cancelBid",
      "offset": [
        5995,
        6024
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "6151": {
      "fn": "pool.cancelBid",
      "offset": [
        5974,
        6092
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1861"
    },
    "6154": {
      "fn": "pool.cancelBid",
      "offset": [
        5974,
        6092
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "6155": {
      "fn": "pool.cancelBid",
      "offset": [
        5974,
        6092
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "6157": {
      "fn": "pool.cancelBid",
      "offset": [
        5974,
        6092
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "6158": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6162": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6164": {
      "op": "SHL"
    },
    "6165": {
      "fn": "pool.cancelBid",
      "offset": [
        5974,
        6092
      ],
      "op": "DUP2",
      "path": "10"
    },
    "6166": {
      "fn": "pool.cancelBid",
      "offset": [
        5974,
        6092
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "6167": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6169": {
      "fn": "pool.cancelBid",
      "offset": [
        5974,
        6092
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "6171": {
      "fn": "pool.cancelBid",
      "offset": [
        5974,
        6092
      ],
      "op": "DUP3",
      "path": "10"
    },
    "6172": {
      "fn": "pool.cancelBid",
      "offset": [
        5974,
        6092
      ],
      "op": "ADD",
      "path": "10"
    },
    "6173": {
      "op": "MSTORE"
    },
    "6174": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "6176": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6178": {
      "op": "DUP3"
    },
    "6179": {
      "op": "ADD"
    },
    "6180": {
      "op": "MSTORE"
    },
    "6181": {
      "op": "PUSH32",
      "value": "0x796F7572206F64657220686173206265656E2066696C6C6564206F722063616E"
    },
    "6214": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6216": {
      "op": "DUP3"
    },
    "6217": {
      "op": "ADD"
    },
    "6218": {
      "op": "MSTORE"
    },
    "6219": {
      "op": "PUSH6",
      "value": "0x18D95B1B1959"
    },
    "6226": {
      "op": "PUSH1",
      "value": "0xD2"
    },
    "6228": {
      "op": "SHL"
    },
    "6229": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6231": {
      "op": "DUP3"
    },
    "6232": {
      "op": "ADD"
    },
    "6233": {
      "op": "MSTORE"
    },
    "6234": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6236": {
      "op": "ADD"
    },
    "6237": {
      "fn": "pool.cancelBid",
      "offset": [
        5974,
        6092
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x7DF"
    },
    "6240": {
      "op": "JUMP"
    },
    "6241": {
      "fn": "pool.cancelBid",
      "offset": [
        5974,
        6092
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "6242": {
      "fn": "pool.cancelBid",
      "offset": [
        6102,
        6108
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 54,
      "value": "0x0"
    },
    "6244": {
      "fn": "pool.cancelBid",
      "offset": [
        6102,
        6133
      ],
      "op": "DUP1",
      "path": "10"
    },
    "6245": {
      "fn": "pool.cancelBid",
      "offset": [
        6102,
        6133
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "6246": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "6248": {
      "op": "NOT"
    },
    "6249": {
      "fn": "pool.cancelBid",
      "offset": [
        6102,
        6133
      ],
      "op": "AND",
      "path": "10"
    },
    "6250": {
      "fn": "pool.cancelBid",
      "offset": [
        6111,
        6133
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "6252": {
      "fn": "pool.cancelBid",
      "offset": [
        6102,
        6133
      ],
      "op": "OR",
      "path": "10"
    },
    "6253": {
      "fn": "pool.cancelBid",
      "offset": [
        6102,
        6133
      ],
      "op": "DUP2",
      "path": "10"
    },
    "6254": {
      "fn": "pool.cancelBid",
      "offset": [
        6102,
        6133
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "6255": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6257": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6259": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6261": {
      "op": "SHL"
    },
    "6262": {
      "op": "SUB"
    },
    "6263": {
      "fn": "pool.cancelBid",
      "offset": [
        6247,
        6258
      ],
      "op": "DUP3",
      "path": "10",
      "statement": 55
    },
    "6264": {
      "fn": "pool.cancelBid",
      "offset": [
        6247,
        6258
      ],
      "op": "AND",
      "path": "10"
    },
    "6265": {
      "fn": "pool.cancelBid",
      "offset": [
        6247,
        6258
      ],
      "op": "DUP1",
      "path": "10"
    },
    "6266": {
      "fn": "pool.cancelBid",
      "offset": [
        6247,
        6258
      ],
      "op": "DUP3",
      "path": "10"
    },
    "6267": {
      "fn": "pool.cancelBid",
      "offset": [
        6247,
        6258
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "6268": {
      "fn": "pool.cancelBid",
      "offset": [
        6247,
        6251
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x5"
    },
    "6270": {
      "fn": "pool.cancelBid",
      "offset": [
        6247,
        6258
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "6272": {
      "fn": "pool.cancelBid",
      "offset": [
        6247,
        6258
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6273": {
      "fn": "pool.cancelBid",
      "offset": [
        6247,
        6258
      ],
      "op": "DUP2",
      "path": "10"
    },
    "6274": {
      "fn": "pool.cancelBid",
      "offset": [
        6247,
        6258
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "6275": {
      "fn": "pool.cancelBid",
      "offset": [
        6247,
        6258
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "6277": {
      "fn": "pool.cancelBid",
      "offset": [
        6247,
        6258
      ],
      "op": "DUP1",
      "path": "10"
    },
    "6278": {
      "fn": "pool.cancelBid",
      "offset": [
        6247,
        6258
      ],
      "op": "DUP5",
      "path": "10"
    },
    "6279": {
      "fn": "pool.cancelBid",
      "offset": [
        6247,
        6258
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "6280": {
      "fn": "pool.cancelBid",
      "offset": [
        6259,
        6261
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x7"
    },
    "6282": {
      "fn": "pool.cancelBid",
      "offset": [
        6259,
        6261
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "6283": {
      "fn": "pool.cancelBid",
      "offset": [
        6247,
        6262
      ],
      "op": "DUP6",
      "path": "10"
    },
    "6284": {
      "fn": "pool.cancelBid",
      "offset": [
        6247,
        6262
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "6285": {
      "fn": "pool.cancelBid",
      "offset": [
        6247,
        6262
      ],
      "op": "DUP3",
      "path": "10"
    },
    "6286": {
      "fn": "pool.cancelBid",
      "offset": [
        6247,
        6262
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "6287": {
      "fn": "pool.cancelBid",
      "offset": [
        6247,
        6262
      ],
      "op": "DUP1",
      "path": "10"
    },
    "6288": {
      "fn": "pool.cancelBid",
      "offset": [
        6247,
        6262
      ],
      "op": "DUP5",
      "path": "10"
    },
    "6289": {
      "fn": "pool.cancelBid",
      "offset": [
        6247,
        6262
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "6290": {
      "fn": "pool.cancelBid",
      "offset": [
        6247,
        6276
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x2"
    },
    "6292": {
      "fn": "pool.cancelBid",
      "offset": [
        6247,
        6276
      ],
      "op": "ADD",
      "path": "10"
    },
    "6293": {
      "fn": "pool.cancelBid",
      "offset": [
        6247,
        6276
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "6294": {
      "fn": "pool.cancelBid",
      "offset": [
        6224,
        6243
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "6295": {
      "fn": "pool.cancelBid",
      "offset": [
        6224,
        6243
      ],
      "op": "DUP5",
      "path": "10"
    },
    "6296": {
      "fn": "pool.cancelBid",
      "offset": [
        6224,
        6243
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "6297": {
      "fn": "pool.cancelBid",
      "offset": [
        6224,
        6236
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "6299": {
      "fn": "pool.cancelBid",
      "offset": [
        6224,
        6243
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6300": {
      "fn": "pool.cancelBid",
      "offset": [
        6224,
        6243
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "6301": {
      "fn": "pool.cancelBid",
      "offset": [
        6224,
        6243
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "6302": {
      "fn": "pool.cancelBid",
      "offset": [
        6224,
        6243
      ],
      "op": "DUP3",
      "path": "10"
    },
    "6303": {
      "fn": "pool.cancelBid",
      "offset": [
        6224,
        6243
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "6304": {
      "fn": "pool.cancelBid",
      "offset": [
        6224,
        6276
      ],
      "op": "DUP1",
      "path": "10"
    },
    "6305": {
      "fn": "pool.cancelBid",
      "offset": [
        6224,
        6276
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "6306": {
      "fn": "pool.cancelBid",
      "offset": [
        6247,
        6276
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "6307": {
      "fn": "pool.cancelBid",
      "offset": [
        6247,
        6276
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "6308": {
      "fn": "pool.cancelBid",
      "offset": [
        6224,
        6243
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6309": {
      "fn": "pool.cancelBid",
      "offset": [
        6224,
        6243
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "6310": {
      "fn": "pool.cancelBid",
      "offset": [
        6224,
        6276
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x18B0"
    },
    "6313": {
      "fn": "pool.cancelBid",
      "offset": [
        6224,
        6276
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6314": {
      "fn": "pool.cancelBid",
      "offset": [
        6247,
        6276
      ],
      "op": "DUP5",
      "path": "10"
    },
    "6315": {
      "fn": "pool.cancelBid",
      "offset": [
        6247,
        6276
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6316": {
      "fn": "pool.cancelBid",
      "offset": [
        6224,
        6276
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2973"
    },
    "6319": {
      "fn": "pool.cancelBid",
      "jump": "i",
      "offset": [
        6224,
        6276
      ],
      "op": "JUMP",
      "path": "10"
    },
    "6320": {
      "fn": "pool.cancelBid",
      "offset": [
        6224,
        6276
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "6321": {
      "fn": "pool.cancelBid",
      "offset": [
        6224,
        6276
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6322": {
      "fn": "pool.cancelBid",
      "offset": [
        6224,
        6276
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "6323": {
      "fn": "pool.cancelBid",
      "offset": [
        6224,
        6276
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "6324": {
      "op": "POP"
    },
    "6325": {
      "op": "POP"
    },
    "6326": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6328": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6330": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6332": {
      "op": "SHL"
    },
    "6333": {
      "op": "SUB"
    },
    "6334": {
      "fn": "pool.cancelBid",
      "offset": [
        6286,
        6297
      ],
      "op": "DUP2",
      "path": "10",
      "statement": 56
    },
    "6335": {
      "fn": "pool.cancelBid",
      "offset": [
        6286,
        6297
      ],
      "op": "AND",
      "path": "10"
    },
    "6336": {
      "fn": "pool.cancelBid",
      "offset": [
        6318,
        6319
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "6338": {
      "fn": "pool.cancelBid",
      "offset": [
        6286,
        6297
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6339": {
      "fn": "pool.cancelBid",
      "offset": [
        6286,
        6297
      ],
      "op": "DUP2",
      "path": "10"
    },
    "6340": {
      "fn": "pool.cancelBid",
      "offset": [
        6286,
        6297
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "6341": {
      "fn": "pool.cancelBid",
      "offset": [
        6286,
        6290
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x5"
    },
    "6343": {
      "fn": "pool.cancelBid",
      "offset": [
        6286,
        6297
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "6345": {
      "fn": "pool.cancelBid",
      "offset": [
        6286,
        6297
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6346": {
      "fn": "pool.cancelBid",
      "offset": [
        6286,
        6297
      ],
      "op": "DUP2",
      "path": "10"
    },
    "6347": {
      "fn": "pool.cancelBid",
      "offset": [
        6286,
        6297
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "6348": {
      "fn": "pool.cancelBid",
      "offset": [
        6286,
        6297
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "6350": {
      "fn": "pool.cancelBid",
      "offset": [
        6286,
        6297
      ],
      "op": "DUP1",
      "path": "10"
    },
    "6351": {
      "fn": "pool.cancelBid",
      "offset": [
        6286,
        6297
      ],
      "op": "DUP4",
      "path": "10"
    },
    "6352": {
      "fn": "pool.cancelBid",
      "offset": [
        6286,
        6297
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "6353": {
      "fn": "pool.cancelBid",
      "offset": [
        6298,
        6300
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x7"
    },
    "6355": {
      "fn": "pool.cancelBid",
      "offset": [
        6298,
        6300
      ],
      "op": "DUP1",
      "path": "10"
    },
    "6356": {
      "fn": "pool.cancelBid",
      "offset": [
        6298,
        6300
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "6357": {
      "fn": "pool.cancelBid",
      "offset": [
        6286,
        6301
      ],
      "op": "DUP6",
      "path": "10"
    },
    "6358": {
      "fn": "pool.cancelBid",
      "offset": [
        6286,
        6301
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "6359": {
      "fn": "pool.cancelBid",
      "offset": [
        6286,
        6301
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "6360": {
      "fn": "pool.cancelBid",
      "offset": [
        6286,
        6301
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "6361": {
      "fn": "pool.cancelBid",
      "offset": [
        6286,
        6301
      ],
      "op": "DUP3",
      "path": "10"
    },
    "6362": {
      "fn": "pool.cancelBid",
      "offset": [
        6286,
        6301
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "6363": {
      "fn": "pool.cancelBid",
      "offset": [
        6286,
        6315
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x2"
    },
    "6365": {
      "fn": "pool.cancelBid",
      "offset": [
        6286,
        6315
      ],
      "op": "ADD",
      "path": "10"
    },
    "6366": {
      "fn": "pool.cancelBid",
      "offset": [
        6286,
        6319
      ],
      "op": "DUP3",
      "path": "10"
    },
    "6367": {
      "fn": "pool.cancelBid",
      "offset": [
        6286,
        6319
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6368": {
      "fn": "pool.cancelBid",
      "offset": [
        6286,
        6319
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "6369": {
      "fn": "pool.cancelBid",
      "offset": [
        6409,
        6411
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "6370": {
      "fn": "pool.cancelBid",
      "offset": [
        6406,
        6408
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x6"
    },
    "6372": {
      "fn": "pool.cancelBid",
      "offset": [
        6406,
        6412
      ],
      "op": "DUP1",
      "path": "10"
    },
    "6373": {
      "fn": "pool.cancelBid",
      "offset": [
        6406,
        6412
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "6374": {
      "fn": "pool.cancelBid",
      "offset": [
        6406,
        6408
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6375": {
      "fn": "pool.cancelBid",
      "offset": [
        6406,
        6408
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "6376": {
      "fn": "pool.cancelBid",
      "offset": [
        6409,
        6411
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6377": {
      "fn": "pool.cancelBid",
      "offset": [
        6406,
        6412
      ],
      "op": "DUP2",
      "path": "10"
    },
    "6378": {
      "fn": "pool.cancelBid",
      "offset": [
        6406,
        6412
      ],
      "op": "LT",
      "path": "10"
    },
    "6379": {
      "fn": "pool.cancelBid",
      "offset": [
        6406,
        6412
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x18F6"
    },
    "6382": {
      "fn": "pool.cancelBid",
      "offset": [
        6406,
        6412
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "6383": {
      "fn": "pool.cancelBid",
      "offset": [
        6406,
        6412
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x18F6"
    },
    "6386": {
      "fn": "pool.cancelBid",
      "offset": [
        6406,
        6412
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x298B"
    },
    "6389": {
      "fn": "pool.cancelBid",
      "jump": "i",
      "offset": [
        6406,
        6412
      ],
      "op": "JUMP",
      "path": "10"
    },
    "6390": {
      "fn": "pool.cancelBid",
      "offset": [
        6406,
        6412
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "6391": {
      "fn": "pool.cancelBid",
      "offset": [
        6406,
        6412
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6392": {
      "fn": "pool.cancelBid",
      "offset": [
        6406,
        6412
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "6394": {
      "fn": "pool.cancelBid",
      "offset": [
        6406,
        6412
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "6395": {
      "fn": "pool.cancelBid",
      "offset": [
        6406,
        6412
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "6397": {
      "fn": "pool.cancelBid",
      "offset": [
        6406,
        6412
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "6399": {
      "fn": "pool.cancelBid",
      "offset": [
        6406,
        6412
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "6400": {
      "fn": "pool.cancelBid",
      "offset": [
        6406,
        6412
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6401": {
      "fn": "pool.cancelBid",
      "offset": [
        6406,
        6412
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "6403": {
      "fn": "pool.cancelBid",
      "offset": [
        6406,
        6412
      ],
      "op": "MUL",
      "path": "10"
    },
    "6404": {
      "fn": "pool.cancelBid",
      "offset": [
        6406,
        6412
      ],
      "op": "ADD",
      "path": "10"
    },
    "6405": {
      "fn": "pool.cancelBid",
      "offset": [
        6406,
        6418
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "6407": {
      "fn": "pool.cancelBid",
      "offset": [
        6406,
        6418
      ],
      "op": "ADD",
      "path": "10"
    },
    "6408": {
      "fn": "pool.cancelBid",
      "offset": [
        6377,
        6418
      ],
      "op": "DUP1",
      "path": "10"
    },
    "6409": {
      "fn": "pool.cancelBid",
      "offset": [
        6377,
        6418
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "6410": {
      "fn": "pool.cancelBid",
      "offset": [
        6377,
        6418
      ],
      "op": "DUP1",
      "path": "10"
    },
    "6411": {
      "fn": "pool.cancelBid",
      "offset": [
        6377,
        6418
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "6413": {
      "fn": "pool.cancelBid",
      "offset": [
        6377,
        6418
      ],
      "op": "MUL",
      "path": "10"
    },
    "6414": {
      "fn": "pool.cancelBid",
      "offset": [
        6377,
        6418
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "6416": {
      "fn": "pool.cancelBid",
      "offset": [
        6377,
        6418
      ],
      "op": "ADD",
      "path": "10"
    },
    "6417": {
      "fn": "pool.cancelBid",
      "offset": [
        6377,
        6418
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "6419": {
      "fn": "pool.cancelBid",
      "offset": [
        6377,
        6418
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "6420": {
      "fn": "pool.cancelBid",
      "offset": [
        6377,
        6418
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6421": {
      "fn": "pool.cancelBid",
      "offset": [
        6377,
        6418
      ],
      "op": "DUP2",
      "path": "10"
    },
    "6422": {
      "fn": "pool.cancelBid",
      "offset": [
        6377,
        6418
      ],
      "op": "ADD",
      "path": "10"
    },
    "6423": {
      "fn": "pool.cancelBid",
      "offset": [
        6377,
        6418
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "6425": {
      "fn": "pool.cancelBid",
      "offset": [
        6377,
        6418
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "6426": {
      "fn": "pool.cancelBid",
      "offset": [
        6377,
        6418
      ],
      "op": "DUP1",
      "path": "10"
    },
    "6427": {
      "fn": "pool.cancelBid",
      "offset": [
        6377,
        6418
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "6428": {
      "fn": "pool.cancelBid",
      "offset": [
        6377,
        6418
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "6429": {
      "fn": "pool.cancelBid",
      "offset": [
        6377,
        6418
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6430": {
      "fn": "pool.cancelBid",
      "offset": [
        6377,
        6418
      ],
      "op": "DUP2",
      "path": "10"
    },
    "6431": {
      "fn": "pool.cancelBid",
      "offset": [
        6377,
        6418
      ],
      "op": "DUP2",
      "path": "10"
    },
    "6432": {
      "fn": "pool.cancelBid",
      "offset": [
        6377,
        6418
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "6433": {
      "fn": "pool.cancelBid",
      "offset": [
        6377,
        6418
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "6435": {
      "fn": "pool.cancelBid",
      "offset": [
        6377,
        6418
      ],
      "op": "ADD",
      "path": "10"
    },
    "6436": {
      "fn": "pool.cancelBid",
      "offset": [
        6377,
        6418
      ],
      "op": "DUP3",
      "path": "10"
    },
    "6437": {
      "fn": "pool.cancelBid",
      "offset": [
        6377,
        6418
      ],
      "op": "DUP1",
      "path": "10"
    },
    "6438": {
      "fn": "pool.cancelBid",
      "offset": [
        6377,
        6418
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "6439": {
      "fn": "pool.cancelBid",
      "offset": [
        6377,
        6418
      ],
      "op": "DUP1",
      "path": "10"
    },
    "6440": {
      "fn": "pool.cancelBid",
      "offset": [
        6377,
        6418
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "6441": {
      "fn": "pool.cancelBid",
      "offset": [
        6377,
        6418
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1951"
    },
    "6444": {
      "fn": "pool.cancelBid",
      "offset": [
        6377,
        6418
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "6445": {
      "fn": "pool.cancelBid",
      "offset": [
        6377,
        6418
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "6447": {
      "fn": "pool.cancelBid",
      "offset": [
        6377,
        6418
      ],
      "op": "MUL",
      "path": "10"
    },
    "6448": {
      "fn": "pool.cancelBid",
      "offset": [
        6377,
        6418
      ],
      "op": "DUP3",
      "path": "10"
    },
    "6449": {
      "fn": "pool.cancelBid",
      "offset": [
        6377,
        6418
      ],
      "op": "ADD",
      "path": "10"
    },
    "6450": {
      "fn": "pool.cancelBid",
      "offset": [
        6377,
        6418
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "6451": {
      "fn": "pool.cancelBid",
      "offset": [
        6377,
        6418
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6452": {
      "fn": "pool.cancelBid",
      "offset": [
        6377,
        6418
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "6454": {
      "fn": "pool.cancelBid",
      "offset": [
        6377,
        6418
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "6455": {
      "fn": "pool.cancelBid",
      "offset": [
        6377,
        6418
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "6457": {
      "fn": "pool.cancelBid",
      "offset": [
        6377,
        6418
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "6459": {
      "fn": "pool.cancelBid",
      "offset": [
        6377,
        6418
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "6460": {
      "fn": "pool.cancelBid",
      "offset": [
        6377,
        6418
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6461": {
      "fn": "pool.cancelBid",
      "offset": [
        6377,
        6418
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "6462": {
      "fn": "pool.cancelBid",
      "offset": [
        6377,
        6418
      ],
      "op": "DUP2",
      "path": "10"
    },
    "6463": {
      "fn": "pool.cancelBid",
      "offset": [
        6377,
        6418
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "6464": {
      "fn": "pool.cancelBid",
      "offset": [
        6377,
        6418
      ],
      "op": "DUP2",
      "path": "10"
    },
    "6465": {
      "fn": "pool.cancelBid",
      "offset": [
        6377,
        6418
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "6466": {
      "fn": "pool.cancelBid",
      "offset": [
        6377,
        6418
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "6468": {
      "fn": "pool.cancelBid",
      "offset": [
        6377,
        6418
      ],
      "op": "ADD",
      "path": "10"
    },
    "6469": {
      "fn": "pool.cancelBid",
      "offset": [
        6377,
        6418
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6470": {
      "fn": "pool.cancelBid",
      "offset": [
        6377,
        6418
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "6472": {
      "fn": "pool.cancelBid",
      "offset": [
        6377,
        6418
      ],
      "op": "ADD",
      "path": "10"
    },
    "6473": {
      "fn": "pool.cancelBid",
      "offset": [
        6377,
        6418
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6474": {
      "fn": "pool.cancelBid",
      "offset": [
        6377,
        6418
      ],
      "op": "DUP1",
      "path": "10"
    },
    "6475": {
      "fn": "pool.cancelBid",
      "offset": [
        6377,
        6418
      ],
      "op": "DUP4",
      "path": "10"
    },
    "6476": {
      "fn": "pool.cancelBid",
      "offset": [
        6377,
        6418
      ],
      "op": "GT",
      "path": "10"
    },
    "6477": {
      "fn": "pool.cancelBid",
      "offset": [
        6377,
        6418
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x193D"
    },
    "6480": {
      "fn": "pool.cancelBid",
      "offset": [
        6377,
        6418
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "6481": {
      "fn": "pool.cancelBid",
      "offset": [
        6377,
        6418
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "6482": {
      "fn": "pool.cancelBid",
      "offset": [
        6377,
        6418
      ],
      "op": "POP",
      "path": "10"
    },
    "6483": {
      "fn": "pool.cancelBid",
      "offset": [
        6377,
        6418
      ],
      "op": "POP",
      "path": "10"
    },
    "6484": {
      "fn": "pool.cancelBid",
      "offset": [
        6377,
        6418
      ],
      "op": "POP",
      "path": "10"
    },
    "6485": {
      "fn": "pool.cancelBid",
      "offset": [
        6377,
        6418
      ],
      "op": "POP",
      "path": "10"
    },
    "6486": {
      "fn": "pool.cancelBid",
      "offset": [
        6377,
        6418
      ],
      "op": "POP",
      "path": "10"
    },
    "6487": {
      "fn": "pool.cancelBid",
      "offset": [
        6377,
        6418
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6488": {
      "fn": "pool.cancelBid",
      "offset": [
        6377,
        6418
      ],
      "op": "POP",
      "path": "10"
    },
    "6489": {
      "fn": "pool.cancelBid",
      "offset": [
        6428,
        6437
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "6491": {
      "fn": "pool.cancelBid",
      "offset": [
        6456,
        6465
      ],
      "op": "DUP1",
      "path": "10"
    },
    "6492": {
      "fn": "pool.cancelBid",
      "offset": [
        6451,
        6840
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "6493": {
      "fn": "pool.cancelBid",
      "offset": [
        6475,
        6484
      ],
      "op": "DUP3",
      "path": "10"
    },
    "6494": {
      "fn": "pool.cancelBid",
      "offset": [
        6475,
        6491
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "6495": {
      "fn": "pool.cancelBid",
      "offset": [
        6471,
        6472
      ],
      "op": "DUP2",
      "path": "10"
    },
    "6496": {
      "fn": "pool.cancelBid",
      "offset": [
        6471,
        6491
      ],
      "op": "LT",
      "path": "10"
    },
    "6497": {
      "fn": "pool.cancelBid",
      "offset": [
        6451,
        6840
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "6498": {
      "fn": "pool.cancelBid",
      "offset": [
        6451,
        6840
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1ADB"
    },
    "6501": {
      "fn": "pool.cancelBid",
      "offset": [
        6451,
        6840
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "6502": {
      "fn": "pool.cancelBid",
      "offset": [
        6550,
        6555
      ],
      "op": "DUP4",
      "path": "10"
    },
    "6503": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6505": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6507": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6509": {
      "op": "SHL"
    },
    "6510": {
      "op": "SUB"
    },
    "6511": {
      "fn": "pool.cancelBid",
      "offset": [
        6516,
        6555
      ],
      "op": "AND",
      "path": "10"
    },
    "6512": {
      "fn": "pool.cancelBid",
      "offset": [
        6516,
        6520
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "6514": {
      "fn": "pool.cancelBid",
      "offset": [
        6516,
        6524
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "6516": {
      "fn": "pool.cancelBid",
      "offset": [
        6521,
        6523
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x7"
    },
    "6518": {
      "fn": "pool.cancelBid",
      "offset": [
        6521,
        6523
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "6519": {
      "fn": "pool.cancelBid",
      "offset": [
        6516,
        6524
      ],
      "op": "DUP2",
      "path": "10"
    },
    "6520": {
      "fn": "pool.cancelBid",
      "offset": [
        6516,
        6524
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "6521": {
      "fn": "pool.cancelBid",
      "offset": [
        6516,
        6524
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "6523": {
      "fn": "pool.cancelBid",
      "offset": [
        6516,
        6524
      ],
      "op": "ADD",
      "path": "10"
    },
    "6524": {
      "fn": "pool.cancelBid",
      "offset": [
        6516,
        6524
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6525": {
      "fn": "pool.cancelBid",
      "offset": [
        6516,
        6524
      ],
      "op": "DUP2",
      "path": "10"
    },
    "6526": {
      "fn": "pool.cancelBid",
      "offset": [
        6516,
        6524
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "6527": {
      "fn": "pool.cancelBid",
      "offset": [
        6516,
        6524
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "6529": {
      "fn": "pool.cancelBid",
      "offset": [
        6516,
        6524
      ],
      "op": "ADD",
      "path": "10"
    },
    "6530": {
      "fn": "pool.cancelBid",
      "offset": [
        6516,
        6524
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "6532": {
      "fn": "pool.cancelBid",
      "offset": [
        6516,
        6524
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "6533": {
      "fn": "pool.cancelBid",
      "offset": [
        6525,
        6534
      ],
      "op": "DUP5",
      "path": "10"
    },
    "6534": {
      "fn": "pool.cancelBid",
      "offset": [
        6535,
        6536
      ],
      "op": "DUP4",
      "path": "10"
    },
    "6535": {
      "fn": "pool.cancelBid",
      "offset": [
        6525,
        6537
      ],
      "op": "DUP2",
      "path": "10"
    },
    "6536": {
      "fn": "pool.cancelBid",
      "offset": [
        6525,
        6537
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "6537": {
      "fn": "pool.cancelBid",
      "offset": [
        6525,
        6537
      ],
      "op": "DUP2",
      "path": "10"
    },
    "6538": {
      "fn": "pool.cancelBid",
      "offset": [
        6525,
        6537
      ],
      "op": "LT",
      "path": "10"
    },
    "6539": {
      "fn": "pool.cancelBid",
      "offset": [
        6525,
        6537
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1996"
    },
    "6542": {
      "fn": "pool.cancelBid",
      "offset": [
        6525,
        6537
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "6543": {
      "fn": "pool.cancelBid",
      "offset": [
        6525,
        6537
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1996"
    },
    "6546": {
      "fn": "pool.cancelBid",
      "offset": [
        6525,
        6537
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x298B"
    },
    "6549": {
      "fn": "pool.cancelBid",
      "jump": "i",
      "offset": [
        6525,
        6537
      ],
      "op": "JUMP",
      "path": "10"
    },
    "6550": {
      "fn": "pool.cancelBid",
      "offset": [
        6525,
        6537
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "6551": {
      "fn": "pool.cancelBid",
      "offset": [
        6525,
        6537
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "6553": {
      "fn": "pool.cancelBid",
      "offset": [
        6525,
        6537
      ],
      "op": "MUL",
      "path": "10"
    },
    "6554": {
      "fn": "pool.cancelBid",
      "offset": [
        6525,
        6537
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "6556": {
      "fn": "pool.cancelBid",
      "offset": [
        6525,
        6537
      ],
      "op": "ADD",
      "path": "10"
    },
    "6557": {
      "fn": "pool.cancelBid",
      "offset": [
        6525,
        6537
      ],
      "op": "ADD",
      "path": "10"
    },
    "6558": {
      "fn": "pool.cancelBid",
      "offset": [
        6525,
        6537
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "6559": {
      "fn": "pool.cancelBid",
      "offset": [
        6516,
        6538
      ],
      "op": "DUP2",
      "path": "10"
    },
    "6560": {
      "fn": "pool.cancelBid",
      "offset": [
        6516,
        6538
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "6561": {
      "fn": "pool.cancelBid",
      "offset": [
        6516,
        6538
      ],
      "op": "DUP2",
      "path": "10"
    },
    "6562": {
      "fn": "pool.cancelBid",
      "offset": [
        6516,
        6538
      ],
      "op": "LT",
      "path": "10"
    },
    "6563": {
      "fn": "pool.cancelBid",
      "offset": [
        6516,
        6538
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x19AE"
    },
    "6566": {
      "fn": "pool.cancelBid",
      "offset": [
        6516,
        6538
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "6567": {
      "fn": "pool.cancelBid",
      "offset": [
        6516,
        6538
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x19AE"
    },
    "6570": {
      "fn": "pool.cancelBid",
      "offset": [
        6516,
        6538
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x298B"
    },
    "6573": {
      "fn": "pool.cancelBid",
      "jump": "i",
      "offset": [
        6516,
        6538
      ],
      "op": "JUMP",
      "path": "10"
    },
    "6574": {
      "fn": "pool.cancelBid",
      "offset": [
        6516,
        6538
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "6575": {
      "fn": "pool.cancelBid",
      "offset": [
        6516,
        6538
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "6577": {
      "fn": "pool.cancelBid",
      "offset": [
        6516,
        6538
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "6578": {
      "fn": "pool.cancelBid",
      "offset": [
        6516,
        6538
      ],
      "op": "DUP3",
      "path": "10"
    },
    "6579": {
      "fn": "pool.cancelBid",
      "offset": [
        6516,
        6538
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "6580": {
      "fn": "pool.cancelBid",
      "offset": [
        6516,
        6538
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "6582": {
      "fn": "pool.cancelBid",
      "offset": [
        6516,
        6538
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6583": {
      "fn": "pool.cancelBid",
      "offset": [
        6516,
        6538
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "6584": {
      "fn": "pool.cancelBid",
      "offset": [
        6516,
        6538
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "6585": {
      "fn": "pool.cancelBid",
      "offset": [
        6516,
        6546
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x2"
    },
    "6587": {
      "fn": "pool.cancelBid",
      "offset": [
        6516,
        6538
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "6589": {
      "fn": "pool.cancelBid",
      "offset": [
        6516,
        6538
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6590": {
      "fn": "pool.cancelBid",
      "offset": [
        6516,
        6538
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "6591": {
      "fn": "pool.cancelBid",
      "offset": [
        6516,
        6538
      ],
      "op": "MUL",
      "path": "10"
    },
    "6592": {
      "fn": "pool.cancelBid",
      "offset": [
        6516,
        6538
      ],
      "op": "ADD",
      "path": "10"
    },
    "6593": {
      "fn": "pool.cancelBid",
      "offset": [
        6516,
        6546
      ],
      "op": "ADD",
      "path": "10"
    },
    "6594": {
      "fn": "pool.cancelBid",
      "offset": [
        6516,
        6546
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "6595": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6597": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6599": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6601": {
      "op": "SHL"
    },
    "6602": {
      "op": "SUB"
    },
    "6603": {
      "fn": "pool.cancelBid",
      "offset": [
        6516,
        6546
      ],
      "op": "AND",
      "path": "10"
    },
    "6604": {
      "branch": 112,
      "fn": "pool.cancelBid",
      "offset": [
        6516,
        6555
      ],
      "op": "EQ",
      "path": "10"
    },
    "6605": {
      "fn": "pool.cancelBid",
      "offset": [
        6512,
        6830
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1A3F"
    },
    "6608": {
      "branch": 112,
      "fn": "pool.cancelBid",
      "offset": [
        6512,
        6830
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "6609": {
      "fn": "pool.cancelBid",
      "offset": [
        6646,
        6655
      ],
      "op": "DUP3",
      "path": "10",
      "statement": 57
    },
    "6610": {
      "fn": "pool.cancelBid",
      "offset": [
        6656,
        6657
      ],
      "op": "DUP2",
      "path": "10"
    },
    "6611": {
      "fn": "pool.cancelBid",
      "offset": [
        6646,
        6658
      ],
      "op": "DUP2",
      "path": "10"
    },
    "6612": {
      "fn": "pool.cancelBid",
      "offset": [
        6646,
        6658
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "6613": {
      "fn": "pool.cancelBid",
      "offset": [
        6646,
        6658
      ],
      "op": "DUP2",
      "path": "10"
    },
    "6614": {
      "fn": "pool.cancelBid",
      "offset": [
        6646,
        6658
      ],
      "op": "LT",
      "path": "10"
    },
    "6615": {
      "fn": "pool.cancelBid",
      "offset": [
        6646,
        6658
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x19E2"
    },
    "6618": {
      "fn": "pool.cancelBid",
      "offset": [
        6646,
        6658
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "6619": {
      "fn": "pool.cancelBid",
      "offset": [
        6646,
        6658
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x19E2"
    },
    "6622": {
      "fn": "pool.cancelBid",
      "offset": [
        6646,
        6658
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x298B"
    },
    "6625": {
      "fn": "pool.cancelBid",
      "jump": "i",
      "offset": [
        6646,
        6658
      ],
      "op": "JUMP",
      "path": "10"
    },
    "6626": {
      "fn": "pool.cancelBid",
      "offset": [
        6646,
        6658
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "6627": {
      "fn": "pool.cancelBid",
      "offset": [
        6646,
        6658
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "6629": {
      "fn": "pool.cancelBid",
      "offset": [
        6646,
        6658
      ],
      "op": "MUL",
      "path": "10"
    },
    "6630": {
      "fn": "pool.cancelBid",
      "offset": [
        6646,
        6658
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "6632": {
      "fn": "pool.cancelBid",
      "offset": [
        6646,
        6658
      ],
      "op": "ADD",
      "path": "10"
    },
    "6633": {
      "fn": "pool.cancelBid",
      "offset": [
        6646,
        6658
      ],
      "op": "ADD",
      "path": "10"
    },
    "6634": {
      "fn": "pool.cancelBid",
      "offset": [
        6646,
        6658
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "6635": {
      "fn": "pool.cancelBid",
      "offset": [
        6628,
        6630
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x6"
    },
    "6637": {
      "fn": "pool.cancelBid",
      "offset": [
        6631,
        6633
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x7"
    },
    "6639": {
      "fn": "pool.cancelBid",
      "offset": [
        6631,
        6633
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "6640": {
      "fn": "pool.cancelBid",
      "offset": [
        6628,
        6634
      ],
      "op": "DUP2",
      "path": "10"
    },
    "6641": {
      "fn": "pool.cancelBid",
      "offset": [
        6628,
        6634
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "6642": {
      "fn": "pool.cancelBid",
      "offset": [
        6628,
        6634
      ],
      "op": "DUP2",
      "path": "10"
    },
    "6643": {
      "fn": "pool.cancelBid",
      "offset": [
        6628,
        6634
      ],
      "op": "LT",
      "path": "10"
    },
    "6644": {
      "fn": "pool.cancelBid",
      "offset": [
        6628,
        6634
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x19FF"
    },
    "6647": {
      "fn": "pool.cancelBid",
      "offset": [
        6628,
        6634
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "6648": {
      "fn": "pool.cancelBid",
      "offset": [
        6628,
        6634
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x19FF"
    },
    "6651": {
      "fn": "pool.cancelBid",
      "offset": [
        6628,
        6634
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x298B"
    },
    "6654": {
      "fn": "pool.cancelBid",
      "jump": "i",
      "offset": [
        6628,
        6634
      ],
      "op": "JUMP",
      "path": "10"
    },
    "6655": {
      "fn": "pool.cancelBid",
      "offset": [
        6628,
        6634
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "6656": {
      "fn": "pool.cancelBid",
      "offset": [
        6628,
        6634
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6657": {
      "fn": "pool.cancelBid",
      "offset": [
        6628,
        6634
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "6659": {
      "fn": "pool.cancelBid",
      "offset": [
        6628,
        6634
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "6660": {
      "fn": "pool.cancelBid",
      "offset": [
        6628,
        6634
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "6662": {
      "fn": "pool.cancelBid",
      "offset": [
        6628,
        6634
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "6664": {
      "fn": "pool.cancelBid",
      "offset": [
        6628,
        6634
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "6665": {
      "fn": "pool.cancelBid",
      "offset": [
        6628,
        6634
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6666": {
      "fn": "pool.cancelBid",
      "offset": [
        6628,
        6634
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "6668": {
      "fn": "pool.cancelBid",
      "offset": [
        6628,
        6634
      ],
      "op": "MUL",
      "path": "10"
    },
    "6669": {
      "fn": "pool.cancelBid",
      "offset": [
        6628,
        6634
      ],
      "op": "ADD",
      "path": "10"
    },
    "6670": {
      "fn": "pool.cancelBid",
      "offset": [
        6628,
        6640
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "6672": {
      "fn": "pool.cancelBid",
      "offset": [
        6628,
        6640
      ],
      "op": "ADD",
      "path": "10"
    },
    "6673": {
      "fn": "pool.cancelBid",
      "offset": [
        6641,
        6642
      ],
      "op": "DUP4",
      "path": "10"
    },
    "6674": {
      "fn": "pool.cancelBid",
      "offset": [
        6628,
        6643
      ],
      "op": "DUP2",
      "path": "10"
    },
    "6675": {
      "fn": "pool.cancelBid",
      "offset": [
        6628,
        6643
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "6676": {
      "fn": "pool.cancelBid",
      "offset": [
        6628,
        6643
      ],
      "op": "DUP2",
      "path": "10"
    },
    "6677": {
      "fn": "pool.cancelBid",
      "offset": [
        6628,
        6643
      ],
      "op": "LT",
      "path": "10"
    },
    "6678": {
      "fn": "pool.cancelBid",
      "offset": [
        6628,
        6643
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1A21"
    },
    "6681": {
      "fn": "pool.cancelBid",
      "offset": [
        6628,
        6643
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "6682": {
      "fn": "pool.cancelBid",
      "offset": [
        6628,
        6643
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1A21"
    },
    "6685": {
      "fn": "pool.cancelBid",
      "offset": [
        6628,
        6643
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x298B"
    },
    "6688": {
      "fn": "pool.cancelBid",
      "jump": "i",
      "offset": [
        6628,
        6643
      ],
      "op": "JUMP",
      "path": "10"
    },
    "6689": {
      "fn": "pool.cancelBid",
      "offset": [
        6628,
        6643
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "6690": {
      "fn": "pool.cancelBid",
      "offset": [
        6628,
        6643
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "6692": {
      "fn": "pool.cancelBid",
      "offset": [
        6628,
        6643
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "6693": {
      "fn": "pool.cancelBid",
      "offset": [
        6628,
        6643
      ],
      "op": "DUP3",
      "path": "10"
    },
    "6694": {
      "fn": "pool.cancelBid",
      "offset": [
        6628,
        6643
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "6695": {
      "fn": "pool.cancelBid",
      "offset": [
        6628,
        6643
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "6697": {
      "fn": "pool.cancelBid",
      "offset": [
        6628,
        6643
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6698": {
      "fn": "pool.cancelBid",
      "offset": [
        6628,
        6643
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "6699": {
      "fn": "pool.cancelBid",
      "offset": [
        6628,
        6643
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "6700": {
      "fn": "pool.cancelBid",
      "offset": [
        6628,
        6643
      ],
      "op": "ADD",
      "path": "10"
    },
    "6701": {
      "fn": "pool.cancelBid",
      "offset": [
        6628,
        6658
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "6702": {
      "fn": "pool.cancelBid",
      "offset": [
        6729,
        6732
      ],
      "op": "DUP2",
      "path": "10",
      "statement": 58
    },
    "6703": {
      "fn": "pool.cancelBid",
      "offset": [
        6729,
        6732
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1A37"
    },
    "6706": {
      "fn": "pool.cancelBid",
      "offset": [
        6729,
        6732
      ],
      "op": "DUP2",
      "path": "10"
    },
    "6707": {
      "fn": "pool.cancelBid",
      "offset": [
        6729,
        6732
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2A6C"
    },
    "6710": {
      "fn": "pool.cancelBid",
      "jump": "i",
      "offset": [
        6729,
        6732
      ],
      "op": "JUMP",
      "path": "10"
    },
    "6711": {
      "fn": "pool.cancelBid",
      "offset": [
        6729,
        6732
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "6712": {
      "fn": "pool.cancelBid",
      "offset": [
        6729,
        6732
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "6713": {
      "fn": "pool.cancelBid",
      "offset": [
        6729,
        6732
      ],
      "op": "POP",
      "path": "10"
    },
    "6714": {
      "fn": "pool.cancelBid",
      "offset": [
        6729,
        6732
      ],
      "op": "POP",
      "path": "10"
    },
    "6715": {
      "fn": "pool.cancelBid",
      "offset": [
        6512,
        6830
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1AC9"
    },
    "6718": {
      "fn": "pool.cancelBid",
      "offset": [
        6512,
        6830
      ],
      "op": "JUMP",
      "path": "10"
    },
    "6719": {
      "fn": "pool.cancelBid",
      "offset": [
        6512,
        6830
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "6720": {
      "fn": "pool.cancelBid",
      "offset": [
        6793,
        6795
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 59,
      "value": "0x7"
    },
    "6722": {
      "fn": "pool.cancelBid",
      "offset": [
        6793,
        6795
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "6723": {
      "fn": "pool.cancelBid",
      "offset": [
        6788,
        6796
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "6725": {
      "fn": "pool.cancelBid",
      "offset": [
        6788,
        6796
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6726": {
      "fn": "pool.cancelBid",
      "offset": [
        6788,
        6796
      ],
      "op": "DUP2",
      "path": "10"
    },
    "6727": {
      "fn": "pool.cancelBid",
      "offset": [
        6788,
        6796
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "6728": {
      "fn": "pool.cancelBid",
      "offset": [
        6788,
        6792
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "6730": {
      "fn": "pool.cancelBid",
      "offset": [
        6788,
        6796
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "6732": {
      "fn": "pool.cancelBid",
      "offset": [
        6788,
        6796
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "6733": {
      "fn": "pool.cancelBid",
      "offset": [
        6788,
        6796
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "6735": {
      "fn": "pool.cancelBid",
      "offset": [
        6788,
        6796
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6736": {
      "fn": "pool.cancelBid",
      "offset": [
        6788,
        6796
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "6737": {
      "fn": "pool.cancelBid",
      "offset": [
        6797,
        6809
      ],
      "op": "DUP4",
      "path": "10"
    },
    "6738": {
      "fn": "pool.cancelBid",
      "offset": [
        6797,
        6809
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "6739": {
      "fn": "pool.cancelBid",
      "offset": [
        6797,
        6806
      ],
      "op": "DUP5",
      "path": "10"
    },
    "6740": {
      "fn": "pool.cancelBid",
      "offset": [
        6797,
        6806
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6741": {
      "fn": "pool.cancelBid",
      "offset": [
        6807,
        6808
      ],
      "op": "DUP4",
      "path": "10"
    },
    "6742": {
      "fn": "pool.cancelBid",
      "offset": [
        6807,
        6808
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6743": {
      "fn": "pool.cancelBid",
      "offset": [
        6797,
        6809
      ],
      "op": "DUP2",
      "path": "10"
    },
    "6744": {
      "fn": "pool.cancelBid",
      "offset": [
        6797,
        6809
      ],
      "op": "LT",
      "path": "10"
    },
    "6745": {
      "fn": "pool.cancelBid",
      "offset": [
        6797,
        6809
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1A64"
    },
    "6748": {
      "fn": "pool.cancelBid",
      "offset": [
        6797,
        6809
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "6749": {
      "fn": "pool.cancelBid",
      "offset": [
        6797,
        6809
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1A64"
    },
    "6752": {
      "fn": "pool.cancelBid",
      "offset": [
        6797,
        6809
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x298B"
    },
    "6755": {
      "fn": "pool.cancelBid",
      "jump": "i",
      "offset": [
        6797,
        6809
      ],
      "op": "JUMP",
      "path": "10"
    },
    "6756": {
      "fn": "pool.cancelBid",
      "offset": [
        6797,
        6809
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "6757": {
      "fn": "pool.cancelBid",
      "offset": [
        6797,
        6809
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "6759": {
      "fn": "pool.cancelBid",
      "offset": [
        6797,
        6809
      ],
      "op": "MUL",
      "path": "10"
    },
    "6760": {
      "fn": "pool.cancelBid",
      "offset": [
        6797,
        6809
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "6762": {
      "fn": "pool.cancelBid",
      "offset": [
        6797,
        6809
      ],
      "op": "ADD",
      "path": "10"
    },
    "6763": {
      "fn": "pool.cancelBid",
      "offset": [
        6797,
        6809
      ],
      "op": "ADD",
      "path": "10"
    },
    "6764": {
      "fn": "pool.cancelBid",
      "offset": [
        6797,
        6809
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "6765": {
      "fn": "pool.cancelBid",
      "offset": [
        6788,
        6810
      ],
      "op": "DUP2",
      "path": "10"
    },
    "6766": {
      "fn": "pool.cancelBid",
      "offset": [
        6788,
        6810
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "6767": {
      "fn": "pool.cancelBid",
      "offset": [
        6788,
        6810
      ],
      "op": "DUP2",
      "path": "10"
    },
    "6768": {
      "fn": "pool.cancelBid",
      "offset": [
        6788,
        6810
      ],
      "op": "LT",
      "path": "10"
    },
    "6769": {
      "fn": "pool.cancelBid",
      "offset": [
        6788,
        6810
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1A7C"
    },
    "6772": {
      "fn": "pool.cancelBid",
      "offset": [
        6788,
        6810
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "6773": {
      "fn": "pool.cancelBid",
      "offset": [
        6788,
        6810
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1A7C"
    },
    "6776": {
      "fn": "pool.cancelBid",
      "offset": [
        6788,
        6810
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x298B"
    },
    "6779": {
      "fn": "pool.cancelBid",
      "jump": "i",
      "offset": [
        6788,
        6810
      ],
      "op": "JUMP",
      "path": "10"
    },
    "6780": {
      "fn": "pool.cancelBid",
      "offset": [
        6788,
        6810
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "6781": {
      "fn": "pool.cancelBid",
      "offset": [
        6788,
        6810
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6782": {
      "fn": "pool.cancelBid",
      "offset": [
        6788,
        6810
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "6784": {
      "fn": "pool.cancelBid",
      "offset": [
        6788,
        6810
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "6785": {
      "fn": "pool.cancelBid",
      "offset": [
        6788,
        6810
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "6787": {
      "fn": "pool.cancelBid",
      "offset": [
        6788,
        6810
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "6789": {
      "fn": "pool.cancelBid",
      "offset": [
        6788,
        6810
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "6790": {
      "fn": "pool.cancelBid",
      "offset": [
        6788,
        6810
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6791": {
      "fn": "pool.cancelBid",
      "offset": [
        6788,
        6810
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "6793": {
      "fn": "pool.cancelBid",
      "offset": [
        6788,
        6810
      ],
      "op": "MUL",
      "path": "10"
    },
    "6794": {
      "fn": "pool.cancelBid",
      "offset": [
        6788,
        6810
      ],
      "op": "ADD",
      "path": "10"
    },
    "6795": {
      "fn": "pool.cancelBid",
      "offset": [
        6788,
        6815
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "6797": {
      "fn": "pool.cancelBid",
      "offset": [
        6788,
        6815
      ],
      "op": "ADD",
      "path": "10"
    },
    "6798": {
      "fn": "pool.cancelBid",
      "offset": [
        6788,
        6815
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "6799": {
      "fn": "pool.cancelBid",
      "offset": [
        6771,
        6773
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x6"
    },
    "6801": {
      "fn": "pool.cancelBid",
      "offset": [
        6774,
        6776
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x7"
    },
    "6803": {
      "fn": "pool.cancelBid",
      "offset": [
        6774,
        6776
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "6804": {
      "fn": "pool.cancelBid",
      "offset": [
        6771,
        6777
      ],
      "op": "DUP2",
      "path": "10"
    },
    "6805": {
      "fn": "pool.cancelBid",
      "offset": [
        6771,
        6777
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "6806": {
      "fn": "pool.cancelBid",
      "offset": [
        6771,
        6777
      ],
      "op": "DUP2",
      "path": "10"
    },
    "6807": {
      "fn": "pool.cancelBid",
      "offset": [
        6771,
        6777
      ],
      "op": "LT",
      "path": "10"
    },
    "6808": {
      "fn": "pool.cancelBid",
      "offset": [
        6771,
        6777
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1AA3"
    },
    "6811": {
      "fn": "pool.cancelBid",
      "offset": [
        6771,
        6777
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "6812": {
      "fn": "pool.cancelBid",
      "offset": [
        6771,
        6777
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1AA3"
    },
    "6815": {
      "fn": "pool.cancelBid",
      "offset": [
        6771,
        6777
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x298B"
    },
    "6818": {
      "fn": "pool.cancelBid",
      "jump": "i",
      "offset": [
        6771,
        6777
      ],
      "op": "JUMP",
      "path": "10"
    },
    "6819": {
      "fn": "pool.cancelBid",
      "offset": [
        6771,
        6777
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "6820": {
      "fn": "pool.cancelBid",
      "offset": [
        6771,
        6777
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6821": {
      "fn": "pool.cancelBid",
      "offset": [
        6771,
        6777
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "6823": {
      "fn": "pool.cancelBid",
      "offset": [
        6771,
        6777
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "6824": {
      "fn": "pool.cancelBid",
      "offset": [
        6771,
        6777
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "6826": {
      "fn": "pool.cancelBid",
      "offset": [
        6771,
        6777
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "6828": {
      "fn": "pool.cancelBid",
      "offset": [
        6771,
        6777
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "6829": {
      "fn": "pool.cancelBid",
      "offset": [
        6771,
        6777
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6830": {
      "fn": "pool.cancelBid",
      "offset": [
        6771,
        6777
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "6832": {
      "fn": "pool.cancelBid",
      "offset": [
        6771,
        6777
      ],
      "op": "MUL",
      "path": "10"
    },
    "6833": {
      "fn": "pool.cancelBid",
      "offset": [
        6771,
        6777
      ],
      "op": "ADD",
      "path": "10"
    },
    "6834": {
      "fn": "pool.cancelBid",
      "offset": [
        6771,
        6784
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x2"
    },
    "6836": {
      "fn": "pool.cancelBid",
      "offset": [
        6771,
        6784
      ],
      "op": "ADD",
      "path": "10"
    },
    "6837": {
      "fn": "pool.cancelBid",
      "offset": [
        6771,
        6784
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "6839": {
      "fn": "pool.cancelBid",
      "offset": [
        6771,
        6815
      ],
      "op": "DUP3",
      "path": "10"
    },
    "6840": {
      "fn": "pool.cancelBid",
      "offset": [
        6771,
        6815
      ],
      "op": "DUP3",
      "path": "10"
    },
    "6841": {
      "fn": "pool.cancelBid",
      "offset": [
        6771,
        6815
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "6842": {
      "fn": "pool.cancelBid",
      "offset": [
        6771,
        6815
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1AC3"
    },
    "6845": {
      "fn": "pool.cancelBid",
      "offset": [
        6771,
        6815
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "6846": {
      "fn": "pool.cancelBid",
      "offset": [
        6771,
        6815
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6847": {
      "fn": "pool.cancelBid",
      "offset": [
        6771,
        6815
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x29A1"
    },
    "6850": {
      "fn": "pool.cancelBid",
      "jump": "i",
      "offset": [
        6771,
        6815
      ],
      "op": "JUMP",
      "path": "10"
    },
    "6851": {
      "fn": "pool.cancelBid",
      "offset": [
        6771,
        6815
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "6852": {
      "fn": "pool.cancelBid",
      "offset": [
        6771,
        6815
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6853": {
      "fn": "pool.cancelBid",
      "offset": [
        6771,
        6815
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "6854": {
      "fn": "pool.cancelBid",
      "offset": [
        6771,
        6815
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "6855": {
      "op": "POP"
    },
    "6856": {
      "op": "POP"
    },
    "6857": {
      "fn": "pool.cancelBid",
      "offset": [
        6512,
        6830
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "6858": {
      "fn": "pool.cancelBid",
      "offset": [
        6493,
        6496
      ],
      "op": "DUP1",
      "path": "10",
      "statement": 60
    },
    "6859": {
      "fn": "pool.cancelBid",
      "offset": [
        6493,
        6496
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1AD3"
    },
    "6862": {
      "fn": "pool.cancelBid",
      "offset": [
        6493,
        6496
      ],
      "op": "DUP2",
      "path": "10"
    },
    "6863": {
      "fn": "pool.cancelBid",
      "offset": [
        6493,
        6496
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2A6C"
    },
    "6866": {
      "fn": "pool.cancelBid",
      "jump": "i",
      "offset": [
        6493,
        6496
      ],
      "op": "JUMP",
      "path": "10"
    },
    "6867": {
      "fn": "pool.cancelBid",
      "offset": [
        6493,
        6496
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "6868": {
      "fn": "pool.cancelBid",
      "offset": [
        6493,
        6496
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "6869": {
      "fn": "pool.cancelBid",
      "offset": [
        6493,
        6496
      ],
      "op": "POP",
      "path": "10"
    },
    "6870": {
      "fn": "pool.cancelBid",
      "offset": [
        6493,
        6496
      ],
      "op": "POP",
      "path": "10"
    },
    "6871": {
      "fn": "pool.cancelBid",
      "offset": [
        6451,
        6840
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x195C"
    },
    "6874": {
      "fn": "pool.cancelBid",
      "offset": [
        6451,
        6840
      ],
      "op": "JUMP",
      "path": "10"
    },
    "6875": {
      "fn": "pool.cancelBid",
      "offset": [
        6451,
        6840
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "6876": {
      "fn": "pool.cancelBid",
      "offset": [
        6451,
        6840
      ],
      "op": "POP",
      "path": "10"
    },
    "6877": {
      "fn": "pool.cancelBid",
      "offset": [
        6854,
        6863
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "6879": {
      "fn": "pool.cancelBid",
      "offset": [
        6849,
        6943
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "6880": {
      "fn": "pool.cancelBid",
      "offset": [
        6892,
        6893
      ],
      "op": "DUP2",
      "path": "10"
    },
    "6881": {
      "fn": "pool.cancelBid",
      "offset": [
        6873,
        6882
      ],
      "op": "DUP4",
      "path": "10"
    },
    "6882": {
      "fn": "pool.cancelBid",
      "offset": [
        6873,
        6889
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "6883": {
      "fn": "pool.cancelBid",
      "offset": [
        6873,
        6893
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1AEC"
    },
    "6886": {
      "fn": "pool.cancelBid",
      "offset": [
        6873,
        6893
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "6887": {
      "fn": "pool.cancelBid",
      "offset": [
        6873,
        6893
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6888": {
      "fn": "pool.cancelBid",
      "offset": [
        6873,
        6893
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x29A1"
    },
    "6891": {
      "fn": "pool.cancelBid",
      "jump": "i",
      "offset": [
        6873,
        6893
      ],
      "op": "JUMP",
      "path": "10"
    },
    "6892": {
      "fn": "pool.cancelBid",
      "offset": [
        6873,
        6893
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "6893": {
      "fn": "pool.cancelBid",
      "offset": [
        6869,
        6870
      ],
      "op": "DUP2",
      "path": "10"
    },
    "6894": {
      "fn": "pool.cancelBid",
      "offset": [
        6869,
        6893
      ],
      "op": "LT",
      "path": "10"
    },
    "6895": {
      "fn": "pool.cancelBid",
      "offset": [
        6849,
        6943
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "6896": {
      "fn": "pool.cancelBid",
      "offset": [
        6849,
        6943
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1B51"
    },
    "6899": {
      "fn": "pool.cancelBid",
      "offset": [
        6849,
        6943
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "6900": {
      "fn": "pool.cancelBid",
      "offset": [
        6914,
        6916
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 61,
      "value": "0x6"
    },
    "6902": {
      "fn": "pool.cancelBid",
      "offset": [
        6917,
        6919
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x7"
    },
    "6904": {
      "fn": "pool.cancelBid",
      "offset": [
        6917,
        6919
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "6905": {
      "fn": "pool.cancelBid",
      "offset": [
        6914,
        6920
      ],
      "op": "DUP2",
      "path": "10"
    },
    "6906": {
      "fn": "pool.cancelBid",
      "offset": [
        6914,
        6920
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "6907": {
      "fn": "pool.cancelBid",
      "offset": [
        6914,
        6920
      ],
      "op": "DUP2",
      "path": "10"
    },
    "6908": {
      "fn": "pool.cancelBid",
      "offset": [
        6914,
        6920
      ],
      "op": "LT",
      "path": "10"
    },
    "6909": {
      "fn": "pool.cancelBid",
      "offset": [
        6914,
        6920
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1B08"
    },
    "6912": {
      "fn": "pool.cancelBid",
      "offset": [
        6914,
        6920
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "6913": {
      "fn": "pool.cancelBid",
      "offset": [
        6914,
        6920
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1B08"
    },
    "6916": {
      "fn": "pool.cancelBid",
      "offset": [
        6914,
        6920
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x298B"
    },
    "6919": {
      "fn": "pool.cancelBid",
      "jump": "i",
      "offset": [
        6914,
        6920
      ],
      "op": "JUMP",
      "path": "10"
    },
    "6920": {
      "fn": "pool.cancelBid",
      "offset": [
        6914,
        6920
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "6921": {
      "fn": "pool.cancelBid",
      "offset": [
        6914,
        6920
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6922": {
      "fn": "pool.cancelBid",
      "offset": [
        6914,
        6920
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "6924": {
      "fn": "pool.cancelBid",
      "offset": [
        6914,
        6920
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "6925": {
      "fn": "pool.cancelBid",
      "offset": [
        6914,
        6920
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "6927": {
      "fn": "pool.cancelBid",
      "offset": [
        6914,
        6920
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "6929": {
      "fn": "pool.cancelBid",
      "offset": [
        6914,
        6920
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "6930": {
      "fn": "pool.cancelBid",
      "offset": [
        6914,
        6920
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6931": {
      "fn": "pool.cancelBid",
      "offset": [
        6914,
        6920
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "6933": {
      "fn": "pool.cancelBid",
      "offset": [
        6914,
        6920
      ],
      "op": "MUL",
      "path": "10"
    },
    "6934": {
      "fn": "pool.cancelBid",
      "offset": [
        6914,
        6920
      ],
      "op": "ADD",
      "path": "10"
    },
    "6935": {
      "fn": "pool.cancelBid",
      "offset": [
        6914,
        6926
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "6937": {
      "fn": "pool.cancelBid",
      "offset": [
        6914,
        6926
      ],
      "op": "ADD",
      "path": "10"
    },
    "6938": {
      "fn": "pool.cancelBid",
      "offset": [
        6914,
        6932
      ],
      "op": "DUP1",
      "path": "10"
    },
    "6939": {
      "fn": "pool.cancelBid",
      "offset": [
        6914,
        6932
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "6940": {
      "fn": "pool.cancelBid",
      "offset": [
        6914,
        6932
      ],
      "op": "DUP1",
      "path": "10"
    },
    "6941": {
      "fn": "pool.cancelBid",
      "offset": [
        6914,
        6932
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1B28"
    },
    "6944": {
      "fn": "pool.cancelBid",
      "offset": [
        6914,
        6932
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "6945": {
      "fn": "pool.cancelBid",
      "offset": [
        6914,
        6932
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1B28"
    },
    "6948": {
      "fn": "pool.cancelBid",
      "offset": [
        6914,
        6932
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2A3F"
    },
    "6951": {
      "fn": "pool.cancelBid",
      "jump": "i",
      "offset": [
        6914,
        6932
      ],
      "op": "JUMP",
      "path": "10"
    },
    "6952": {
      "fn": "pool.cancelBid",
      "offset": [
        6914,
        6932
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "6953": {
      "fn": "pool.cancelBid",
      "offset": [
        6914,
        6932
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "6955": {
      "fn": "pool.cancelBid",
      "offset": [
        6914,
        6932
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6956": {
      "fn": "pool.cancelBid",
      "offset": [
        6914,
        6932
      ],
      "op": "SUB",
      "path": "10"
    },
    "6957": {
      "fn": "pool.cancelBid",
      "offset": [
        6914,
        6932
      ],
      "op": "DUP2",
      "path": "10"
    },
    "6958": {
      "fn": "pool.cancelBid",
      "offset": [
        6914,
        6932
      ],
      "op": "DUP2",
      "path": "10"
    },
    "6959": {
      "fn": "pool.cancelBid",
      "offset": [
        6914,
        6932
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6960": {
      "fn": "pool.cancelBid",
      "offset": [
        6914,
        6932
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "6962": {
      "fn": "pool.cancelBid",
      "offset": [
        6914,
        6932
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "6963": {
      "fn": "pool.cancelBid",
      "offset": [
        6914,
        6932
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "6965": {
      "fn": "pool.cancelBid",
      "offset": [
        6914,
        6932
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "6967": {
      "fn": "pool.cancelBid",
      "offset": [
        6914,
        6932
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "6968": {
      "fn": "pool.cancelBid",
      "offset": [
        6914,
        6932
      ],
      "op": "ADD",
      "path": "10"
    },
    "6969": {
      "fn": "pool.cancelBid",
      "offset": [
        6914,
        6932
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "6971": {
      "fn": "pool.cancelBid",
      "offset": [
        6914,
        6932
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6972": {
      "fn": "pool.cancelBid",
      "offset": [
        6914,
        6932
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "6973": {
      "fn": "pool.cancelBid",
      "offset": [
        6914,
        6932
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6974": {
      "fn": "pool.cancelBid",
      "offset": [
        6914,
        6932
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "6975": {
      "fn": "pool.cancelBid",
      "offset": [
        6895,
        6898
      ],
      "op": "DUP1",
      "path": "10",
      "statement": 62
    },
    "6976": {
      "fn": "pool.cancelBid",
      "offset": [
        6895,
        6898
      ],
      "op": "DUP1",
      "path": "10"
    },
    "6977": {
      "fn": "pool.cancelBid",
      "offset": [
        6895,
        6898
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1B49"
    },
    "6980": {
      "fn": "pool.cancelBid",
      "offset": [
        6895,
        6898
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6981": {
      "fn": "pool.cancelBid",
      "offset": [
        6895,
        6898
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2A6C"
    },
    "6984": {
      "fn": "pool.cancelBid",
      "jump": "i",
      "offset": [
        6895,
        6898
      ],
      "op": "JUMP",
      "path": "10"
    },
    "6985": {
      "fn": "pool.cancelBid",
      "offset": [
        6895,
        6898
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "6986": {
      "fn": "pool.cancelBid",
      "offset": [
        6895,
        6898
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "6987": {
      "fn": "pool.cancelBid",
      "offset": [
        6895,
        6898
      ],
      "op": "POP",
      "path": "10"
    },
    "6988": {
      "fn": "pool.cancelBid",
      "offset": [
        6895,
        6898
      ],
      "op": "POP",
      "path": "10"
    },
    "6989": {
      "fn": "pool.cancelBid",
      "offset": [
        6849,
        6943
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1ADF"
    },
    "6992": {
      "fn": "pool.cancelBid",
      "offset": [
        6849,
        6943
      ],
      "op": "JUMP",
      "path": "10"
    },
    "6993": {
      "fn": "pool.cancelBid",
      "offset": [
        6849,
        6943
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "6994": {
      "op": "POP"
    },
    "6995": {
      "op": "POP"
    },
    "6996": {
      "fn": "pool.cancelBid",
      "offset": [
        6961,
        6981
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 63,
      "value": "0x0"
    },
    "6998": {
      "fn": "pool.cancelBid",
      "offset": [
        6952,
        6981
      ],
      "op": "DUP1",
      "path": "10"
    },
    "6999": {
      "fn": "pool.cancelBid",
      "offset": [
        6952,
        6981
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "7000": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "7002": {
      "op": "NOT"
    },
    "7003": {
      "fn": "pool.cancelBid",
      "offset": [
        6952,
        6981
      ],
      "op": "AND",
      "path": "10"
    },
    "7004": {
      "fn": "pool.cancelBid",
      "offset": [
        6952,
        6981
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "7005": {
      "fn": "pool.cancelBid",
      "offset": [
        6952,
        6981
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "7006": {
      "op": "POP"
    },
    "7007": {
      "op": "POP"
    },
    "7008": {
      "fn": "pool.cancelBid",
      "jump": "o",
      "offset": [
        5513,
        6988
      ],
      "op": "JUMP",
      "path": "10"
    },
    "7009": {
      "fn": "pool.deposit",
      "offset": [
        15217,
        15371
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "7010": {
      "offset": [
        476,
        479
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1F4"
    },
    "7013": {
      "fn": "pool.deposit",
      "offset": [
        15269,
        15278
      ],
      "op": "CALLVALUE",
      "path": "10",
      "statement": 64
    },
    "7014": {
      "fn": "pool.deposit",
      "offset": [
        15269,
        15298
      ],
      "op": "LT",
      "path": "10"
    },
    "7015": {
      "branch": 113,
      "fn": "pool.deposit",
      "offset": [
        15269,
        15298
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "7016": {
      "fn": "pool.deposit",
      "offset": [
        15261,
        15317
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1BA4"
    },
    "7019": {
      "branch": 113,
      "fn": "pool.deposit",
      "offset": [
        15261,
        15317
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "7020": {
      "fn": "pool.deposit",
      "offset": [
        15261,
        15317
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "7022": {
      "fn": "pool.deposit",
      "offset": [
        15261,
        15317
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "7023": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7027": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7029": {
      "op": "SHL"
    },
    "7030": {
      "fn": "pool.deposit",
      "offset": [
        15261,
        15317
      ],
      "op": "DUP2",
      "path": "10"
    },
    "7031": {
      "fn": "pool.deposit",
      "offset": [
        15261,
        15317
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "7032": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7034": {
      "fn": "pool.deposit",
      "offset": [
        15261,
        15317
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "7036": {
      "fn": "pool.deposit",
      "offset": [
        15261,
        15317
      ],
      "op": "DUP3",
      "path": "10"
    },
    "7037": {
      "fn": "pool.deposit",
      "offset": [
        15261,
        15317
      ],
      "op": "ADD",
      "path": "10"
    },
    "7038": {
      "op": "MSTORE"
    },
    "7039": {
      "op": "PUSH1",
      "value": "0xE"
    },
    "7041": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7043": {
      "op": "DUP3"
    },
    "7044": {
      "op": "ADD"
    },
    "7045": {
      "op": "MSTORE"
    },
    "7046": {
      "op": "PUSH14",
      "value": "0x4D696E2073697A65203D2035303"
    },
    "7061": {
      "op": "PUSH1",
      "value": "0x94"
    },
    "7063": {
      "op": "SHL"
    },
    "7064": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7066": {
      "op": "DUP3"
    },
    "7067": {
      "op": "ADD"
    },
    "7068": {
      "op": "MSTORE"
    },
    "7069": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7071": {
      "op": "ADD"
    },
    "7072": {
      "fn": "pool.deposit",
      "offset": [
        15261,
        15317
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x7DF"
    },
    "7075": {
      "op": "JUMP"
    },
    "7076": {
      "fn": "pool.deposit",
      "offset": [
        15261,
        15317
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "7077": {
      "fn": "pool.deposit",
      "offset": [
        15340,
        15350
      ],
      "op": "CALLER",
      "path": "10",
      "statement": 65
    },
    "7078": {
      "fn": "pool.deposit",
      "offset": [
        15327,
        15351
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "7080": {
      "fn": "pool.deposit",
      "offset": [
        15327,
        15351
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "7081": {
      "fn": "pool.deposit",
      "offset": [
        15327,
        15351
      ],
      "op": "DUP2",
      "path": "10"
    },
    "7082": {
      "fn": "pool.deposit",
      "offset": [
        15327,
        15351
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "7083": {
      "fn": "pool.deposit",
      "offset": [
        15327,
        15339
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "7085": {
      "fn": "pool.deposit",
      "offset": [
        15327,
        15351
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "7087": {
      "fn": "pool.deposit",
      "offset": [
        15327,
        15351
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "7088": {
      "fn": "pool.deposit",
      "offset": [
        15327,
        15351
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "7090": {
      "fn": "pool.deposit",
      "offset": [
        15327,
        15351
      ],
      "op": "DUP2",
      "path": "10"
    },
    "7091": {
      "fn": "pool.deposit",
      "offset": [
        15327,
        15351
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "7092": {
      "fn": "pool.deposit",
      "offset": [
        15327,
        15364
      ],
      "op": "DUP1",
      "path": "10"
    },
    "7093": {
      "fn": "pool.deposit",
      "offset": [
        15327,
        15364
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "7094": {
      "fn": "pool.deposit",
      "offset": [
        15355,
        15364
      ],
      "op": "CALLVALUE",
      "path": "10"
    },
    "7095": {
      "fn": "pool.deposit",
      "offset": [
        15355,
        15364
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "7096": {
      "fn": "pool.deposit",
      "offset": [
        15327,
        15351
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "7097": {
      "fn": "pool.deposit",
      "offset": [
        15327,
        15364
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1BC3"
    },
    "7100": {
      "fn": "pool.deposit",
      "offset": [
        15327,
        15364
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "7101": {
      "fn": "pool.deposit",
      "offset": [
        15355,
        15364
      ],
      "op": "DUP5",
      "path": "10"
    },
    "7102": {
      "fn": "pool.deposit",
      "offset": [
        15355,
        15364
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "7103": {
      "fn": "pool.deposit",
      "offset": [
        15327,
        15364
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2973"
    },
    "7106": {
      "fn": "pool.deposit",
      "jump": "i",
      "offset": [
        15327,
        15364
      ],
      "op": "JUMP",
      "path": "10"
    },
    "7107": {
      "fn": "pool.deposit",
      "offset": [
        15327,
        15364
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "7108": {
      "fn": "pool.deposit",
      "offset": [
        15327,
        15364
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "7109": {
      "fn": "pool.deposit",
      "offset": [
        15327,
        15364
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "7110": {
      "fn": "pool.deposit",
      "offset": [
        15327,
        15364
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "7111": {
      "op": "POP"
    },
    "7112": {
      "op": "POP"
    },
    "7113": {
      "fn": "pool.deposit",
      "jump": "o",
      "offset": [
        15217,
        15371
      ],
      "op": "JUMP",
      "path": "10"
    },
    "7114": {
      "fn": "pool.exercise",
      "offset": [
        10907,
        13059
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "7115": {
      "fn": "pool.exercise",
      "offset": [
        11019,
        11029
      ],
      "op": "CALLER",
      "path": "10"
    },
    "7116": {
      "fn": "pool.exercise",
      "offset": [
        11003,
        11016
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "7118": {
      "fn": "pool.exercise",
      "offset": [
        11059,
        11070
      ],
      "op": "DUP2",
      "path": "10"
    },
    "7119": {
      "fn": "pool.exercise",
      "offset": [
        11059,
        11070
      ],
      "op": "DUP2",
      "path": "10"
    },
    "7120": {
      "fn": "pool.exercise",
      "offset": [
        11059,
        11070
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "7121": {
      "fn": "pool.exercise",
      "offset": [
        11059,
        11063
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x5"
    },
    "7123": {
      "fn": "pool.exercise",
      "offset": [
        11059,
        11070
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "7125": {
      "fn": "pool.exercise",
      "offset": [
        11059,
        11070
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "7126": {
      "fn": "pool.exercise",
      "offset": [
        11059,
        11070
      ],
      "op": "DUP2",
      "path": "10"
    },
    "7127": {
      "fn": "pool.exercise",
      "offset": [
        11059,
        11070
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "7128": {
      "fn": "pool.exercise",
      "offset": [
        11059,
        11070
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "7130": {
      "fn": "pool.exercise",
      "offset": [
        11059,
        11070
      ],
      "op": "DUP1",
      "path": "10"
    },
    "7131": {
      "fn": "pool.exercise",
      "offset": [
        11059,
        11070
      ],
      "op": "DUP4",
      "path": "10"
    },
    "7132": {
      "fn": "pool.exercise",
      "offset": [
        11059,
        11070
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "7133": {
      "fn": "pool.exercise",
      "offset": [
        11071,
        11073
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x7"
    },
    "7135": {
      "fn": "pool.exercise",
      "offset": [
        11071,
        11073
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "7136": {
      "fn": "pool.exercise",
      "offset": [
        11059,
        11074
      ],
      "op": "DUP5",
      "path": "10"
    },
    "7137": {
      "fn": "pool.exercise",
      "offset": [
        11059,
        11074
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "7138": {
      "fn": "pool.exercise",
      "offset": [
        11059,
        11074
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "7139": {
      "fn": "pool.exercise",
      "offset": [
        11059,
        11074
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "7140": {
      "fn": "pool.exercise",
      "offset": [
        11059,
        11074
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "7141": {
      "fn": "pool.exercise",
      "offset": [
        11059,
        11074
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "7142": {
      "fn": "pool.exercise",
      "offset": [
        11059,
        11074
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "7143": {
      "fn": "pool.exercise",
      "offset": [
        11059,
        11079
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "7145": {
      "fn": "pool.exercise",
      "offset": [
        11059,
        11079
      ],
      "op": "ADD",
      "path": "10"
    },
    "7146": {
      "fn": "pool.exercise",
      "offset": [
        11059,
        11079
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "7147": {
      "fn": "pool.exercise",
      "offset": [
        11059,
        11079
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xFF"
    },
    "7149": {
      "fn": "pool.exercise",
      "offset": [
        11059,
        11079
      ],
      "op": "AND",
      "path": "10"
    },
    "7150": {
      "fn": "pool.exercise",
      "offset": [
        11119,
        11137
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 66,
      "value": "0x2"
    },
    "7152": {
      "fn": "pool.exercise",
      "offset": [
        11110,
        11115
      ],
      "op": "DUP2",
      "path": "10"
    },
    "7153": {
      "fn": "pool.exercise",
      "offset": [
        11110,
        11137
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "7155": {
      "fn": "pool.exercise",
      "offset": [
        11110,
        11137
      ],
      "op": "DUP2",
      "path": "10"
    },
    "7156": {
      "fn": "pool.exercise",
      "offset": [
        11110,
        11137
      ],
      "op": "GT",
      "path": "10"
    },
    "7157": {
      "fn": "pool.exercise",
      "offset": [
        11110,
        11137
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "7158": {
      "fn": "pool.exercise",
      "offset": [
        11110,
        11137
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1C01"
    },
    "7161": {
      "fn": "pool.exercise",
      "offset": [
        11110,
        11137
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "7162": {
      "fn": "pool.exercise",
      "offset": [
        11110,
        11137
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1C01"
    },
    "7165": {
      "fn": "pool.exercise",
      "offset": [
        11110,
        11137
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2870"
    },
    "7168": {
      "fn": "pool.exercise",
      "jump": "i",
      "offset": [
        11110,
        11137
      ],
      "op": "JUMP",
      "path": "10"
    },
    "7169": {
      "fn": "pool.exercise",
      "offset": [
        11110,
        11137
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "7170": {
      "branch": 114,
      "fn": "pool.exercise",
      "offset": [
        11110,
        11137
      ],
      "op": "EQ",
      "path": "10"
    },
    "7171": {
      "fn": "pool.exercise",
      "offset": [
        11110,
        11167
      ],
      "op": "DUP1",
      "path": "10"
    },
    "7172": {
      "fn": "pool.exercise",
      "offset": [
        11110,
        11167
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1C1E"
    },
    "7175": {
      "branch": 114,
      "fn": "pool.exercise",
      "offset": [
        11110,
        11167
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "7176": {
      "op": "POP"
    },
    "7177": {
      "fn": "pool.exercise",
      "offset": [
        11150,
        11167
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "7179": {
      "fn": "pool.exercise",
      "offset": [
        11141,
        11146
      ],
      "op": "DUP2",
      "path": "10"
    },
    "7180": {
      "fn": "pool.exercise",
      "offset": [
        11141,
        11167
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "7182": {
      "fn": "pool.exercise",
      "offset": [
        11141,
        11167
      ],
      "op": "DUP2",
      "path": "10"
    },
    "7183": {
      "fn": "pool.exercise",
      "offset": [
        11141,
        11167
      ],
      "op": "GT",
      "path": "10"
    },
    "7184": {
      "fn": "pool.exercise",
      "offset": [
        11141,
        11167
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "7185": {
      "fn": "pool.exercise",
      "offset": [
        11141,
        11167
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1C1C"
    },
    "7188": {
      "fn": "pool.exercise",
      "offset": [
        11141,
        11167
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "7189": {
      "fn": "pool.exercise",
      "offset": [
        11141,
        11167
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1C1C"
    },
    "7192": {
      "fn": "pool.exercise",
      "offset": [
        11141,
        11167
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2870"
    },
    "7195": {
      "fn": "pool.exercise",
      "jump": "i",
      "offset": [
        11141,
        11167
      ],
      "op": "JUMP",
      "path": "10"
    },
    "7196": {
      "fn": "pool.exercise",
      "offset": [
        11141,
        11167
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "7197": {
      "branch": 115,
      "fn": "pool.exercise",
      "offset": [
        11141,
        11167
      ],
      "op": "EQ",
      "path": "10"
    },
    "7198": {
      "fn": "pool.exercise",
      "offset": [
        11110,
        11167
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "7199": {
      "fn": "pool.exercise",
      "offset": [
        11089,
        11213
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1C61"
    },
    "7202": {
      "branch": 115,
      "fn": "pool.exercise",
      "offset": [
        11089,
        11213
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "7203": {
      "fn": "pool.exercise",
      "offset": [
        11089,
        11213
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "7205": {
      "fn": "pool.exercise",
      "offset": [
        11089,
        11213
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "7206": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7210": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7212": {
      "op": "SHL"
    },
    "7213": {
      "fn": "pool.exercise",
      "offset": [
        11089,
        11213
      ],
      "op": "DUP2",
      "path": "10"
    },
    "7214": {
      "fn": "pool.exercise",
      "offset": [
        11089,
        11213
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "7215": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7217": {
      "fn": "pool.exercise",
      "offset": [
        11089,
        11213
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "7219": {
      "fn": "pool.exercise",
      "offset": [
        11089,
        11213
      ],
      "op": "DUP3",
      "path": "10"
    },
    "7220": {
      "fn": "pool.exercise",
      "offset": [
        11089,
        11213
      ],
      "op": "ADD",
      "path": "10"
    },
    "7221": {
      "op": "MSTORE"
    },
    "7222": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "7224": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7226": {
      "op": "DUP3"
    },
    "7227": {
      "op": "ADD"
    },
    "7228": {
      "op": "MSTORE"
    },
    "7229": {
      "op": "PUSH20",
      "value": "0x2CB7BA903430BB32903737903837B9B4BA34B7B7"
    },
    "7250": {
      "op": "PUSH1",
      "value": "0x61"
    },
    "7252": {
      "op": "SHL"
    },
    "7253": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7255": {
      "op": "DUP3"
    },
    "7256": {
      "op": "ADD"
    },
    "7257": {
      "op": "MSTORE"
    },
    "7258": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7260": {
      "op": "ADD"
    },
    "7261": {
      "fn": "pool.exercise",
      "offset": [
        11089,
        11213
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x7DF"
    },
    "7264": {
      "op": "JUMP"
    },
    "7265": {
      "fn": "pool.exercise",
      "offset": [
        11089,
        11213
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "7266": {
      "fn": "pool.exercise",
      "offset": [
        11261,
        11276
      ],
      "op": "TIMESTAMP",
      "path": "10",
      "statement": 67
    },
    "7267": {
      "fn": "pool.exercise",
      "offset": [
        11244,
        11246
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x6"
    },
    "7269": {
      "fn": "pool.exercise",
      "offset": [
        11247,
        11249
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x7"
    },
    "7271": {
      "fn": "pool.exercise",
      "offset": [
        11247,
        11249
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "7272": {
      "fn": "pool.exercise",
      "offset": [
        11244,
        11250
      ],
      "op": "DUP2",
      "path": "10"
    },
    "7273": {
      "fn": "pool.exercise",
      "offset": [
        11244,
        11250
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "7274": {
      "fn": "pool.exercise",
      "offset": [
        11244,
        11250
      ],
      "op": "DUP2",
      "path": "10"
    },
    "7275": {
      "fn": "pool.exercise",
      "offset": [
        11244,
        11250
      ],
      "op": "LT",
      "path": "10"
    },
    "7276": {
      "fn": "pool.exercise",
      "offset": [
        11244,
        11250
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1C77"
    },
    "7279": {
      "fn": "pool.exercise",
      "offset": [
        11244,
        11250
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "7280": {
      "fn": "pool.exercise",
      "offset": [
        11244,
        11250
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1C77"
    },
    "7283": {
      "fn": "pool.exercise",
      "offset": [
        11244,
        11250
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x298B"
    },
    "7286": {
      "fn": "pool.exercise",
      "jump": "i",
      "offset": [
        11244,
        11250
      ],
      "op": "JUMP",
      "path": "10"
    },
    "7287": {
      "fn": "pool.exercise",
      "offset": [
        11244,
        11250
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "7288": {
      "fn": "pool.exercise",
      "offset": [
        11244,
        11250
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "7289": {
      "fn": "pool.exercise",
      "offset": [
        11244,
        11250
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "7291": {
      "fn": "pool.exercise",
      "offset": [
        11244,
        11250
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "7292": {
      "fn": "pool.exercise",
      "offset": [
        11244,
        11250
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "7294": {
      "fn": "pool.exercise",
      "offset": [
        11244,
        11250
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "7296": {
      "fn": "pool.exercise",
      "offset": [
        11244,
        11250
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "7297": {
      "fn": "pool.exercise",
      "offset": [
        11244,
        11250
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "7298": {
      "fn": "pool.exercise",
      "offset": [
        11244,
        11250
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "7300": {
      "fn": "pool.exercise",
      "offset": [
        11244,
        11250
      ],
      "op": "MUL",
      "path": "10"
    },
    "7301": {
      "fn": "pool.exercise",
      "offset": [
        11244,
        11250
      ],
      "op": "ADD",
      "path": "10"
    },
    "7302": {
      "fn": "pool.exercise",
      "offset": [
        11244,
        11257
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "7304": {
      "fn": "pool.exercise",
      "offset": [
        11244,
        11257
      ],
      "op": "ADD",
      "path": "10"
    },
    "7305": {
      "fn": "pool.exercise",
      "offset": [
        11244,
        11257
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "7306": {
      "fn": "pool.exercise",
      "offset": [
        11244,
        11276
      ],
      "op": "GT",
      "path": "10"
    },
    "7307": {
      "branch": 116,
      "fn": "pool.exercise",
      "offset": [
        11244,
        11276
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "7308": {
      "fn": "pool.exercise",
      "offset": [
        11223,
        11331
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1CD7"
    },
    "7311": {
      "branch": 116,
      "fn": "pool.exercise",
      "offset": [
        11223,
        11331
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "7312": {
      "fn": "pool.exercise",
      "offset": [
        11223,
        11331
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "7314": {
      "fn": "pool.exercise",
      "offset": [
        11223,
        11331
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "7315": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7319": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7321": {
      "op": "SHL"
    },
    "7322": {
      "fn": "pool.exercise",
      "offset": [
        11223,
        11331
      ],
      "op": "DUP2",
      "path": "10"
    },
    "7323": {
      "fn": "pool.exercise",
      "offset": [
        11223,
        11331
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "7324": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7326": {
      "fn": "pool.exercise",
      "offset": [
        11223,
        11331
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "7328": {
      "fn": "pool.exercise",
      "offset": [
        11223,
        11331
      ],
      "op": "DUP3",
      "path": "10"
    },
    "7329": {
      "fn": "pool.exercise",
      "offset": [
        11223,
        11331
      ],
      "op": "ADD",
      "path": "10"
    },
    "7330": {
      "op": "MSTORE"
    },
    "7331": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "7333": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7335": {
      "op": "DUP3"
    },
    "7336": {
      "op": "ADD"
    },
    "7337": {
      "op": "MSTORE"
    },
    "7338": {
      "op": "PUSH32",
      "value": "0x43616E6E6F74206578657263697365206265666F726520657870697279000000"
    },
    "7371": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7373": {
      "op": "DUP3"
    },
    "7374": {
      "op": "ADD"
    },
    "7375": {
      "op": "MSTORE"
    },
    "7376": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7378": {
      "op": "ADD"
    },
    "7379": {
      "fn": "pool.exercise",
      "offset": [
        11223,
        11331
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x7DF"
    },
    "7382": {
      "op": "JUMP"
    },
    "7383": {
      "fn": "pool.exercise",
      "offset": [
        11223,
        11331
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "7384": {
      "fn": "pool.exercise",
      "offset": [
        11358,
        11379
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 68,
      "value": "0x3"
    },
    "7386": {
      "fn": "pool.exercise",
      "offset": [
        11349,
        11354
      ],
      "op": "DUP2",
      "path": "10"
    },
    "7387": {
      "fn": "pool.exercise",
      "offset": [
        11349,
        11379
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "7389": {
      "fn": "pool.exercise",
      "offset": [
        11349,
        11379
      ],
      "op": "DUP2",
      "path": "10"
    },
    "7390": {
      "fn": "pool.exercise",
      "offset": [
        11349,
        11379
      ],
      "op": "GT",
      "path": "10"
    },
    "7391": {
      "fn": "pool.exercise",
      "offset": [
        11349,
        11379
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "7392": {
      "fn": "pool.exercise",
      "offset": [
        11349,
        11379
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1CEB"
    },
    "7395": {
      "fn": "pool.exercise",
      "offset": [
        11349,
        11379
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "7396": {
      "fn": "pool.exercise",
      "offset": [
        11349,
        11379
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1CEB"
    },
    "7399": {
      "fn": "pool.exercise",
      "offset": [
        11349,
        11379
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2870"
    },
    "7402": {
      "fn": "pool.exercise",
      "jump": "i",
      "offset": [
        11349,
        11379
      ],
      "op": "JUMP",
      "path": "10"
    },
    "7403": {
      "fn": "pool.exercise",
      "offset": [
        11349,
        11379
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "7404": {
      "fn": "pool.exercise",
      "offset": [
        11349,
        11379
      ],
      "op": "EQ",
      "path": "10"
    },
    "7405": {
      "branch": 117,
      "fn": "pool.exercise",
      "offset": [
        11349,
        11379
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "7406": {
      "fn": "pool.exercise",
      "offset": [
        11341,
        11407
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1D39"
    },
    "7409": {
      "branch": 117,
      "fn": "pool.exercise",
      "offset": [
        11341,
        11407
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "7410": {
      "fn": "pool.exercise",
      "offset": [
        11341,
        11407
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "7412": {
      "fn": "pool.exercise",
      "offset": [
        11341,
        11407
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "7413": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7417": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7419": {
      "op": "SHL"
    },
    "7420": {
      "fn": "pool.exercise",
      "offset": [
        11341,
        11407
      ],
      "op": "DUP2",
      "path": "10"
    },
    "7421": {
      "fn": "pool.exercise",
      "offset": [
        11341,
        11407
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "7422": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7424": {
      "fn": "pool.exercise",
      "offset": [
        11341,
        11407
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "7426": {
      "fn": "pool.exercise",
      "offset": [
        11341,
        11407
      ],
      "op": "DUP3",
      "path": "10"
    },
    "7427": {
      "fn": "pool.exercise",
      "offset": [
        11341,
        11407
      ],
      "op": "ADD",
      "path": "10"
    },
    "7428": {
      "op": "MSTORE"
    },
    "7429": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "7431": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7433": {
      "op": "DUP3"
    },
    "7434": {
      "op": "ADD"
    },
    "7435": {
      "op": "MSTORE"
    },
    "7436": {
      "op": "PUSH32",
      "value": "0x596F7520616C7265616479206578636572636973656420000000000000000000"
    },
    "7469": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7471": {
      "op": "DUP3"
    },
    "7472": {
      "op": "ADD"
    },
    "7473": {
      "op": "MSTORE"
    },
    "7474": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7476": {
      "op": "ADD"
    },
    "7477": {
      "fn": "pool.exercise",
      "offset": [
        11341,
        11407
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x7DF"
    },
    "7480": {
      "op": "JUMP"
    },
    "7481": {
      "fn": "pool.exercise",
      "offset": [
        11341,
        11407
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "7482": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7484": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7486": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7488": {
      "op": "SHL"
    },
    "7489": {
      "op": "SUB"
    },
    "7490": {
      "fn": "pool.exercise",
      "offset": [
        11433,
        11444
      ],
      "op": "DUP3",
      "path": "10"
    },
    "7491": {
      "fn": "pool.exercise",
      "offset": [
        11433,
        11444
      ],
      "op": "AND",
      "path": "10"
    },
    "7492": {
      "fn": "pool.exercise",
      "offset": [
        11417,
        11430
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "7494": {
      "fn": "pool.exercise",
      "offset": [
        11433,
        11444
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "7495": {
      "fn": "pool.exercise",
      "offset": [
        11433,
        11444
      ],
      "op": "DUP2",
      "path": "10"
    },
    "7496": {
      "fn": "pool.exercise",
      "offset": [
        11433,
        11444
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "7497": {
      "fn": "pool.exercise",
      "offset": [
        11433,
        11437
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x5"
    },
    "7499": {
      "fn": "pool.exercise",
      "offset": [
        11433,
        11444
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "7501": {
      "fn": "pool.exercise",
      "offset": [
        11433,
        11444
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "7502": {
      "fn": "pool.exercise",
      "offset": [
        11433,
        11444
      ],
      "op": "DUP2",
      "path": "10"
    },
    "7503": {
      "fn": "pool.exercise",
      "offset": [
        11433,
        11444
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "7504": {
      "fn": "pool.exercise",
      "offset": [
        11433,
        11444
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "7506": {
      "fn": "pool.exercise",
      "offset": [
        11433,
        11444
      ],
      "op": "DUP1",
      "path": "10"
    },
    "7507": {
      "fn": "pool.exercise",
      "offset": [
        11433,
        11444
      ],
      "op": "DUP4",
      "path": "10"
    },
    "7508": {
      "fn": "pool.exercise",
      "offset": [
        11433,
        11444
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "7509": {
      "fn": "pool.exercise",
      "offset": [
        11445,
        11447
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x7"
    },
    "7511": {
      "fn": "pool.exercise",
      "offset": [
        11445,
        11447
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "7512": {
      "fn": "pool.exercise",
      "offset": [
        11433,
        11448
      ],
      "op": "DUP1",
      "path": "10"
    },
    "7513": {
      "fn": "pool.exercise",
      "offset": [
        11433,
        11448
      ],
      "op": "DUP6",
      "path": "10"
    },
    "7514": {
      "fn": "pool.exercise",
      "offset": [
        11433,
        11448
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "7515": {
      "fn": "pool.exercise",
      "offset": [
        11433,
        11448
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "7516": {
      "fn": "pool.exercise",
      "offset": [
        11433,
        11448
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "7517": {
      "fn": "pool.exercise",
      "offset": [
        11433,
        11448
      ],
      "op": "DUP3",
      "path": "10"
    },
    "7518": {
      "fn": "pool.exercise",
      "offset": [
        11433,
        11448
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "7519": {
      "fn": "pool.exercise",
      "offset": [
        11433,
        11453
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "7520": {
      "fn": "pool.exercise",
      "offset": [
        11481,
        11483
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x6"
    },
    "7522": {
      "fn": "pool.exercise",
      "offset": [
        11481,
        11487
      ],
      "op": "DUP1",
      "path": "10"
    },
    "7523": {
      "fn": "pool.exercise",
      "offset": [
        11481,
        11487
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "7524": {
      "fn": "pool.exercise",
      "offset": [
        11433,
        11453
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "7525": {
      "fn": "pool.exercise",
      "offset": [
        11433,
        11453
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "7526": {
      "fn": "pool.exercise",
      "offset": [
        11417,
        11430
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "7527": {
      "fn": "pool.exercise",
      "offset": [
        11481,
        11483
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "7528": {
      "fn": "pool.exercise",
      "offset": [
        11481,
        11483
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "7529": {
      "fn": "pool.exercise",
      "offset": [
        11481,
        11487
      ],
      "op": "DUP2",
      "path": "10"
    },
    "7530": {
      "fn": "pool.exercise",
      "offset": [
        11481,
        11487
      ],
      "op": "LT",
      "path": "10"
    },
    "7531": {
      "fn": "pool.exercise",
      "offset": [
        11481,
        11487
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1D76"
    },
    "7534": {
      "fn": "pool.exercise",
      "offset": [
        11481,
        11487
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "7535": {
      "fn": "pool.exercise",
      "offset": [
        11481,
        11487
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1D76"
    },
    "7538": {
      "fn": "pool.exercise",
      "offset": [
        11481,
        11487
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x298B"
    },
    "7541": {
      "fn": "pool.exercise",
      "jump": "i",
      "offset": [
        11481,
        11487
      ],
      "op": "JUMP",
      "path": "10"
    },
    "7542": {
      "fn": "pool.exercise",
      "offset": [
        11481,
        11487
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "7543": {
      "fn": "pool.exercise",
      "offset": [
        11481,
        11487
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "7545": {
      "fn": "pool.exercise",
      "offset": [
        11481,
        11487
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "7546": {
      "fn": "pool.exercise",
      "offset": [
        11481,
        11487
      ],
      "op": "DUP3",
      "path": "10"
    },
    "7547": {
      "fn": "pool.exercise",
      "offset": [
        11481,
        11487
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "7548": {
      "fn": "pool.exercise",
      "offset": [
        11481,
        11487
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "7550": {
      "fn": "pool.exercise",
      "offset": [
        11481,
        11487
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "7551": {
      "fn": "pool.exercise",
      "offset": [
        11481,
        11487
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "7552": {
      "fn": "pool.exercise",
      "offset": [
        11481,
        11487
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "7553": {
      "fn": "pool.exercise",
      "offset": [
        11481,
        11487
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "7555": {
      "fn": "pool.exercise",
      "offset": [
        11481,
        11487
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "7556": {
      "fn": "pool.exercise",
      "offset": [
        11481,
        11487
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "7557": {
      "fn": "pool.exercise",
      "offset": [
        11481,
        11487
      ],
      "op": "MUL",
      "path": "10"
    },
    "7558": {
      "fn": "pool.exercise",
      "offset": [
        11481,
        11487
      ],
      "op": "ADD",
      "path": "10"
    },
    "7559": {
      "fn": "pool.exercise",
      "offset": [
        11481,
        11494
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "7560": {
      "fn": "pool.exercise",
      "offset": [
        11481,
        11494
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "7561": {
      "op": "POP"
    },
    "7562": {
      "fn": "pool.exercise",
      "offset": [
        11517,
        11534
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "7564": {
      "fn": "pool.exercise",
      "offset": [
        11508,
        11513
      ],
      "op": "DUP4",
      "path": "10"
    },
    "7565": {
      "fn": "pool.exercise",
      "offset": [
        11508,
        11534
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "7567": {
      "fn": "pool.exercise",
      "offset": [
        11508,
        11534
      ],
      "op": "DUP2",
      "path": "10"
    },
    "7568": {
      "fn": "pool.exercise",
      "offset": [
        11508,
        11534
      ],
      "op": "GT",
      "path": "10"
    },
    "7569": {
      "fn": "pool.exercise",
      "offset": [
        11508,
        11534
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "7570": {
      "fn": "pool.exercise",
      "offset": [
        11508,
        11534
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1D9D"
    },
    "7573": {
      "fn": "pool.exercise",
      "offset": [
        11508,
        11534
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "7574": {
      "fn": "pool.exercise",
      "offset": [
        11508,
        11534
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1D9D"
    },
    "7577": {
      "fn": "pool.exercise",
      "offset": [
        11508,
        11534
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2870"
    },
    "7580": {
      "fn": "pool.exercise",
      "jump": "i",
      "offset": [
        11508,
        11534
      ],
      "op": "JUMP",
      "path": "10"
    },
    "7581": {
      "fn": "pool.exercise",
      "offset": [
        11508,
        11534
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "7582": {
      "branch": 118,
      "fn": "pool.exercise",
      "offset": [
        11508,
        11534
      ],
      "op": "EQ",
      "path": "10"
    },
    "7583": {
      "fn": "pool.exercise",
      "offset": [
        11504,
        11783
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "7584": {
      "fn": "pool.exercise",
      "offset": [
        11504,
        11783
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1E81"
    },
    "7587": {
      "branch": 118,
      "fn": "pool.exercise",
      "offset": [
        11504,
        11783
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "7588": {
      "fn": "pool.exercise",
      "offset": [
        11566,
        11567
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 69,
      "value": "0x0"
    },
    "7590": {
      "fn": "pool.exercise",
      "offset": [
        11558,
        11563
      ],
      "op": "DUP3",
      "path": "10"
    },
    "7591": {
      "branch": 119,
      "fn": "pool.exercise",
      "offset": [
        11558,
        11567
      ],
      "op": "GT",
      "path": "10"
    },
    "7592": {
      "fn": "pool.exercise",
      "offset": [
        11550,
        11614
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1E06"
    },
    "7595": {
      "branch": 119,
      "fn": "pool.exercise",
      "offset": [
        11550,
        11614
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "7596": {
      "fn": "pool.exercise",
      "offset": [
        11550,
        11614
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "7598": {
      "fn": "pool.exercise",
      "offset": [
        11550,
        11614
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "7599": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7603": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7605": {
      "op": "SHL"
    },
    "7606": {
      "fn": "pool.exercise",
      "offset": [
        11550,
        11614
      ],
      "op": "DUP2",
      "path": "10"
    },
    "7607": {
      "fn": "pool.exercise",
      "offset": [
        11550,
        11614
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "7608": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7610": {
      "fn": "pool.exercise",
      "offset": [
        11550,
        11614
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "7612": {
      "fn": "pool.exercise",
      "offset": [
        11550,
        11614
      ],
      "op": "DUP3",
      "path": "10"
    },
    "7613": {
      "fn": "pool.exercise",
      "offset": [
        11550,
        11614
      ],
      "op": "ADD",
      "path": "10"
    },
    "7614": {
      "op": "MSTORE"
    },
    "7615": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "7617": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7619": {
      "op": "DUP3"
    },
    "7620": {
      "op": "ADD"
    },
    "7621": {
      "op": "MSTORE"
    },
    "7622": {
      "op": "PUSH32",
      "value": "0x4E6F206F6E652073656C6C20796F75722062696420616E64206E6F7468696E67"
    },
    "7655": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7657": {
      "op": "DUP3"
    },
    "7658": {
      "op": "ADD"
    },
    "7659": {
      "op": "MSTORE"
    },
    "7660": {
      "op": "PUSH10",
      "value": "0x20746F20657870697265"
    },
    "7671": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "7673": {
      "op": "SHL"
    },
    "7674": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7676": {
      "op": "DUP3"
    },
    "7677": {
      "op": "ADD"
    },
    "7678": {
      "op": "MSTORE"
    },
    "7679": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7681": {
      "op": "ADD"
    },
    "7682": {
      "fn": "pool.exercise",
      "offset": [
        11550,
        11614
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x7DF"
    },
    "7685": {
      "op": "JUMP"
    },
    "7686": {
      "fn": "pool.exercise",
      "offset": [
        11550,
        11614
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "7687": {
      "fn": "pool.exercise",
      "offset": [
        11647,
        11654
      ],
      "op": "DUP1",
      "path": "10",
      "statement": 70
    },
    "7688": {
      "fn": "pool.exercise",
      "offset": [
        11636,
        11644
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "7690": {
      "fn": "pool.exercise",
      "offset": [
        11636,
        11644
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "7691": {
      "branch": 120,
      "fn": "pool.exercise",
      "offset": [
        11636,
        11654
      ],
      "op": "LT",
      "path": "10"
    },
    "7692": {
      "fn": "pool.exercise",
      "offset": [
        11628,
        11676
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1E4B"
    },
    "7695": {
      "branch": 120,
      "fn": "pool.exercise",
      "offset": [
        11628,
        11676
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "7696": {
      "fn": "pool.exercise",
      "offset": [
        11628,
        11676
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "7698": {
      "fn": "pool.exercise",
      "offset": [
        11628,
        11676
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "7699": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7703": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7705": {
      "op": "SHL"
    },
    "7706": {
      "fn": "pool.exercise",
      "offset": [
        11628,
        11676
      ],
      "op": "DUP2",
      "path": "10"
    },
    "7707": {
      "fn": "pool.exercise",
      "offset": [
        11628,
        11676
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "7708": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7710": {
      "fn": "pool.exercise",
      "offset": [
        11628,
        11676
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "7712": {
      "fn": "pool.exercise",
      "offset": [
        11628,
        11676
      ],
      "op": "DUP3",
      "path": "10"
    },
    "7713": {
      "fn": "pool.exercise",
      "offset": [
        11628,
        11676
      ],
      "op": "ADD",
      "path": "10"
    },
    "7714": {
      "op": "MSTORE"
    },
    "7715": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "7717": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7719": {
      "op": "DUP3"
    },
    "7720": {
      "op": "ADD"
    },
    "7721": {
      "op": "MSTORE"
    },
    "7722": {
      "op": "PUSH17",
      "value": "0x45787069726520776F727468207A65726F"
    },
    "7740": {
      "op": "PUSH1",
      "value": "0x78"
    },
    "7742": {
      "op": "SHL"
    },
    "7743": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7745": {
      "op": "DUP3"
    },
    "7746": {
      "op": "ADD"
    },
    "7747": {
      "op": "MSTORE"
    },
    "7748": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7750": {
      "op": "ADD"
    },
    "7751": {
      "fn": "pool.exercise",
      "offset": [
        11628,
        11676
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x7DF"
    },
    "7754": {
      "op": "JUMP"
    },
    "7755": {
      "fn": "pool.exercise",
      "offset": [
        11628,
        11676
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "7756": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7758": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7760": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7762": {
      "op": "SHL"
    },
    "7763": {
      "op": "SUB"
    },
    "7764": {
      "fn": "pool.exercise",
      "offset": [
        11694,
        11705
      ],
      "op": "DUP5",
      "path": "10"
    },
    "7765": {
      "fn": "pool.exercise",
      "offset": [
        11694,
        11705
      ],
      "op": "AND",
      "path": "10"
    },
    "7766": {
      "fn": "pool.exercise",
      "offset": [
        11726,
        11727
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "7768": {
      "fn": "pool.exercise",
      "offset": [
        11694,
        11705
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "7769": {
      "fn": "pool.exercise",
      "offset": [
        11694,
        11705
      ],
      "op": "DUP2",
      "path": "10"
    },
    "7770": {
      "fn": "pool.exercise",
      "offset": [
        11694,
        11705
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "7771": {
      "fn": "pool.exercise",
      "offset": [
        11694,
        11698
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x5"
    },
    "7773": {
      "fn": "pool.exercise",
      "offset": [
        11694,
        11705
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "7775": {
      "fn": "pool.exercise",
      "offset": [
        11694,
        11705
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "7776": {
      "fn": "pool.exercise",
      "offset": [
        11694,
        11705
      ],
      "op": "DUP2",
      "path": "10"
    },
    "7777": {
      "fn": "pool.exercise",
      "offset": [
        11694,
        11705
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "7778": {
      "fn": "pool.exercise",
      "offset": [
        11694,
        11705
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "7780": {
      "fn": "pool.exercise",
      "offset": [
        11694,
        11705
      ],
      "op": "DUP1",
      "path": "10"
    },
    "7781": {
      "fn": "pool.exercise",
      "offset": [
        11694,
        11705
      ],
      "op": "DUP4",
      "path": "10"
    },
    "7782": {
      "fn": "pool.exercise",
      "offset": [
        11694,
        11705
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "7783": {
      "fn": "pool.exercise",
      "offset": [
        11706,
        11708
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x7"
    },
    "7785": {
      "fn": "pool.exercise",
      "offset": [
        11706,
        11708
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "7786": {
      "fn": "pool.exercise",
      "offset": [
        11694,
        11709
      ],
      "op": "DUP5",
      "path": "10"
    },
    "7787": {
      "fn": "pool.exercise",
      "offset": [
        11694,
        11709
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "7788": {
      "fn": "pool.exercise",
      "offset": [
        11694,
        11709
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "7789": {
      "fn": "pool.exercise",
      "offset": [
        11694,
        11709
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "7790": {
      "fn": "pool.exercise",
      "offset": [
        11694,
        11709
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "7791": {
      "fn": "pool.exercise",
      "offset": [
        11694,
        11709
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "7792": {
      "fn": "pool.exercise",
      "offset": [
        11694,
        11709
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "7793": {
      "fn": "pool.exercise",
      "offset": [
        11694,
        11723
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x2"
    },
    "7795": {
      "fn": "pool.exercise",
      "offset": [
        11694,
        11723
      ],
      "op": "ADD",
      "path": "10"
    },
    "7796": {
      "fn": "pool.exercise",
      "offset": [
        11694,
        11723
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "7797": {
      "branch": 121,
      "fn": "pool.exercise",
      "offset": [
        11694,
        11727
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "7798": {
      "fn": "pool.exercise",
      "offset": [
        11690,
        11773
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1E81"
    },
    "7801": {
      "branch": 121,
      "fn": "pool.exercise",
      "offset": [
        11690,
        11773
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "7802": {
      "fn": "pool.exercise",
      "offset": [
        11747,
        11758
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 71,
      "value": "0x1E81"
    },
    "7805": {
      "fn": "pool.exercise",
      "offset": [
        11747,
        11756
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x16EB"
    },
    "7808": {
      "fn": "pool.exercise",
      "jump": "i",
      "offset": [
        11747,
        11758
      ],
      "op": "JUMP",
      "path": "10"
    },
    "7809": {
      "fn": "pool.exercise",
      "offset": [
        11747,
        11758
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "7810": {
      "fn": "pool.exercise",
      "offset": [
        11805,
        11823
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x2"
    },
    "7812": {
      "fn": "pool.exercise",
      "offset": [
        11796,
        11801
      ],
      "op": "DUP4",
      "path": "10"
    },
    "7813": {
      "fn": "pool.exercise",
      "offset": [
        11796,
        11823
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "7815": {
      "fn": "pool.exercise",
      "offset": [
        11796,
        11823
      ],
      "op": "DUP2",
      "path": "10"
    },
    "7816": {
      "fn": "pool.exercise",
      "offset": [
        11796,
        11823
      ],
      "op": "GT",
      "path": "10"
    },
    "7817": {
      "fn": "pool.exercise",
      "offset": [
        11796,
        11823
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "7818": {
      "fn": "pool.exercise",
      "offset": [
        11796,
        11823
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1E95"
    },
    "7821": {
      "fn": "pool.exercise",
      "offset": [
        11796,
        11823
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "7822": {
      "fn": "pool.exercise",
      "offset": [
        11796,
        11823
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1E95"
    },
    "7825": {
      "fn": "pool.exercise",
      "offset": [
        11796,
        11823
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2870"
    },
    "7828": {
      "fn": "pool.exercise",
      "jump": "i",
      "offset": [
        11796,
        11823
      ],
      "op": "JUMP",
      "path": "10"
    },
    "7829": {
      "fn": "pool.exercise",
      "offset": [
        11796,
        11823
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "7830": {
      "branch": 122,
      "fn": "pool.exercise",
      "offset": [
        11796,
        11823
      ],
      "op": "EQ",
      "path": "10"
    },
    "7831": {
      "fn": "pool.exercise",
      "offset": [
        11792,
        12999
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "7832": {
      "fn": "pool.exercise",
      "offset": [
        11792,
        12999
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1F26"
    },
    "7835": {
      "branch": 122,
      "fn": "pool.exercise",
      "offset": [
        11792,
        12999
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "7836": {
      "fn": "pool.exercise",
      "offset": [
        11854,
        11861
      ],
      "op": "DUP1",
      "path": "10"
    },
    "7837": {
      "fn": "pool.exercise",
      "offset": [
        11843,
        11851
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "7839": {
      "fn": "pool.exercise",
      "offset": [
        11843,
        11851
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "7840": {
      "branch": 123,
      "fn": "pool.exercise",
      "offset": [
        11843,
        11861
      ],
      "op": "LT",
      "path": "10"
    },
    "7841": {
      "fn": "pool.exercise",
      "offset": [
        11839,
        12423
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "7842": {
      "fn": "pool.exercise",
      "offset": [
        11839,
        12423
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1EEF"
    },
    "7845": {
      "branch": 123,
      "fn": "pool.exercise",
      "offset": [
        11839,
        12423
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "7846": {
      "fn": "pool.exercise",
      "offset": [
        12089,
        12104
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 72,
      "value": "0x1EAF"
    },
    "7849": {
      "fn": "pool.exercise",
      "offset": [
        12097,
        12104
      ],
      "op": "DUP2",
      "path": "10"
    },
    "7850": {
      "fn": "pool.exercise",
      "offset": [
        12089,
        12094
      ],
      "op": "DUP4",
      "path": "10"
    },
    "7851": {
      "fn": "pool.exercise",
      "offset": [
        12089,
        12104
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2A1D"
    },
    "7854": {
      "fn": "pool.exercise",
      "jump": "i",
      "offset": [
        12089,
        12104
      ],
      "op": "JUMP",
      "path": "10"
    },
    "7855": {
      "fn": "pool.exercise",
      "offset": [
        12089,
        12104
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "7856": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7858": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7860": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7862": {
      "op": "SHL"
    },
    "7863": {
      "op": "SUB"
    },
    "7864": {
      "fn": "pool.exercise",
      "offset": [
        12066,
        12085
      ],
      "op": "DUP6",
      "path": "10"
    },
    "7865": {
      "fn": "pool.exercise",
      "offset": [
        12066,
        12085
      ],
      "op": "AND",
      "path": "10"
    },
    "7866": {
      "fn": "pool.exercise",
      "offset": [
        12066,
        12085
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "7868": {
      "fn": "pool.exercise",
      "offset": [
        12066,
        12085
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "7869": {
      "fn": "pool.exercise",
      "offset": [
        12066,
        12085
      ],
      "op": "DUP2",
      "path": "10"
    },
    "7870": {
      "fn": "pool.exercise",
      "offset": [
        12066,
        12085
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "7871": {
      "fn": "pool.exercise",
      "offset": [
        12066,
        12078
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "7873": {
      "fn": "pool.exercise",
      "offset": [
        12066,
        12085
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "7875": {
      "fn": "pool.exercise",
      "offset": [
        12066,
        12085
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "7876": {
      "fn": "pool.exercise",
      "offset": [
        12066,
        12085
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "7878": {
      "fn": "pool.exercise",
      "offset": [
        12066,
        12085
      ],
      "op": "DUP2",
      "path": "10"
    },
    "7879": {
      "fn": "pool.exercise",
      "offset": [
        12066,
        12085
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "7880": {
      "fn": "pool.exercise",
      "offset": [
        12066,
        12104
      ],
      "op": "DUP1",
      "path": "10"
    },
    "7881": {
      "fn": "pool.exercise",
      "offset": [
        12066,
        12104
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "7882": {
      "fn": "pool.exercise",
      "offset": [
        12066,
        12085
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "7883": {
      "fn": "pool.exercise",
      "offset": [
        12066,
        12085
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "7884": {
      "fn": "pool.exercise",
      "offset": [
        12066,
        12085
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "7885": {
      "fn": "pool.exercise",
      "offset": [
        12066,
        12104
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1ED7"
    },
    "7888": {
      "fn": "pool.exercise",
      "offset": [
        12066,
        12104
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "7889": {
      "fn": "pool.exercise",
      "offset": [
        12066,
        12104
      ],
      "op": "DUP5",
      "path": "10"
    },
    "7890": {
      "fn": "pool.exercise",
      "offset": [
        12066,
        12104
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "7891": {
      "fn": "pool.exercise",
      "offset": [
        12066,
        12104
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2973"
    },
    "7894": {
      "fn": "pool.exercise",
      "jump": "i",
      "offset": [
        12066,
        12104
      ],
      "op": "JUMP",
      "path": "10"
    },
    "7895": {
      "fn": "pool.exercise",
      "offset": [
        12066,
        12104
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "7896": {
      "fn": "pool.exercise",
      "offset": [
        12066,
        12104
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "7897": {
      "fn": "pool.exercise",
      "offset": [
        12066,
        12104
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "7898": {
      "fn": "pool.exercise",
      "offset": [
        12066,
        12104
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "7899": {
      "op": "POP"
    },
    "7900": {
      "fn": "pool.exercise",
      "offset": [
        12192,
        12207
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 73,
      "value": "0x1EE7"
    },
    "7903": {
      "fn": "pool.exercise",
      "offset": [
        12192,
        12207
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "7904": {
      "op": "POP"
    },
    "7905": {
      "fn": "pool.exercise",
      "offset": [
        12200,
        12207
      ],
      "op": "DUP2",
      "path": "10"
    },
    "7906": {
      "fn": "pool.exercise",
      "offset": [
        12192,
        12197
      ],
      "op": "DUP4",
      "path": "10"
    },
    "7907": {
      "fn": "pool.exercise",
      "offset": [
        12192,
        12207
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2A1D"
    },
    "7910": {
      "fn": "pool.exercise",
      "jump": "i",
      "offset": [
        12192,
        12207
      ],
      "op": "JUMP",
      "path": "10"
    },
    "7911": {
      "fn": "pool.exercise",
      "offset": [
        12192,
        12207
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "7912": {
      "fn": "pool.exercise",
      "offset": [
        12172,
        12189
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xA"
    },
    "7914": {
      "fn": "pool.exercise",
      "offset": [
        12172,
        12207
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "7915": {
      "fn": "pool.exercise",
      "offset": [
        11792,
        12999
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1FA7"
    },
    "7918": {
      "fn": "pool.exercise",
      "offset": [
        11792,
        12999
      ],
      "op": "JUMP",
      "path": "10"
    },
    "7919": {
      "fn": "pool.exercise",
      "offset": [
        11839,
        12423
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "7920": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7922": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7924": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7926": {
      "op": "SHL"
    },
    "7927": {
      "op": "SUB"
    },
    "7928": {
      "fn": "pool.exercise",
      "offset": [
        12287,
        12306
      ],
      "op": "DUP5",
      "path": "10",
      "statement": 74
    },
    "7929": {
      "fn": "pool.exercise",
      "offset": [
        12287,
        12306
      ],
      "op": "AND",
      "path": "10"
    },
    "7930": {
      "fn": "pool.exercise",
      "offset": [
        12287,
        12306
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "7932": {
      "fn": "pool.exercise",
      "offset": [
        12287,
        12306
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "7933": {
      "fn": "pool.exercise",
      "offset": [
        12287,
        12306
      ],
      "op": "DUP2",
      "path": "10"
    },
    "7934": {
      "fn": "pool.exercise",
      "offset": [
        12287,
        12306
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "7935": {
      "fn": "pool.exercise",
      "offset": [
        12287,
        12299
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "7937": {
      "fn": "pool.exercise",
      "offset": [
        12287,
        12306
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "7939": {
      "fn": "pool.exercise",
      "offset": [
        12287,
        12306
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "7940": {
      "fn": "pool.exercise",
      "offset": [
        12287,
        12306
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "7942": {
      "fn": "pool.exercise",
      "offset": [
        12287,
        12306
      ],
      "op": "DUP2",
      "path": "10"
    },
    "7943": {
      "fn": "pool.exercise",
      "offset": [
        12287,
        12306
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "7944": {
      "fn": "pool.exercise",
      "offset": [
        12287,
        12315
      ],
      "op": "DUP1",
      "path": "10"
    },
    "7945": {
      "fn": "pool.exercise",
      "offset": [
        12287,
        12315
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "7946": {
      "fn": "pool.exercise",
      "offset": [
        12310,
        12315
      ],
      "op": "DUP5",
      "path": "10"
    },
    "7947": {
      "fn": "pool.exercise",
      "offset": [
        12310,
        12315
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "7948": {
      "fn": "pool.exercise",
      "offset": [
        12287,
        12306
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "7949": {
      "fn": "pool.exercise",
      "offset": [
        12287,
        12315
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1F17"
    },
    "7952": {
      "fn": "pool.exercise",
      "offset": [
        12287,
        12315
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "7953": {
      "fn": "pool.exercise",
      "offset": [
        12310,
        12315
      ],
      "op": "DUP5",
      "path": "10"
    },
    "7954": {
      "fn": "pool.exercise",
      "offset": [
        12310,
        12315
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "7955": {
      "fn": "pool.exercise",
      "offset": [
        12287,
        12315
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2973"
    },
    "7958": {
      "fn": "pool.exercise",
      "jump": "i",
      "offset": [
        12287,
        12315
      ],
      "op": "JUMP",
      "path": "10"
    },
    "7959": {
      "fn": "pool.exercise",
      "offset": [
        12287,
        12315
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "7960": {
      "fn": "pool.exercise",
      "offset": [
        12287,
        12315
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "7961": {
      "fn": "pool.exercise",
      "offset": [
        12287,
        12315
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "7962": {
      "fn": "pool.exercise",
      "offset": [
        12287,
        12315
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "7963": {
      "op": "POP"
    },
    "7964": {
      "op": "POP"
    },
    "7965": {
      "fn": "pool.exercise",
      "offset": [
        12383,
        12400
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 75,
      "value": "0xA"
    },
    "7967": {
      "fn": "pool.exercise",
      "offset": [
        12383,
        12408
      ],
      "op": "DUP3",
      "path": "10"
    },
    "7968": {
      "fn": "pool.exercise",
      "offset": [
        12383,
        12408
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "7969": {
      "fn": "pool.exercise",
      "offset": [
        12383,
        12408
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "7970": {
      "fn": "pool.exercise",
      "offset": [
        11792,
        12999
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1FA7"
    },
    "7973": {
      "fn": "pool.exercise",
      "offset": [
        11792,
        12999
      ],
      "op": "JUMP",
      "path": "10"
    },
    "7974": {
      "fn": "pool.exercise",
      "offset": [
        11792,
        12999
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "7975": {
      "fn": "pool.exercise",
      "offset": [
        12468,
        12475
      ],
      "op": "DUP1",
      "path": "10"
    },
    "7976": {
      "fn": "pool.exercise",
      "offset": [
        12457,
        12465
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "7978": {
      "fn": "pool.exercise",
      "offset": [
        12457,
        12465
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "7979": {
      "branch": 124,
      "fn": "pool.exercise",
      "offset": [
        12457,
        12475
      ],
      "op": "LT",
      "path": "10"
    },
    "7980": {
      "fn": "pool.exercise",
      "offset": [
        12453,
        12951
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "7981": {
      "fn": "pool.exercise",
      "offset": [
        12453,
        12951
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1FA7"
    },
    "7984": {
      "branch": 124,
      "fn": "pool.exercise",
      "offset": [
        12453,
        12951
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "7985": {
      "fn": "pool.exercise",
      "offset": [
        12800,
        12807
      ],
      "op": "DUP1",
      "path": "10",
      "statement": 76
    },
    "7986": {
      "fn": "pool.exercise",
      "offset": [
        12767,
        12775
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "7988": {
      "fn": "pool.exercise",
      "offset": [
        12767,
        12775
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "7989": {
      "fn": "pool.exercise",
      "offset": [
        12757,
        12764
      ],
      "op": "DUP3",
      "path": "10"
    },
    "7990": {
      "fn": "pool.exercise",
      "offset": [
        12757,
        12775
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1F3F"
    },
    "7993": {
      "fn": "pool.exercise",
      "offset": [
        12757,
        12775
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "7994": {
      "fn": "pool.exercise",
      "offset": [
        12757,
        12775
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "7995": {
      "fn": "pool.exercise",
      "offset": [
        12757,
        12775
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x29A1"
    },
    "7998": {
      "fn": "pool.exercise",
      "jump": "i",
      "offset": [
        12757,
        12775
      ],
      "op": "JUMP",
      "path": "10"
    },
    "7999": {
      "fn": "pool.exercise",
      "offset": [
        12757,
        12775
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "8000": {
      "fn": "pool.exercise",
      "offset": [
        12748,
        12776
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1F49"
    },
    "8003": {
      "fn": "pool.exercise",
      "offset": [
        12748,
        12776
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "8004": {
      "fn": "pool.exercise",
      "offset": [
        12748,
        12753
      ],
      "op": "DUP5",
      "path": "10"
    },
    "8005": {
      "fn": "pool.exercise",
      "offset": [
        12748,
        12776
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x29FE"
    },
    "8008": {
      "fn": "pool.exercise",
      "jump": "i",
      "offset": [
        12748,
        12776
      ],
      "op": "JUMP",
      "path": "10"
    },
    "8009": {
      "fn": "pool.exercise",
      "offset": [
        12748,
        12776
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "8010": {
      "fn": "pool.exercise",
      "offset": [
        12747,
        12807
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1F53"
    },
    "8013": {
      "fn": "pool.exercise",
      "offset": [
        12747,
        12807
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "8014": {
      "fn": "pool.exercise",
      "offset": [
        12747,
        12807
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "8015": {
      "fn": "pool.exercise",
      "offset": [
        12747,
        12807
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2A1D"
    },
    "8018": {
      "fn": "pool.exercise",
      "jump": "i",
      "offset": [
        12747,
        12807
      ],
      "op": "JUMP",
      "path": "10"
    },
    "8019": {
      "fn": "pool.exercise",
      "offset": [
        12747,
        12807
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "8020": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8022": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8024": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8026": {
      "op": "SHL"
    },
    "8027": {
      "op": "SUB"
    },
    "8028": {
      "fn": "pool.exercise",
      "offset": [
        12723,
        12742
      ],
      "op": "DUP6",
      "path": "10"
    },
    "8029": {
      "fn": "pool.exercise",
      "offset": [
        12723,
        12742
      ],
      "op": "AND",
      "path": "10"
    },
    "8030": {
      "fn": "pool.exercise",
      "offset": [
        12723,
        12742
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "8032": {
      "fn": "pool.exercise",
      "offset": [
        12723,
        12742
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "8033": {
      "fn": "pool.exercise",
      "offset": [
        12723,
        12742
      ],
      "op": "DUP2",
      "path": "10"
    },
    "8034": {
      "fn": "pool.exercise",
      "offset": [
        12723,
        12742
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "8035": {
      "fn": "pool.exercise",
      "offset": [
        12723,
        12735
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "8037": {
      "fn": "pool.exercise",
      "offset": [
        12723,
        12742
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "8039": {
      "fn": "pool.exercise",
      "offset": [
        12723,
        12742
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "8040": {
      "fn": "pool.exercise",
      "offset": [
        12723,
        12742
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "8042": {
      "fn": "pool.exercise",
      "offset": [
        12723,
        12742
      ],
      "op": "DUP2",
      "path": "10"
    },
    "8043": {
      "fn": "pool.exercise",
      "offset": [
        12723,
        12742
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "8044": {
      "fn": "pool.exercise",
      "offset": [
        12723,
        12808
      ],
      "op": "DUP1",
      "path": "10"
    },
    "8045": {
      "fn": "pool.exercise",
      "offset": [
        12723,
        12808
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "8046": {
      "fn": "pool.exercise",
      "offset": [
        12723,
        12742
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "8047": {
      "fn": "pool.exercise",
      "offset": [
        12723,
        12742
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "8048": {
      "fn": "pool.exercise",
      "offset": [
        12723,
        12742
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "8049": {
      "fn": "pool.exercise",
      "offset": [
        12723,
        12808
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1F7B"
    },
    "8052": {
      "fn": "pool.exercise",
      "offset": [
        12723,
        12808
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "8053": {
      "fn": "pool.exercise",
      "offset": [
        12723,
        12808
      ],
      "op": "DUP5",
      "path": "10"
    },
    "8054": {
      "fn": "pool.exercise",
      "offset": [
        12723,
        12808
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "8055": {
      "fn": "pool.exercise",
      "offset": [
        12723,
        12808
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2973"
    },
    "8058": {
      "fn": "pool.exercise",
      "jump": "i",
      "offset": [
        12723,
        12808
      ],
      "op": "JUMP",
      "path": "10"
    },
    "8059": {
      "fn": "pool.exercise",
      "offset": [
        12723,
        12808
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "8060": {
      "fn": "pool.exercise",
      "offset": [
        12723,
        12808
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "8061": {
      "fn": "pool.exercise",
      "offset": [
        12723,
        12808
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "8062": {
      "fn": "pool.exercise",
      "offset": [
        12723,
        12808
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "8063": {
      "op": "POP"
    },
    "8064": {
      "op": "POP"
    },
    "8065": {
      "fn": "pool.exercise",
      "offset": [
        12916,
        12924
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 77,
      "value": "0x1"
    },
    "8067": {
      "fn": "pool.exercise",
      "offset": [
        12916,
        12924
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "8068": {
      "fn": "pool.exercise",
      "offset": [
        12929,
        12936
      ],
      "op": "DUP2",
      "path": "10"
    },
    "8069": {
      "fn": "pool.exercise",
      "offset": [
        12929,
        12936
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "8070": {
      "fn": "pool.exercise",
      "offset": [
        12906,
        12924
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1F8F"
    },
    "8073": {
      "fn": "pool.exercise",
      "offset": [
        12906,
        12924
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "8074": {
      "fn": "pool.exercise",
      "offset": [
        12929,
        12936
      ],
      "op": "DUP3",
      "path": "10"
    },
    "8075": {
      "fn": "pool.exercise",
      "offset": [
        12906,
        12924
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x29A1"
    },
    "8078": {
      "fn": "pool.exercise",
      "jump": "i",
      "offset": [
        12906,
        12924
      ],
      "op": "JUMP",
      "path": "10"
    },
    "8079": {
      "fn": "pool.exercise",
      "offset": [
        12906,
        12924
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "8080": {
      "fn": "pool.exercise",
      "offset": [
        12897,
        12925
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1F99"
    },
    "8083": {
      "fn": "pool.exercise",
      "offset": [
        12897,
        12925
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "8084": {
      "fn": "pool.exercise",
      "offset": [
        12897,
        12902
      ],
      "op": "DUP5",
      "path": "10"
    },
    "8085": {
      "fn": "pool.exercise",
      "offset": [
        12897,
        12925
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x29FE"
    },
    "8088": {
      "fn": "pool.exercise",
      "jump": "i",
      "offset": [
        12897,
        12925
      ],
      "op": "JUMP",
      "path": "10"
    },
    "8089": {
      "fn": "pool.exercise",
      "offset": [
        12897,
        12925
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "8090": {
      "fn": "pool.exercise",
      "offset": [
        12896,
        12936
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1FA3"
    },
    "8093": {
      "fn": "pool.exercise",
      "offset": [
        12896,
        12936
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "8094": {
      "fn": "pool.exercise",
      "offset": [
        12896,
        12936
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "8095": {
      "fn": "pool.exercise",
      "offset": [
        12896,
        12936
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2A1D"
    },
    "8098": {
      "fn": "pool.exercise",
      "jump": "i",
      "offset": [
        12896,
        12936
      ],
      "op": "JUMP",
      "path": "10"
    },
    "8099": {
      "fn": "pool.exercise",
      "offset": [
        12896,
        12936
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "8100": {
      "fn": "pool.exercise",
      "offset": [
        12876,
        12893
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xA"
    },
    "8102": {
      "fn": "pool.exercise",
      "offset": [
        12876,
        12936
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "8103": {
      "fn": "pool.exercise",
      "offset": [
        12453,
        12951
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "8104": {
      "op": "POP"
    },
    "8105": {
      "op": "POP"
    },
    "8106": {
      "op": "POP"
    },
    "8107": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8109": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8111": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8113": {
      "op": "SHL"
    },
    "8114": {
      "op": "SUB"
    },
    "8115": {
      "fn": "pool.exercise",
      "offset": [
        13008,
        13019
      ],
      "op": "AND",
      "path": "10",
      "statement": 78
    },
    "8116": {
      "fn": "pool.exercise",
      "offset": [
        13008,
        13019
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "8118": {
      "fn": "pool.exercise",
      "offset": [
        13008,
        13019
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "8119": {
      "fn": "pool.exercise",
      "offset": [
        13008,
        13019
      ],
      "op": "DUP2",
      "path": "10"
    },
    "8120": {
      "fn": "pool.exercise",
      "offset": [
        13008,
        13019
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "8121": {
      "fn": "pool.exercise",
      "offset": [
        13008,
        13012
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x5"
    },
    "8123": {
      "fn": "pool.exercise",
      "offset": [
        13008,
        13019
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "8125": {
      "fn": "pool.exercise",
      "offset": [
        13008,
        13019
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "8126": {
      "fn": "pool.exercise",
      "offset": [
        13008,
        13019
      ],
      "op": "DUP2",
      "path": "10"
    },
    "8127": {
      "fn": "pool.exercise",
      "offset": [
        13008,
        13019
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "8128": {
      "fn": "pool.exercise",
      "offset": [
        13008,
        13019
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "8130": {
      "fn": "pool.exercise",
      "offset": [
        13008,
        13019
      ],
      "op": "DUP1",
      "path": "10"
    },
    "8131": {
      "fn": "pool.exercise",
      "offset": [
        13008,
        13019
      ],
      "op": "DUP4",
      "path": "10"
    },
    "8132": {
      "fn": "pool.exercise",
      "offset": [
        13008,
        13019
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "8133": {
      "fn": "pool.exercise",
      "offset": [
        13020,
        13022
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x7"
    },
    "8135": {
      "fn": "pool.exercise",
      "offset": [
        13020,
        13022
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "8136": {
      "fn": "pool.exercise",
      "offset": [
        13008,
        13023
      ],
      "op": "DUP5",
      "path": "10"
    },
    "8137": {
      "fn": "pool.exercise",
      "offset": [
        13008,
        13023
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "8138": {
      "fn": "pool.exercise",
      "offset": [
        13008,
        13023
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "8139": {
      "fn": "pool.exercise",
      "offset": [
        13008,
        13023
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "8140": {
      "fn": "pool.exercise",
      "offset": [
        13008,
        13023
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "8141": {
      "fn": "pool.exercise",
      "offset": [
        13008,
        13023
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "8142": {
      "fn": "pool.exercise",
      "offset": [
        13008,
        13023
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "8143": {
      "fn": "pool.exercise",
      "offset": [
        13008,
        13028
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "8145": {
      "fn": "pool.exercise",
      "offset": [
        13008,
        13028
      ],
      "op": "ADD",
      "path": "10"
    },
    "8146": {
      "fn": "pool.exercise",
      "offset": [
        13008,
        13052
      ],
      "op": "DUP1",
      "path": "10"
    },
    "8147": {
      "fn": "pool.exercise",
      "offset": [
        13008,
        13052
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "8148": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "8150": {
      "op": "NOT"
    },
    "8151": {
      "fn": "pool.exercise",
      "offset": [
        13008,
        13052
      ],
      "op": "AND",
      "path": "10"
    },
    "8152": {
      "fn": "pool.exercise",
      "offset": [
        13031,
        13052
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "8154": {
      "fn": "pool.exercise",
      "offset": [
        13008,
        13052
      ],
      "op": "OR",
      "path": "10"
    },
    "8155": {
      "fn": "pool.exercise",
      "offset": [
        13008,
        13052
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "8156": {
      "fn": "pool.exercise",
      "offset": [
        13008,
        13052
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "8157": {
      "fn": "pool.exercise",
      "jump": "o",
      "offset": [
        10907,
        13059
      ],
      "op": "JUMP",
      "path": "10"
    },
    "8158": {
      "fn": "pool.getOrder",
      "offset": [
        15486,
        15581
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "8159": {
      "fn": "pool.getOrder",
      "offset": [
        15527,
        15543
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x60"
    },
    "8161": {
      "fn": "pool.getOrder",
      "offset": [
        15562,
        15564
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 79,
      "value": "0x6"
    },
    "8163": {
      "fn": "pool.getOrder",
      "offset": [
        15565,
        15567
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x7"
    },
    "8165": {
      "fn": "pool.getOrder",
      "offset": [
        15565,
        15567
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "8166": {
      "fn": "pool.getOrder",
      "offset": [
        15562,
        15568
      ],
      "op": "DUP2",
      "path": "10"
    },
    "8167": {
      "fn": "pool.getOrder",
      "offset": [
        15562,
        15568
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "8168": {
      "fn": "pool.getOrder",
      "offset": [
        15562,
        15568
      ],
      "op": "DUP2",
      "path": "10"
    },
    "8169": {
      "fn": "pool.getOrder",
      "offset": [
        15562,
        15568
      ],
      "op": "LT",
      "path": "10"
    },
    "8170": {
      "fn": "pool.getOrder",
      "offset": [
        15562,
        15568
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1FF5"
    },
    "8173": {
      "fn": "pool.getOrder",
      "offset": [
        15562,
        15568
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "8174": {
      "fn": "pool.getOrder",
      "offset": [
        15562,
        15568
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1FF5"
    },
    "8177": {
      "fn": "pool.getOrder",
      "offset": [
        15562,
        15568
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x298B"
    },
    "8180": {
      "fn": "pool.getOrder",
      "jump": "i",
      "offset": [
        15562,
        15568
      ],
      "op": "JUMP",
      "path": "10"
    },
    "8181": {
      "fn": "pool.getOrder",
      "offset": [
        15562,
        15568
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "8182": {
      "fn": "pool.getOrder",
      "offset": [
        15562,
        15568
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "8183": {
      "fn": "pool.getOrder",
      "offset": [
        15562,
        15568
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "8185": {
      "fn": "pool.getOrder",
      "offset": [
        15562,
        15568
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "8186": {
      "fn": "pool.getOrder",
      "offset": [
        15562,
        15568
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "8188": {
      "fn": "pool.getOrder",
      "offset": [
        15562,
        15568
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "8190": {
      "fn": "pool.getOrder",
      "offset": [
        15562,
        15568
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "8191": {
      "fn": "pool.getOrder",
      "offset": [
        15562,
        15568
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "8192": {
      "fn": "pool.getOrder",
      "offset": [
        15562,
        15568
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "8194": {
      "fn": "pool.getOrder",
      "offset": [
        15562,
        15568
      ],
      "op": "MUL",
      "path": "10"
    },
    "8195": {
      "fn": "pool.getOrder",
      "offset": [
        15562,
        15568
      ],
      "op": "ADD",
      "path": "10"
    },
    "8196": {
      "fn": "pool.getOrder",
      "offset": [
        15562,
        15574
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "8198": {
      "fn": "pool.getOrder",
      "offset": [
        15562,
        15574
      ],
      "op": "ADD",
      "path": "10"
    },
    "8199": {
      "fn": "pool.getOrder",
      "offset": [
        15555,
        15574
      ],
      "op": "DUP1",
      "path": "10"
    },
    "8200": {
      "fn": "pool.getOrder",
      "offset": [
        15555,
        15574
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "8201": {
      "fn": "pool.getOrder",
      "offset": [
        15555,
        15574
      ],
      "op": "DUP1",
      "path": "10"
    },
    "8202": {
      "fn": "pool.getOrder",
      "offset": [
        15555,
        15574
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "8204": {
      "fn": "pool.getOrder",
      "offset": [
        15555,
        15574
      ],
      "op": "MUL",
      "path": "10"
    },
    "8205": {
      "fn": "pool.getOrder",
      "offset": [
        15555,
        15574
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "8207": {
      "fn": "pool.getOrder",
      "offset": [
        15555,
        15574
      ],
      "op": "ADD",
      "path": "10"
    },
    "8208": {
      "fn": "pool.getOrder",
      "offset": [
        15555,
        15574
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "8210": {
      "fn": "pool.getOrder",
      "offset": [
        15555,
        15574
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "8211": {
      "fn": "pool.getOrder",
      "offset": [
        15555,
        15574
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "8212": {
      "fn": "pool.getOrder",
      "offset": [
        15555,
        15574
      ],
      "op": "DUP2",
      "path": "10"
    },
    "8213": {
      "fn": "pool.getOrder",
      "offset": [
        15555,
        15574
      ],
      "op": "ADD",
      "path": "10"
    },
    "8214": {
      "fn": "pool.getOrder",
      "offset": [
        15555,
        15574
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "8216": {
      "fn": "pool.getOrder",
      "offset": [
        15555,
        15574
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "8217": {
      "fn": "pool.getOrder",
      "offset": [
        15555,
        15574
      ],
      "op": "DUP1",
      "path": "10"
    },
    "8218": {
      "fn": "pool.getOrder",
      "offset": [
        15555,
        15574
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "8219": {
      "fn": "pool.getOrder",
      "offset": [
        15555,
        15574
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "8220": {
      "fn": "pool.getOrder",
      "offset": [
        15555,
        15574
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "8221": {
      "fn": "pool.getOrder",
      "offset": [
        15555,
        15574
      ],
      "op": "DUP2",
      "path": "10"
    },
    "8222": {
      "fn": "pool.getOrder",
      "offset": [
        15555,
        15574
      ],
      "op": "DUP2",
      "path": "10"
    },
    "8223": {
      "fn": "pool.getOrder",
      "offset": [
        15555,
        15574
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "8224": {
      "fn": "pool.getOrder",
      "offset": [
        15555,
        15574
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "8226": {
      "fn": "pool.getOrder",
      "offset": [
        15555,
        15574
      ],
      "op": "ADD",
      "path": "10"
    },
    "8227": {
      "fn": "pool.getOrder",
      "offset": [
        15555,
        15574
      ],
      "op": "DUP3",
      "path": "10"
    },
    "8228": {
      "fn": "pool.getOrder",
      "offset": [
        15555,
        15574
      ],
      "op": "DUP1",
      "path": "10"
    },
    "8229": {
      "fn": "pool.getOrder",
      "offset": [
        15555,
        15574
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "8230": {
      "fn": "pool.getOrder",
      "offset": [
        15555,
        15574
      ],
      "op": "DUP1",
      "path": "10"
    },
    "8231": {
      "fn": "pool.getOrder",
      "offset": [
        15555,
        15574
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "8232": {
      "fn": "pool.getOrder",
      "offset": [
        15555,
        15574
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2050"
    },
    "8235": {
      "fn": "pool.getOrder",
      "offset": [
        15555,
        15574
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "8236": {
      "fn": "pool.getOrder",
      "offset": [
        15555,
        15574
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "8238": {
      "fn": "pool.getOrder",
      "offset": [
        15555,
        15574
      ],
      "op": "MUL",
      "path": "10"
    },
    "8239": {
      "fn": "pool.getOrder",
      "offset": [
        15555,
        15574
      ],
      "op": "DUP3",
      "path": "10"
    },
    "8240": {
      "fn": "pool.getOrder",
      "offset": [
        15555,
        15574
      ],
      "op": "ADD",
      "path": "10"
    },
    "8241": {
      "fn": "pool.getOrder",
      "offset": [
        15555,
        15574
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "8242": {
      "fn": "pool.getOrder",
      "offset": [
        15555,
        15574
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "8243": {
      "fn": "pool.getOrder",
      "offset": [
        15555,
        15574
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "8245": {
      "fn": "pool.getOrder",
      "offset": [
        15555,
        15574
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "8246": {
      "fn": "pool.getOrder",
      "offset": [
        15555,
        15574
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "8248": {
      "fn": "pool.getOrder",
      "offset": [
        15555,
        15574
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "8250": {
      "fn": "pool.getOrder",
      "offset": [
        15555,
        15574
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "8251": {
      "fn": "pool.getOrder",
      "offset": [
        15555,
        15574
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "8252": {
      "fn": "pool.getOrder",
      "offset": [
        15555,
        15574
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "8253": {
      "fn": "pool.getOrder",
      "offset": [
        15555,
        15574
      ],
      "op": "DUP2",
      "path": "10"
    },
    "8254": {
      "fn": "pool.getOrder",
      "offset": [
        15555,
        15574
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "8255": {
      "fn": "pool.getOrder",
      "offset": [
        15555,
        15574
      ],
      "op": "DUP2",
      "path": "10"
    },
    "8256": {
      "fn": "pool.getOrder",
      "offset": [
        15555,
        15574
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "8257": {
      "fn": "pool.getOrder",
      "offset": [
        15555,
        15574
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "8259": {
      "fn": "pool.getOrder",
      "offset": [
        15555,
        15574
      ],
      "op": "ADD",
      "path": "10"
    },
    "8260": {
      "fn": "pool.getOrder",
      "offset": [
        15555,
        15574
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "8261": {
      "fn": "pool.getOrder",
      "offset": [
        15555,
        15574
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "8263": {
      "fn": "pool.getOrder",
      "offset": [
        15555,
        15574
      ],
      "op": "ADD",
      "path": "10"
    },
    "8264": {
      "fn": "pool.getOrder",
      "offset": [
        15555,
        15574
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "8265": {
      "fn": "pool.getOrder",
      "offset": [
        15555,
        15574
      ],
      "op": "DUP1",
      "path": "10"
    },
    "8266": {
      "fn": "pool.getOrder",
      "offset": [
        15555,
        15574
      ],
      "op": "DUP4",
      "path": "10"
    },
    "8267": {
      "fn": "pool.getOrder",
      "offset": [
        15555,
        15574
      ],
      "op": "GT",
      "path": "10"
    },
    "8268": {
      "fn": "pool.getOrder",
      "offset": [
        15555,
        15574
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x203C"
    },
    "8271": {
      "fn": "pool.getOrder",
      "offset": [
        15555,
        15574
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "8272": {
      "fn": "pool.getOrder",
      "offset": [
        15555,
        15574
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "8273": {
      "fn": "pool.getOrder",
      "offset": [
        15555,
        15574
      ],
      "op": "POP",
      "path": "10"
    },
    "8274": {
      "fn": "pool.getOrder",
      "offset": [
        15555,
        15574
      ],
      "op": "POP",
      "path": "10"
    },
    "8275": {
      "fn": "pool.getOrder",
      "offset": [
        15555,
        15574
      ],
      "op": "POP",
      "path": "10"
    },
    "8276": {
      "fn": "pool.getOrder",
      "offset": [
        15555,
        15574
      ],
      "op": "POP",
      "path": "10"
    },
    "8277": {
      "fn": "pool.getOrder",
      "offset": [
        15555,
        15574
      ],
      "op": "POP",
      "path": "10"
    },
    "8278": {
      "fn": "pool.getOrder",
      "offset": [
        15555,
        15574
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "8279": {
      "fn": "pool.getOrder",
      "offset": [
        15555,
        15574
      ],
      "op": "POP",
      "path": "10"
    },
    "8280": {
      "fn": "pool.getOrder",
      "offset": [
        15486,
        15581
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "8281": {
      "fn": "pool.getOrder",
      "jump": "o",
      "offset": [
        15486,
        15581
      ],
      "op": "JUMP",
      "path": "10"
    },
    "8282": {
      "fn": "pool.getBestBid",
      "offset": [
        9828,
        10901
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "8283": {
      "fn": "pool.getBestBid",
      "offset": [
        9914,
        9933
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "8285": {
      "fn": "pool.getBestBid",
      "offset": [
        10059,
        10060
      ],
      "op": "DUP1",
      "path": "10",
      "statement": 80
    },
    "8286": {
      "fn": "pool.getBestBid",
      "offset": [
        10037,
        10039
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x6"
    },
    "8288": {
      "fn": "pool.getBestBid",
      "offset": [
        10040,
        10042
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x7"
    },
    "8290": {
      "fn": "pool.getBestBid",
      "offset": [
        10040,
        10042
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "8291": {
      "fn": "pool.getBestBid",
      "offset": [
        10037,
        10043
      ],
      "op": "DUP2",
      "path": "10"
    },
    "8292": {
      "fn": "pool.getBestBid",
      "offset": [
        10037,
        10043
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "8293": {
      "fn": "pool.getBestBid",
      "offset": [
        10037,
        10043
      ],
      "op": "DUP2",
      "path": "10"
    },
    "8294": {
      "fn": "pool.getBestBid",
      "offset": [
        10037,
        10043
      ],
      "op": "LT",
      "path": "10"
    },
    "8295": {
      "fn": "pool.getBestBid",
      "offset": [
        10037,
        10043
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2072"
    },
    "8298": {
      "fn": "pool.getBestBid",
      "offset": [
        10037,
        10043
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "8299": {
      "fn": "pool.getBestBid",
      "offset": [
        10037,
        10043
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2072"
    },
    "8302": {
      "fn": "pool.getBestBid",
      "offset": [
        10037,
        10043
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x298B"
    },
    "8305": {
      "fn": "pool.getBestBid",
      "jump": "i",
      "offset": [
        10037,
        10043
      ],
      "op": "JUMP",
      "path": "10"
    },
    "8306": {
      "fn": "pool.getBestBid",
      "offset": [
        10037,
        10043
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "8307": {
      "fn": "pool.getBestBid",
      "offset": [
        10037,
        10043
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "8308": {
      "fn": "pool.getBestBid",
      "offset": [
        10037,
        10043
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "8310": {
      "fn": "pool.getBestBid",
      "offset": [
        10037,
        10043
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "8311": {
      "fn": "pool.getBestBid",
      "offset": [
        10037,
        10043
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "8313": {
      "fn": "pool.getBestBid",
      "offset": [
        10037,
        10043
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "8315": {
      "fn": "pool.getBestBid",
      "offset": [
        10037,
        10043
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "8316": {
      "fn": "pool.getBestBid",
      "offset": [
        10037,
        10043
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "8317": {
      "fn": "pool.getBestBid",
      "offset": [
        10037,
        10043
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "8319": {
      "fn": "pool.getBestBid",
      "offset": [
        10037,
        10043
      ],
      "op": "MUL",
      "path": "10"
    },
    "8320": {
      "fn": "pool.getBestBid",
      "offset": [
        10037,
        10043
      ],
      "op": "ADD",
      "path": "10"
    },
    "8321": {
      "fn": "pool.getBestBid",
      "offset": [
        10037,
        10049
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "8323": {
      "fn": "pool.getBestBid",
      "offset": [
        10037,
        10049
      ],
      "op": "ADD",
      "path": "10"
    },
    "8324": {
      "fn": "pool.getBestBid",
      "offset": [
        10037,
        10056
      ],
      "op": "DUP1",
      "path": "10"
    },
    "8325": {
      "fn": "pool.getBestBid",
      "offset": [
        10037,
        10056
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "8326": {
      "fn": "pool.getBestBid",
      "offset": [
        10037,
        10056
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "8327": {
      "fn": "pool.getBestBid",
      "offset": [
        10037,
        10056
      ],
      "op": "POP",
      "path": "10"
    },
    "8328": {
      "branch": 125,
      "fn": "pool.getBestBid",
      "offset": [
        10037,
        10060
      ],
      "op": "GT",
      "path": "10"
    },
    "8329": {
      "fn": "pool.getBestBid",
      "offset": [
        10029,
        10095
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x20D4"
    },
    "8332": {
      "branch": 125,
      "fn": "pool.getBestBid",
      "offset": [
        10029,
        10095
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "8333": {
      "fn": "pool.getBestBid",
      "offset": [
        10029,
        10095
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "8335": {
      "fn": "pool.getBestBid",
      "offset": [
        10029,
        10095
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "8336": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8340": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8342": {
      "op": "SHL"
    },
    "8343": {
      "fn": "pool.getBestBid",
      "offset": [
        10029,
        10095
      ],
      "op": "DUP2",
      "path": "10"
    },
    "8344": {
      "fn": "pool.getBestBid",
      "offset": [
        10029,
        10095
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "8345": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8347": {
      "fn": "pool.getBestBid",
      "offset": [
        10029,
        10095
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "8349": {
      "fn": "pool.getBestBid",
      "offset": [
        10029,
        10095
      ],
      "op": "DUP3",
      "path": "10"
    },
    "8350": {
      "fn": "pool.getBestBid",
      "offset": [
        10029,
        10095
      ],
      "op": "ADD",
      "path": "10"
    },
    "8351": {
      "op": "MSTORE"
    },
    "8352": {
      "op": "PUSH1",
      "value": "0x1E"
    },
    "8354": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8356": {
      "op": "DUP3"
    },
    "8357": {
      "op": "ADD"
    },
    "8358": {
      "op": "MSTORE"
    },
    "8359": {
      "op": "PUSH32",
      "value": "0x63616E6E6F742073656C6C206966207468657265206973206E6F206269640000"
    },
    "8392": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8394": {
      "op": "DUP3"
    },
    "8395": {
      "op": "ADD"
    },
    "8396": {
      "op": "MSTORE"
    },
    "8397": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8399": {
      "op": "ADD"
    },
    "8400": {
      "fn": "pool.getBestBid",
      "offset": [
        10029,
        10095
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x7DF"
    },
    "8403": {
      "op": "JUMP"
    },
    "8404": {
      "fn": "pool.getBestBid",
      "offset": [
        10029,
        10095
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "8405": {
      "offset": [
        423,
        426
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3E8"
    },
    "8408": {
      "fn": "pool.getBestBid",
      "offset": [
        10113,
        10124
      ],
      "op": "DUP3",
      "path": "10",
      "statement": 81
    },
    "8409": {
      "fn": "pool.getBestBid",
      "offset": [
        10113,
        10143
      ],
      "op": "LT",
      "path": "10"
    },
    "8410": {
      "branch": 126,
      "fn": "pool.getBestBid",
      "offset": [
        10113,
        10143
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "8411": {
      "fn": "pool.getBestBid",
      "offset": [
        10105,
        10163
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2118"
    },
    "8414": {
      "branch": 126,
      "fn": "pool.getBestBid",
      "offset": [
        10105,
        10163
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "8415": {
      "fn": "pool.getBestBid",
      "offset": [
        10105,
        10163
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "8417": {
      "fn": "pool.getBestBid",
      "offset": [
        10105,
        10163
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "8418": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8422": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8424": {
      "op": "SHL"
    },
    "8425": {
      "fn": "pool.getBestBid",
      "offset": [
        10105,
        10163
      ],
      "op": "DUP2",
      "path": "10"
    },
    "8426": {
      "fn": "pool.getBestBid",
      "offset": [
        10105,
        10163
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "8427": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8429": {
      "fn": "pool.getBestBid",
      "offset": [
        10105,
        10163
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "8431": {
      "fn": "pool.getBestBid",
      "offset": [
        10105,
        10163
      ],
      "op": "DUP3",
      "path": "10"
    },
    "8432": {
      "fn": "pool.getBestBid",
      "offset": [
        10105,
        10163
      ],
      "op": "ADD",
      "path": "10"
    },
    "8433": {
      "op": "MSTORE"
    },
    "8434": {
      "op": "PUSH1",
      "value": "0xF"
    },
    "8436": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8438": {
      "op": "DUP3"
    },
    "8439": {
      "op": "ADD"
    },
    "8440": {
      "op": "MSTORE"
    },
    "8441": {
      "op": "PUSH15",
      "value": "0x6D696E2073697A65203D203130303"
    },
    "8457": {
      "op": "PUSH1",
      "value": "0x8C"
    },
    "8459": {
      "op": "SHL"
    },
    "8460": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8462": {
      "op": "DUP3"
    },
    "8463": {
      "op": "ADD"
    },
    "8464": {
      "op": "MSTORE"
    },
    "8465": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8467": {
      "op": "ADD"
    },
    "8468": {
      "fn": "pool.getBestBid",
      "offset": [
        10105,
        10163
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x7DF"
    },
    "8471": {
      "op": "JUMP"
    },
    "8472": {
      "fn": "pool.getBestBid",
      "offset": [
        10105,
        10163
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "8473": {
      "fn": "pool.getBestBid",
      "offset": [
        10196,
        10198
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 82,
      "value": "0x6"
    },
    "8475": {
      "fn": "pool.getBestBid",
      "offset": [
        10199,
        10201
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x7"
    },
    "8477": {
      "fn": "pool.getBestBid",
      "offset": [
        10199,
        10201
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "8478": {
      "fn": "pool.getBestBid",
      "offset": [
        10196,
        10202
      ],
      "op": "DUP2",
      "path": "10"
    },
    "8479": {
      "fn": "pool.getBestBid",
      "offset": [
        10196,
        10202
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "8480": {
      "fn": "pool.getBestBid",
      "offset": [
        10196,
        10202
      ],
      "op": "DUP2",
      "path": "10"
    },
    "8481": {
      "fn": "pool.getBestBid",
      "offset": [
        10196,
        10202
      ],
      "op": "LT",
      "path": "10"
    },
    "8482": {
      "fn": "pool.getBestBid",
      "offset": [
        10196,
        10202
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x212D"
    },
    "8485": {
      "fn": "pool.getBestBid",
      "offset": [
        10196,
        10202
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "8486": {
      "fn": "pool.getBestBid",
      "offset": [
        10196,
        10202
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x212D"
    },
    "8489": {
      "fn": "pool.getBestBid",
      "offset": [
        10196,
        10202
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x298B"
    },
    "8492": {
      "fn": "pool.getBestBid",
      "jump": "i",
      "offset": [
        10196,
        10202
      ],
      "op": "JUMP",
      "path": "10"
    },
    "8493": {
      "fn": "pool.getBestBid",
      "offset": [
        10196,
        10202
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "8494": {
      "fn": "pool.getBestBid",
      "offset": [
        10196,
        10202
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "8495": {
      "fn": "pool.getBestBid",
      "offset": [
        10196,
        10202
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "8497": {
      "fn": "pool.getBestBid",
      "offset": [
        10196,
        10202
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "8498": {
      "fn": "pool.getBestBid",
      "offset": [
        10196,
        10202
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "8500": {
      "fn": "pool.getBestBid",
      "offset": [
        10196,
        10202
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "8502": {
      "fn": "pool.getBestBid",
      "offset": [
        10196,
        10202
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "8503": {
      "fn": "pool.getBestBid",
      "offset": [
        10196,
        10202
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "8504": {
      "fn": "pool.getBestBid",
      "offset": [
        10196,
        10202
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "8506": {
      "fn": "pool.getBestBid",
      "offset": [
        10196,
        10202
      ],
      "op": "MUL",
      "path": "10"
    },
    "8507": {
      "fn": "pool.getBestBid",
      "offset": [
        10196,
        10202
      ],
      "op": "ADD",
      "path": "10"
    },
    "8508": {
      "fn": "pool.getBestBid",
      "offset": [
        10196,
        10209
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x2"
    },
    "8510": {
      "fn": "pool.getBestBid",
      "offset": [
        10196,
        10209
      ],
      "op": "ADD",
      "path": "10"
    },
    "8511": {
      "fn": "pool.getBestBid",
      "offset": [
        10196,
        10209
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "8512": {
      "fn": "pool.getBestBid",
      "offset": [
        10181,
        10192
      ],
      "op": "DUP3",
      "path": "10"
    },
    "8513": {
      "fn": "pool.getBestBid",
      "offset": [
        10181,
        10209
      ],
      "op": "GT",
      "path": "10"
    },
    "8514": {
      "branch": 127,
      "fn": "pool.getBestBid",
      "offset": [
        10181,
        10209
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "8515": {
      "fn": "pool.getBestBid",
      "offset": [
        10173,
        10224
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x217B"
    },
    "8518": {
      "branch": 127,
      "fn": "pool.getBestBid",
      "offset": [
        10173,
        10224
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "8519": {
      "fn": "pool.getBestBid",
      "offset": [
        10173,
        10224
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "8521": {
      "fn": "pool.getBestBid",
      "offset": [
        10173,
        10224
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "8522": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8526": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8528": {
      "op": "SHL"
    },
    "8529": {
      "fn": "pool.getBestBid",
      "offset": [
        10173,
        10224
      ],
      "op": "DUP2",
      "path": "10"
    },
    "8530": {
      "fn": "pool.getBestBid",
      "offset": [
        10173,
        10224
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "8531": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8533": {
      "fn": "pool.getBestBid",
      "offset": [
        10173,
        10224
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "8535": {
      "fn": "pool.getBestBid",
      "offset": [
        10173,
        10224
      ],
      "op": "DUP3",
      "path": "10"
    },
    "8536": {
      "fn": "pool.getBestBid",
      "offset": [
        10173,
        10224
      ],
      "op": "ADD",
      "path": "10"
    },
    "8537": {
      "op": "MSTORE"
    },
    "8538": {
      "op": "PUSH1",
      "value": "0xA"
    },
    "8540": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8542": {
      "op": "DUP3"
    },
    "8543": {
      "op": "ADD"
    },
    "8544": {
      "op": "MSTORE"
    },
    "8545": {
      "op": "PUSH10",
      "value": "0x6C6F7720737570706C79"
    },
    "8556": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "8558": {
      "op": "SHL"
    },
    "8559": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8561": {
      "op": "DUP3"
    },
    "8562": {
      "op": "ADD"
    },
    "8563": {
      "op": "MSTORE"
    },
    "8564": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8566": {
      "op": "ADD"
    },
    "8567": {
      "fn": "pool.getBestBid",
      "offset": [
        10173,
        10224
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x7DF"
    },
    "8570": {
      "op": "JUMP"
    },
    "8571": {
      "fn": "pool.getBestBid",
      "offset": [
        10173,
        10224
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "8572": {
      "fn": "pool.getBestBid",
      "offset": [
        10234,
        10248
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "8574": {
      "fn": "pool.getBestBid",
      "offset": [
        10251,
        10262
      ],
      "op": "DUP3",
      "path": "10"
    },
    "8575": {
      "fn": "pool.getBestBid",
      "offset": [
        10234,
        10262
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "8576": {
      "fn": "pool.getBestBid",
      "offset": [
        10234,
        10262
      ],
      "op": "POP",
      "path": "10"
    },
    "8577": {
      "fn": "pool.getBestBid",
      "offset": [
        10272,
        10290
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "8579": {
      "fn": "pool.getBestBid",
      "offset": [
        10304,
        10327
      ],
      "op": "DUP1",
      "path": "10"
    },
    "8580": {
      "fn": "pool.getBestBid",
      "offset": [
        10337,
        10346
      ],
      "op": "DUP1",
      "path": "10"
    },
    "8581": {
      "fn": "pool.getBestBid",
      "offset": [
        10371,
        10372
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "8583": {
      "fn": "pool.getBestBid",
      "offset": [
        10349,
        10351
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x6"
    },
    "8585": {
      "fn": "pool.getBestBid",
      "offset": [
        10352,
        10354
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x7"
    },
    "8587": {
      "fn": "pool.getBestBid",
      "offset": [
        10352,
        10354
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "8588": {
      "fn": "pool.getBestBid",
      "offset": [
        10349,
        10355
      ],
      "op": "DUP2",
      "path": "10"
    },
    "8589": {
      "fn": "pool.getBestBid",
      "offset": [
        10349,
        10355
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "8590": {
      "fn": "pool.getBestBid",
      "offset": [
        10349,
        10355
      ],
      "op": "DUP2",
      "path": "10"
    },
    "8591": {
      "fn": "pool.getBestBid",
      "offset": [
        10349,
        10355
      ],
      "op": "LT",
      "path": "10"
    },
    "8592": {
      "fn": "pool.getBestBid",
      "offset": [
        10349,
        10355
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x219B"
    },
    "8595": {
      "fn": "pool.getBestBid",
      "offset": [
        10349,
        10355
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "8596": {
      "fn": "pool.getBestBid",
      "offset": [
        10349,
        10355
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x219B"
    },
    "8599": {
      "fn": "pool.getBestBid",
      "offset": [
        10349,
        10355
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x298B"
    },
    "8602": {
      "fn": "pool.getBestBid",
      "jump": "i",
      "offset": [
        10349,
        10355
      ],
      "op": "JUMP",
      "path": "10"
    },
    "8603": {
      "fn": "pool.getBestBid",
      "offset": [
        10349,
        10355
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "8604": {
      "fn": "pool.getBestBid",
      "offset": [
        10349,
        10355
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "8605": {
      "fn": "pool.getBestBid",
      "offset": [
        10349,
        10355
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "8607": {
      "fn": "pool.getBestBid",
      "offset": [
        10349,
        10355
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "8608": {
      "fn": "pool.getBestBid",
      "offset": [
        10349,
        10355
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "8610": {
      "fn": "pool.getBestBid",
      "offset": [
        10349,
        10355
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "8612": {
      "fn": "pool.getBestBid",
      "offset": [
        10349,
        10355
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "8613": {
      "fn": "pool.getBestBid",
      "offset": [
        10349,
        10355
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "8614": {
      "fn": "pool.getBestBid",
      "offset": [
        10349,
        10355
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "8616": {
      "fn": "pool.getBestBid",
      "offset": [
        10349,
        10355
      ],
      "op": "MUL",
      "path": "10"
    },
    "8617": {
      "fn": "pool.getBestBid",
      "offset": [
        10349,
        10355
      ],
      "op": "ADD",
      "path": "10"
    },
    "8618": {
      "fn": "pool.getBestBid",
      "offset": [
        10349,
        10361
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "8620": {
      "fn": "pool.getBestBid",
      "offset": [
        10349,
        10361
      ],
      "op": "ADD",
      "path": "10"
    },
    "8621": {
      "fn": "pool.getBestBid",
      "offset": [
        10349,
        10368
      ],
      "op": "DUP1",
      "path": "10"
    },
    "8622": {
      "fn": "pool.getBestBid",
      "offset": [
        10349,
        10368
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "8623": {
      "fn": "pool.getBestBid",
      "offset": [
        10349,
        10368
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "8624": {
      "fn": "pool.getBestBid",
      "offset": [
        10349,
        10368
      ],
      "op": "POP",
      "path": "10"
    },
    "8625": {
      "fn": "pool.getBestBid",
      "offset": [
        10349,
        10372
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x21BA"
    },
    "8628": {
      "fn": "pool.getBestBid",
      "offset": [
        10349,
        10372
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "8629": {
      "fn": "pool.getBestBid",
      "offset": [
        10349,
        10372
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "8630": {
      "fn": "pool.getBestBid",
      "offset": [
        10349,
        10372
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x29A1"
    },
    "8633": {
      "fn": "pool.getBestBid",
      "jump": "i",
      "offset": [
        10349,
        10372
      ],
      "op": "JUMP",
      "path": "10"
    },
    "8634": {
      "fn": "pool.getBestBid",
      "offset": [
        10349,
        10372
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "8635": {
      "fn": "pool.getBestBid",
      "offset": [
        10337,
        10372
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "8636": {
      "fn": "pool.getBestBid",
      "offset": [
        10337,
        10372
      ],
      "op": "POP",
      "path": "10"
    },
    "8637": {
      "fn": "pool.getBestBid",
      "offset": [
        10382,
        10819
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "8638": {
      "fn": "pool.getBestBid",
      "offset": [
        10389,
        10399
      ],
      "op": "DUP4",
      "path": "10"
    },
    "8639": {
      "fn": "pool.getBestBid",
      "offset": [
        10389,
        10399
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "8640": {
      "fn": "pool.getBestBid",
      "offset": [
        10382,
        10819
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2384"
    },
    "8643": {
      "fn": "pool.getBestBid",
      "offset": [
        10382,
        10819
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "8644": {
      "fn": "pool.getBestBid",
      "offset": [
        10438,
        10440
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 83,
      "value": "0x7"
    },
    "8646": {
      "fn": "pool.getBestBid",
      "offset": [
        10438,
        10440
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "8647": {
      "fn": "pool.getBestBid",
      "offset": [
        10433,
        10441
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "8649": {
      "fn": "pool.getBestBid",
      "offset": [
        10433,
        10441
      ],
      "op": "DUP2",
      "path": "10"
    },
    "8650": {
      "fn": "pool.getBestBid",
      "offset": [
        10433,
        10441
      ],
      "op": "DUP2",
      "path": "10"
    },
    "8651": {
      "fn": "pool.getBestBid",
      "offset": [
        10433,
        10441
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "8652": {
      "fn": "pool.getBestBid",
      "offset": [
        10433,
        10437
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "8654": {
      "fn": "pool.getBestBid",
      "offset": [
        10433,
        10441
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "8656": {
      "fn": "pool.getBestBid",
      "offset": [
        10433,
        10441
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "8657": {
      "fn": "pool.getBestBid",
      "offset": [
        10433,
        10441
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "8659": {
      "fn": "pool.getBestBid",
      "offset": [
        10433,
        10441
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "8660": {
      "fn": "pool.getBestBid",
      "offset": [
        10433,
        10441
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "8661": {
      "fn": "pool.getBestBid",
      "offset": [
        10442,
        10444
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x6"
    },
    "8663": {
      "fn": "pool.getBestBid",
      "offset": [
        10442,
        10448
      ],
      "op": "DUP1",
      "path": "10"
    },
    "8664": {
      "fn": "pool.getBestBid",
      "offset": [
        10442,
        10448
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "8665": {
      "fn": "pool.getBestBid",
      "offset": [
        10433,
        10441
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "8666": {
      "fn": "pool.getBestBid",
      "offset": [
        10433,
        10441
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "8667": {
      "fn": "pool.getBestBid",
      "offset": [
        10442,
        10444
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "8668": {
      "fn": "pool.getBestBid",
      "offset": [
        10442,
        10444
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "8669": {
      "fn": "pool.getBestBid",
      "offset": [
        10442,
        10448
      ],
      "op": "DUP2",
      "path": "10"
    },
    "8670": {
      "fn": "pool.getBestBid",
      "offset": [
        10442,
        10448
      ],
      "op": "LT",
      "path": "10"
    },
    "8671": {
      "fn": "pool.getBestBid",
      "offset": [
        10442,
        10448
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x21EA"
    },
    "8674": {
      "fn": "pool.getBestBid",
      "offset": [
        10442,
        10448
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "8675": {
      "fn": "pool.getBestBid",
      "offset": [
        10442,
        10448
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x21EA"
    },
    "8678": {
      "fn": "pool.getBestBid",
      "offset": [
        10442,
        10448
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x298B"
    },
    "8681": {
      "fn": "pool.getBestBid",
      "jump": "i",
      "offset": [
        10442,
        10448
      ],
      "op": "JUMP",
      "path": "10"
    },
    "8682": {
      "fn": "pool.getBestBid",
      "offset": [
        10442,
        10448
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "8683": {
      "fn": "pool.getBestBid",
      "offset": [
        10442,
        10448
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "8684": {
      "fn": "pool.getBestBid",
      "offset": [
        10442,
        10448
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "8686": {
      "fn": "pool.getBestBid",
      "offset": [
        10442,
        10448
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "8687": {
      "fn": "pool.getBestBid",
      "offset": [
        10442,
        10448
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "8689": {
      "fn": "pool.getBestBid",
      "offset": [
        10442,
        10448
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "8691": {
      "fn": "pool.getBestBid",
      "offset": [
        10442,
        10448
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "8692": {
      "fn": "pool.getBestBid",
      "offset": [
        10442,
        10448
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "8693": {
      "fn": "pool.getBestBid",
      "offset": [
        10442,
        10448
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "8695": {
      "fn": "pool.getBestBid",
      "offset": [
        10442,
        10448
      ],
      "op": "MUL",
      "path": "10"
    },
    "8696": {
      "fn": "pool.getBestBid",
      "offset": [
        10442,
        10448
      ],
      "op": "ADD",
      "path": "10"
    },
    "8697": {
      "fn": "pool.getBestBid",
      "offset": [
        10442,
        10454
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "8699": {
      "fn": "pool.getBestBid",
      "offset": [
        10442,
        10454
      ],
      "op": "ADD",
      "path": "10"
    },
    "8700": {
      "fn": "pool.getBestBid",
      "offset": [
        10455,
        10456
      ],
      "op": "DUP3",
      "path": "10"
    },
    "8701": {
      "fn": "pool.getBestBid",
      "offset": [
        10442,
        10457
      ],
      "op": "DUP2",
      "path": "10"
    },
    "8702": {
      "fn": "pool.getBestBid",
      "offset": [
        10442,
        10457
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "8703": {
      "fn": "pool.getBestBid",
      "offset": [
        10442,
        10457
      ],
      "op": "DUP2",
      "path": "10"
    },
    "8704": {
      "fn": "pool.getBestBid",
      "offset": [
        10442,
        10457
      ],
      "op": "LT",
      "path": "10"
    },
    "8705": {
      "fn": "pool.getBestBid",
      "offset": [
        10442,
        10457
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x220C"
    },
    "8708": {
      "fn": "pool.getBestBid",
      "offset": [
        10442,
        10457
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "8709": {
      "fn": "pool.getBestBid",
      "offset": [
        10442,
        10457
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x220C"
    },
    "8712": {
      "fn": "pool.getBestBid",
      "offset": [
        10442,
        10457
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x298B"
    },
    "8715": {
      "fn": "pool.getBestBid",
      "jump": "i",
      "offset": [
        10442,
        10457
      ],
      "op": "JUMP",
      "path": "10"
    },
    "8716": {
      "fn": "pool.getBestBid",
      "offset": [
        10442,
        10457
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "8717": {
      "fn": "pool.getBestBid",
      "offset": [
        10442,
        10457
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "8718": {
      "fn": "pool.getBestBid",
      "offset": [
        10442,
        10457
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "8720": {
      "fn": "pool.getBestBid",
      "offset": [
        10442,
        10457
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "8721": {
      "fn": "pool.getBestBid",
      "offset": [
        10442,
        10457
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "8723": {
      "fn": "pool.getBestBid",
      "offset": [
        10442,
        10457
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "8725": {
      "fn": "pool.getBestBid",
      "offset": [
        10442,
        10457
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "8726": {
      "fn": "pool.getBestBid",
      "offset": [
        10442,
        10457
      ],
      "op": "ADD",
      "path": "10"
    },
    "8727": {
      "fn": "pool.getBestBid",
      "offset": [
        10442,
        10457
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "8728": {
      "fn": "pool.getBestBid",
      "offset": [
        10433,
        10458
      ],
      "op": "DUP2",
      "path": "10"
    },
    "8729": {
      "fn": "pool.getBestBid",
      "offset": [
        10433,
        10458
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "8730": {
      "fn": "pool.getBestBid",
      "offset": [
        10433,
        10458
      ],
      "op": "DUP2",
      "path": "10"
    },
    "8731": {
      "fn": "pool.getBestBid",
      "offset": [
        10433,
        10458
      ],
      "op": "LT",
      "path": "10"
    },
    "8732": {
      "fn": "pool.getBestBid",
      "offset": [
        10433,
        10458
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2227"
    },
    "8735": {
      "fn": "pool.getBestBid",
      "offset": [
        10433,
        10458
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "8736": {
      "fn": "pool.getBestBid",
      "offset": [
        10433,
        10458
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2227"
    },
    "8739": {
      "fn": "pool.getBestBid",
      "offset": [
        10433,
        10458
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x298B"
    },
    "8742": {
      "fn": "pool.getBestBid",
      "jump": "i",
      "offset": [
        10433,
        10458
      ],
      "op": "JUMP",
      "path": "10"
    },
    "8743": {
      "fn": "pool.getBestBid",
      "offset": [
        10433,
        10458
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "8744": {
      "fn": "pool.getBestBid",
      "offset": [
        10433,
        10458
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "8745": {
      "fn": "pool.getBestBid",
      "offset": [
        10433,
        10458
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "8747": {
      "fn": "pool.getBestBid",
      "offset": [
        10433,
        10458
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "8748": {
      "fn": "pool.getBestBid",
      "offset": [
        10433,
        10458
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "8750": {
      "fn": "pool.getBestBid",
      "offset": [
        10433,
        10458
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "8752": {
      "fn": "pool.getBestBid",
      "offset": [
        10433,
        10458
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "8753": {
      "fn": "pool.getBestBid",
      "offset": [
        10433,
        10458
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "8754": {
      "fn": "pool.getBestBid",
      "offset": [
        10433,
        10458
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "8756": {
      "fn": "pool.getBestBid",
      "offset": [
        10433,
        10458
      ],
      "op": "MUL",
      "path": "10"
    },
    "8757": {
      "fn": "pool.getBestBid",
      "offset": [
        10433,
        10458
      ],
      "op": "ADD",
      "path": "10"
    },
    "8758": {
      "fn": "pool.getBestBid",
      "offset": [
        10433,
        10463
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "8760": {
      "fn": "pool.getBestBid",
      "offset": [
        10433,
        10463
      ],
      "op": "ADD",
      "path": "10"
    },
    "8761": {
      "fn": "pool.getBestBid",
      "offset": [
        10433,
        10463
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "8762": {
      "fn": "pool.getBestBid",
      "offset": [
        10415,
        10463
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "8763": {
      "fn": "pool.getBestBid",
      "offset": [
        10415,
        10463
      ],
      "op": "POP",
      "path": "10"
    },
    "8764": {
      "fn": "pool.getBestBid",
      "offset": [
        10491,
        10506
      ],
      "op": "DUP2",
      "path": "10"
    },
    "8765": {
      "fn": "pool.getBestBid",
      "offset": [
        10481,
        10487
      ],
      "op": "DUP5",
      "path": "10"
    },
    "8766": {
      "branch": 128,
      "fn": "pool.getBestBid",
      "offset": [
        10481,
        10506
      ],
      "op": "LT",
      "path": "10"
    },
    "8767": {
      "fn": "pool.getBestBid",
      "offset": [
        10477,
        10792
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x22E0"
    },
    "8770": {
      "branch": 128,
      "fn": "pool.getBestBid",
      "offset": [
        10477,
        10792
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "8771": {
      "fn": "pool.getBestBid",
      "offset": [
        10584,
        10586
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 84,
      "value": "0x7"
    },
    "8773": {
      "fn": "pool.getBestBid",
      "offset": [
        10584,
        10586
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "8774": {
      "fn": "pool.getBestBid",
      "offset": [
        10579,
        10587
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "8776": {
      "fn": "pool.getBestBid",
      "offset": [
        10579,
        10587
      ],
      "op": "DUP2",
      "path": "10"
    },
    "8777": {
      "fn": "pool.getBestBid",
      "offset": [
        10579,
        10587
      ],
      "op": "DUP2",
      "path": "10"
    },
    "8778": {
      "fn": "pool.getBestBid",
      "offset": [
        10579,
        10587
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "8779": {
      "fn": "pool.getBestBid",
      "offset": [
        10579,
        10583
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "8781": {
      "fn": "pool.getBestBid",
      "offset": [
        10579,
        10587
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "8783": {
      "fn": "pool.getBestBid",
      "offset": [
        10579,
        10587
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "8784": {
      "fn": "pool.getBestBid",
      "offset": [
        10579,
        10587
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "8786": {
      "fn": "pool.getBestBid",
      "offset": [
        10579,
        10587
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "8787": {
      "fn": "pool.getBestBid",
      "offset": [
        10579,
        10587
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "8788": {
      "fn": "pool.getBestBid",
      "offset": [
        10588,
        10590
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x6"
    },
    "8790": {
      "fn": "pool.getBestBid",
      "offset": [
        10588,
        10594
      ],
      "op": "DUP1",
      "path": "10"
    },
    "8791": {
      "fn": "pool.getBestBid",
      "offset": [
        10588,
        10594
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "8792": {
      "fn": "pool.getBestBid",
      "offset": [
        10579,
        10587
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "8793": {
      "fn": "pool.getBestBid",
      "offset": [
        10579,
        10587
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "8794": {
      "fn": "pool.getBestBid",
      "offset": [
        10588,
        10590
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "8795": {
      "fn": "pool.getBestBid",
      "offset": [
        10588,
        10590
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "8796": {
      "fn": "pool.getBestBid",
      "offset": [
        10588,
        10594
      ],
      "op": "DUP2",
      "path": "10"
    },
    "8797": {
      "fn": "pool.getBestBid",
      "offset": [
        10588,
        10594
      ],
      "op": "LT",
      "path": "10"
    },
    "8798": {
      "fn": "pool.getBestBid",
      "offset": [
        10588,
        10594
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2269"
    },
    "8801": {
      "fn": "pool.getBestBid",
      "offset": [
        10588,
        10594
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "8802": {
      "fn": "pool.getBestBid",
      "offset": [
        10588,
        10594
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2269"
    },
    "8805": {
      "fn": "pool.getBestBid",
      "offset": [
        10588,
        10594
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x298B"
    },
    "8808": {
      "fn": "pool.getBestBid",
      "jump": "i",
      "offset": [
        10588,
        10594
      ],
      "op": "JUMP",
      "path": "10"
    },
    "8809": {
      "fn": "pool.getBestBid",
      "offset": [
        10588,
        10594
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "8810": {
      "fn": "pool.getBestBid",
      "offset": [
        10588,
        10594
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "8811": {
      "fn": "pool.getBestBid",
      "offset": [
        10588,
        10594
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "8813": {
      "fn": "pool.getBestBid",
      "offset": [
        10588,
        10594
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "8814": {
      "fn": "pool.getBestBid",
      "offset": [
        10588,
        10594
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "8816": {
      "fn": "pool.getBestBid",
      "offset": [
        10588,
        10594
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "8818": {
      "fn": "pool.getBestBid",
      "offset": [
        10588,
        10594
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "8819": {
      "fn": "pool.getBestBid",
      "offset": [
        10588,
        10594
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "8820": {
      "fn": "pool.getBestBid",
      "offset": [
        10588,
        10594
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "8822": {
      "fn": "pool.getBestBid",
      "offset": [
        10588,
        10594
      ],
      "op": "MUL",
      "path": "10"
    },
    "8823": {
      "fn": "pool.getBestBid",
      "offset": [
        10588,
        10594
      ],
      "op": "ADD",
      "path": "10"
    },
    "8824": {
      "fn": "pool.getBestBid",
      "offset": [
        10588,
        10600
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "8826": {
      "fn": "pool.getBestBid",
      "offset": [
        10588,
        10600
      ],
      "op": "ADD",
      "path": "10"
    },
    "8827": {
      "fn": "pool.getBestBid",
      "offset": [
        10601,
        10602
      ],
      "op": "DUP3",
      "path": "10"
    },
    "8828": {
      "fn": "pool.getBestBid",
      "offset": [
        10588,
        10603
      ],
      "op": "DUP2",
      "path": "10"
    },
    "8829": {
      "fn": "pool.getBestBid",
      "offset": [
        10588,
        10603
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "8830": {
      "fn": "pool.getBestBid",
      "offset": [
        10588,
        10603
      ],
      "op": "DUP2",
      "path": "10"
    },
    "8831": {
      "fn": "pool.getBestBid",
      "offset": [
        10588,
        10603
      ],
      "op": "LT",
      "path": "10"
    },
    "8832": {
      "fn": "pool.getBestBid",
      "offset": [
        10588,
        10603
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x228B"
    },
    "8835": {
      "fn": "pool.getBestBid",
      "offset": [
        10588,
        10603
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "8836": {
      "fn": "pool.getBestBid",
      "offset": [
        10588,
        10603
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x228B"
    },
    "8839": {
      "fn": "pool.getBestBid",
      "offset": [
        10588,
        10603
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x298B"
    },
    "8842": {
      "fn": "pool.getBestBid",
      "jump": "i",
      "offset": [
        10588,
        10603
      ],
      "op": "JUMP",
      "path": "10"
    },
    "8843": {
      "fn": "pool.getBestBid",
      "offset": [
        10588,
        10603
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "8844": {
      "fn": "pool.getBestBid",
      "offset": [
        10588,
        10603
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "8845": {
      "fn": "pool.getBestBid",
      "offset": [
        10588,
        10603
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "8847": {
      "fn": "pool.getBestBid",
      "offset": [
        10588,
        10603
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "8848": {
      "fn": "pool.getBestBid",
      "offset": [
        10588,
        10603
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "8850": {
      "fn": "pool.getBestBid",
      "offset": [
        10588,
        10603
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "8852": {
      "fn": "pool.getBestBid",
      "offset": [
        10588,
        10603
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "8853": {
      "fn": "pool.getBestBid",
      "offset": [
        10588,
        10603
      ],
      "op": "ADD",
      "path": "10"
    },
    "8854": {
      "fn": "pool.getBestBid",
      "offset": [
        10588,
        10603
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "8855": {
      "fn": "pool.getBestBid",
      "offset": [
        10579,
        10604
      ],
      "op": "DUP2",
      "path": "10"
    },
    "8856": {
      "fn": "pool.getBestBid",
      "offset": [
        10579,
        10604
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "8857": {
      "fn": "pool.getBestBid",
      "offset": [
        10579,
        10604
      ],
      "op": "DUP2",
      "path": "10"
    },
    "8858": {
      "fn": "pool.getBestBid",
      "offset": [
        10579,
        10604
      ],
      "op": "LT",
      "path": "10"
    },
    "8859": {
      "fn": "pool.getBestBid",
      "offset": [
        10579,
        10604
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x22A6"
    },
    "8862": {
      "fn": "pool.getBestBid",
      "offset": [
        10579,
        10604
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "8863": {
      "fn": "pool.getBestBid",
      "offset": [
        10579,
        10604
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x22A6"
    },
    "8866": {
      "fn": "pool.getBestBid",
      "offset": [
        10579,
        10604
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x298B"
    },
    "8869": {
      "fn": "pool.getBestBid",
      "jump": "i",
      "offset": [
        10579,
        10604
      ],
      "op": "JUMP",
      "path": "10"
    },
    "8870": {
      "fn": "pool.getBestBid",
      "offset": [
        10579,
        10604
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "8871": {
      "fn": "pool.getBestBid",
      "offset": [
        10579,
        10604
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "8872": {
      "fn": "pool.getBestBid",
      "offset": [
        10579,
        10604
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "8874": {
      "fn": "pool.getBestBid",
      "offset": [
        10579,
        10604
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "8875": {
      "fn": "pool.getBestBid",
      "offset": [
        10579,
        10604
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "8877": {
      "fn": "pool.getBestBid",
      "offset": [
        10579,
        10604
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "8879": {
      "fn": "pool.getBestBid",
      "offset": [
        10579,
        10604
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "8880": {
      "fn": "pool.getBestBid",
      "offset": [
        10579,
        10604
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "8881": {
      "fn": "pool.getBestBid",
      "offset": [
        10579,
        10604
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "8883": {
      "fn": "pool.getBestBid",
      "offset": [
        10579,
        10604
      ],
      "op": "MUL",
      "path": "10"
    },
    "8884": {
      "fn": "pool.getBestBid",
      "offset": [
        10579,
        10604
      ],
      "op": "ADD",
      "path": "10"
    },
    "8885": {
      "fn": "pool.getBestBid",
      "offset": [
        10579,
        10610
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "8887": {
      "fn": "pool.getBestBid",
      "offset": [
        10579,
        10610
      ],
      "op": "ADD",
      "path": "10"
    },
    "8888": {
      "fn": "pool.getBestBid",
      "offset": [
        10579,
        10610
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "8889": {
      "fn": "pool.getBestBid",
      "offset": [
        10541,
        10556
      ],
      "op": "DUP3",
      "path": "10"
    },
    "8890": {
      "fn": "pool.getBestBid",
      "offset": [
        10541,
        10610
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x22C3"
    },
    "8893": {
      "fn": "pool.getBestBid",
      "offset": [
        10541,
        10610
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "8894": {
      "fn": "pool.getBestBid",
      "offset": [
        10541,
        10610
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "8895": {
      "fn": "pool.getBestBid",
      "offset": [
        10541,
        10610
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x29FE"
    },
    "8898": {
      "fn": "pool.getBestBid",
      "jump": "i",
      "offset": [
        10541,
        10610
      ],
      "op": "JUMP",
      "path": "10"
    },
    "8899": {
      "fn": "pool.getBestBid",
      "offset": [
        10541,
        10610
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "8900": {
      "fn": "pool.getBestBid",
      "offset": [
        10526,
        10611
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x22CD"
    },
    "8903": {
      "fn": "pool.getBestBid",
      "offset": [
        10526,
        10611
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "8904": {
      "fn": "pool.getBestBid",
      "offset": [
        10526,
        10611
      ],
      "op": "DUP5",
      "path": "10"
    },
    "8905": {
      "fn": "pool.getBestBid",
      "offset": [
        10526,
        10611
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2973"
    },
    "8908": {
      "fn": "pool.getBestBid",
      "jump": "i",
      "offset": [
        10526,
        10611
      ],
      "op": "JUMP",
      "path": "10"
    },
    "8909": {
      "fn": "pool.getBestBid",
      "offset": [
        10526,
        10611
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "8910": {
      "fn": "pool.getBestBid",
      "offset": [
        10526,
        10611
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "8911": {
      "op": "POP"
    },
    "8912": {
      "fn": "pool.getBestBid",
      "offset": [
        10629,
        10654
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 85,
      "value": "0x22D9"
    },
    "8915": {
      "fn": "pool.getBestBid",
      "offset": [
        10639,
        10654
      ],
      "op": "DUP3",
      "path": "10"
    },
    "8916": {
      "fn": "pool.getBestBid",
      "offset": [
        10629,
        10654
      ],
      "op": "DUP6",
      "path": "10"
    },
    "8917": {
      "fn": "pool.getBestBid",
      "offset": [
        10629,
        10654
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x29A1"
    },
    "8920": {
      "fn": "pool.getBestBid",
      "jump": "i",
      "offset": [
        10629,
        10654
      ],
      "op": "JUMP",
      "path": "10"
    },
    "8921": {
      "fn": "pool.getBestBid",
      "offset": [
        10629,
        10654
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "8922": {
      "fn": "pool.getBestBid",
      "offset": [
        10629,
        10654
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "8923": {
      "fn": "pool.getBestBid",
      "offset": [
        10629,
        10654
      ],
      "op": "POP",
      "path": "10"
    },
    "8924": {
      "fn": "pool.getBestBid",
      "offset": [
        10477,
        10792
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2372"
    },
    "8927": {
      "fn": "pool.getBestBid",
      "offset": [
        10477,
        10792
      ],
      "op": "JUMP",
      "path": "10"
    },
    "8928": {
      "fn": "pool.getBestBid",
      "offset": [
        10477,
        10792
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "8929": {
      "fn": "pool.getBestBid",
      "offset": [
        10722,
        10724
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 86,
      "value": "0x7"
    },
    "8931": {
      "fn": "pool.getBestBid",
      "offset": [
        10722,
        10724
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "8932": {
      "fn": "pool.getBestBid",
      "offset": [
        10717,
        10725
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "8934": {
      "fn": "pool.getBestBid",
      "offset": [
        10717,
        10725
      ],
      "op": "DUP2",
      "path": "10"
    },
    "8935": {
      "fn": "pool.getBestBid",
      "offset": [
        10717,
        10725
      ],
      "op": "DUP2",
      "path": "10"
    },
    "8936": {
      "fn": "pool.getBestBid",
      "offset": [
        10717,
        10725
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "8937": {
      "fn": "pool.getBestBid",
      "offset": [
        10717,
        10721
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "8939": {
      "fn": "pool.getBestBid",
      "offset": [
        10717,
        10725
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "8941": {
      "fn": "pool.getBestBid",
      "offset": [
        10717,
        10725
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "8942": {
      "fn": "pool.getBestBid",
      "offset": [
        10717,
        10725
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "8944": {
      "fn": "pool.getBestBid",
      "offset": [
        10717,
        10725
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "8945": {
      "fn": "pool.getBestBid",
      "offset": [
        10717,
        10725
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "8946": {
      "fn": "pool.getBestBid",
      "offset": [
        10726,
        10728
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x6"
    },
    "8948": {
      "fn": "pool.getBestBid",
      "offset": [
        10726,
        10732
      ],
      "op": "DUP1",
      "path": "10"
    },
    "8949": {
      "fn": "pool.getBestBid",
      "offset": [
        10726,
        10732
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "8950": {
      "fn": "pool.getBestBid",
      "offset": [
        10717,
        10725
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "8951": {
      "fn": "pool.getBestBid",
      "offset": [
        10717,
        10725
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "8952": {
      "fn": "pool.getBestBid",
      "offset": [
        10726,
        10728
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "8953": {
      "fn": "pool.getBestBid",
      "offset": [
        10726,
        10728
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "8954": {
      "fn": "pool.getBestBid",
      "offset": [
        10726,
        10732
      ],
      "op": "DUP2",
      "path": "10"
    },
    "8955": {
      "fn": "pool.getBestBid",
      "offset": [
        10726,
        10732
      ],
      "op": "LT",
      "path": "10"
    },
    "8956": {
      "fn": "pool.getBestBid",
      "offset": [
        10726,
        10732
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2307"
    },
    "8959": {
      "fn": "pool.getBestBid",
      "offset": [
        10726,
        10732
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "8960": {
      "fn": "pool.getBestBid",
      "offset": [
        10726,
        10732
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2307"
    },
    "8963": {
      "fn": "pool.getBestBid",
      "offset": [
        10726,
        10732
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x298B"
    },
    "8966": {
      "fn": "pool.getBestBid",
      "jump": "i",
      "offset": [
        10726,
        10732
      ],
      "op": "JUMP",
      "path": "10"
    },
    "8967": {
      "fn": "pool.getBestBid",
      "offset": [
        10726,
        10732
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "8968": {
      "fn": "pool.getBestBid",
      "offset": [
        10726,
        10732
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "8969": {
      "fn": "pool.getBestBid",
      "offset": [
        10726,
        10732
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "8971": {
      "fn": "pool.getBestBid",
      "offset": [
        10726,
        10732
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "8972": {
      "fn": "pool.getBestBid",
      "offset": [
        10726,
        10732
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "8974": {
      "fn": "pool.getBestBid",
      "offset": [
        10726,
        10732
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "8976": {
      "fn": "pool.getBestBid",
      "offset": [
        10726,
        10732
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "8977": {
      "fn": "pool.getBestBid",
      "offset": [
        10726,
        10732
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "8978": {
      "fn": "pool.getBestBid",
      "offset": [
        10726,
        10732
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "8980": {
      "fn": "pool.getBestBid",
      "offset": [
        10726,
        10732
      ],
      "op": "MUL",
      "path": "10"
    },
    "8981": {
      "fn": "pool.getBestBid",
      "offset": [
        10726,
        10732
      ],
      "op": "ADD",
      "path": "10"
    },
    "8982": {
      "fn": "pool.getBestBid",
      "offset": [
        10726,
        10738
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "8984": {
      "fn": "pool.getBestBid",
      "offset": [
        10726,
        10738
      ],
      "op": "ADD",
      "path": "10"
    },
    "8985": {
      "fn": "pool.getBestBid",
      "offset": [
        10739,
        10740
      ],
      "op": "DUP3",
      "path": "10"
    },
    "8986": {
      "fn": "pool.getBestBid",
      "offset": [
        10726,
        10741
      ],
      "op": "DUP2",
      "path": "10"
    },
    "8987": {
      "fn": "pool.getBestBid",
      "offset": [
        10726,
        10741
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "8988": {
      "fn": "pool.getBestBid",
      "offset": [
        10726,
        10741
      ],
      "op": "DUP2",
      "path": "10"
    },
    "8989": {
      "fn": "pool.getBestBid",
      "offset": [
        10726,
        10741
      ],
      "op": "LT",
      "path": "10"
    },
    "8990": {
      "fn": "pool.getBestBid",
      "offset": [
        10726,
        10741
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2329"
    },
    "8993": {
      "fn": "pool.getBestBid",
      "offset": [
        10726,
        10741
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "8994": {
      "fn": "pool.getBestBid",
      "offset": [
        10726,
        10741
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2329"
    },
    "8997": {
      "fn": "pool.getBestBid",
      "offset": [
        10726,
        10741
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x298B"
    },
    "9000": {
      "fn": "pool.getBestBid",
      "jump": "i",
      "offset": [
        10726,
        10741
      ],
      "op": "JUMP",
      "path": "10"
    },
    "9001": {
      "fn": "pool.getBestBid",
      "offset": [
        10726,
        10741
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "9002": {
      "fn": "pool.getBestBid",
      "offset": [
        10726,
        10741
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "9003": {
      "fn": "pool.getBestBid",
      "offset": [
        10726,
        10741
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "9005": {
      "fn": "pool.getBestBid",
      "offset": [
        10726,
        10741
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "9006": {
      "fn": "pool.getBestBid",
      "offset": [
        10726,
        10741
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "9008": {
      "fn": "pool.getBestBid",
      "offset": [
        10726,
        10741
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "9010": {
      "fn": "pool.getBestBid",
      "offset": [
        10726,
        10741
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "9011": {
      "fn": "pool.getBestBid",
      "offset": [
        10726,
        10741
      ],
      "op": "ADD",
      "path": "10"
    },
    "9012": {
      "fn": "pool.getBestBid",
      "offset": [
        10726,
        10741
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "9013": {
      "fn": "pool.getBestBid",
      "offset": [
        10717,
        10742
      ],
      "op": "DUP2",
      "path": "10"
    },
    "9014": {
      "fn": "pool.getBestBid",
      "offset": [
        10717,
        10742
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "9015": {
      "fn": "pool.getBestBid",
      "offset": [
        10717,
        10742
      ],
      "op": "DUP2",
      "path": "10"
    },
    "9016": {
      "fn": "pool.getBestBid",
      "offset": [
        10717,
        10742
      ],
      "op": "LT",
      "path": "10"
    },
    "9017": {
      "fn": "pool.getBestBid",
      "offset": [
        10717,
        10742
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2344"
    },
    "9020": {
      "fn": "pool.getBestBid",
      "offset": [
        10717,
        10742
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "9021": {
      "fn": "pool.getBestBid",
      "offset": [
        10717,
        10742
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2344"
    },
    "9024": {
      "fn": "pool.getBestBid",
      "offset": [
        10717,
        10742
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x298B"
    },
    "9027": {
      "fn": "pool.getBestBid",
      "jump": "i",
      "offset": [
        10717,
        10742
      ],
      "op": "JUMP",
      "path": "10"
    },
    "9028": {
      "fn": "pool.getBestBid",
      "offset": [
        10717,
        10742
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "9029": {
      "fn": "pool.getBestBid",
      "offset": [
        10717,
        10742
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "9030": {
      "fn": "pool.getBestBid",
      "offset": [
        10717,
        10742
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "9032": {
      "fn": "pool.getBestBid",
      "offset": [
        10717,
        10742
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "9033": {
      "fn": "pool.getBestBid",
      "offset": [
        10717,
        10742
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "9035": {
      "fn": "pool.getBestBid",
      "offset": [
        10717,
        10742
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "9037": {
      "fn": "pool.getBestBid",
      "offset": [
        10717,
        10742
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "9038": {
      "fn": "pool.getBestBid",
      "offset": [
        10717,
        10742
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "9039": {
      "fn": "pool.getBestBid",
      "offset": [
        10717,
        10742
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "9041": {
      "fn": "pool.getBestBid",
      "offset": [
        10717,
        10742
      ],
      "op": "MUL",
      "path": "10"
    },
    "9042": {
      "fn": "pool.getBestBid",
      "offset": [
        10717,
        10742
      ],
      "op": "ADD",
      "path": "10"
    },
    "9043": {
      "fn": "pool.getBestBid",
      "offset": [
        10717,
        10748
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "9045": {
      "fn": "pool.getBestBid",
      "offset": [
        10717,
        10748
      ],
      "op": "ADD",
      "path": "10"
    },
    "9046": {
      "fn": "pool.getBestBid",
      "offset": [
        10717,
        10748
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "9047": {
      "fn": "pool.getBestBid",
      "offset": [
        10708,
        10714
      ],
      "op": "DUP5",
      "path": "10"
    },
    "9048": {
      "fn": "pool.getBestBid",
      "offset": [
        10708,
        10748
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2361"
    },
    "9051": {
      "fn": "pool.getBestBid",
      "offset": [
        10708,
        10748
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "9052": {
      "fn": "pool.getBestBid",
      "offset": [
        10708,
        10748
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "9053": {
      "fn": "pool.getBestBid",
      "offset": [
        10708,
        10748
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x29FE"
    },
    "9056": {
      "fn": "pool.getBestBid",
      "jump": "i",
      "offset": [
        10708,
        10748
      ],
      "op": "JUMP",
      "path": "10"
    },
    "9057": {
      "fn": "pool.getBestBid",
      "offset": [
        10708,
        10748
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "9058": {
      "fn": "pool.getBestBid",
      "offset": [
        10693,
        10749
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x236B"
    },
    "9061": {
      "fn": "pool.getBestBid",
      "offset": [
        10693,
        10749
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "9062": {
      "fn": "pool.getBestBid",
      "offset": [
        10693,
        10749
      ],
      "op": "DUP5",
      "path": "10"
    },
    "9063": {
      "fn": "pool.getBestBid",
      "offset": [
        10693,
        10749
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2973"
    },
    "9066": {
      "fn": "pool.getBestBid",
      "jump": "i",
      "offset": [
        10693,
        10749
      ],
      "op": "JUMP",
      "path": "10"
    },
    "9067": {
      "fn": "pool.getBestBid",
      "offset": [
        10693,
        10749
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "9068": {
      "fn": "pool.getBestBid",
      "offset": [
        10693,
        10749
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "9069": {
      "fn": "pool.getBestBid",
      "offset": [
        10693,
        10749
      ],
      "op": "POP",
      "path": "10"
    },
    "9070": {
      "fn": "pool.getBestBid",
      "offset": [
        10776,
        10777
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 87,
      "value": "0x0"
    },
    "9072": {
      "fn": "pool.getBestBid",
      "offset": [
        10767,
        10777
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "9073": {
      "fn": "pool.getBestBid",
      "offset": [
        10767,
        10777
      ],
      "op": "POP",
      "path": "10"
    },
    "9074": {
      "fn": "pool.getBestBid",
      "offset": [
        10477,
        10792
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "9075": {
      "fn": "pool.getBestBid",
      "offset": [
        10805,
        10808
      ],
      "op": "DUP1",
      "path": "10",
      "statement": 88
    },
    "9076": {
      "fn": "pool.getBestBid",
      "offset": [
        10805,
        10808
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x237C"
    },
    "9079": {
      "fn": "pool.getBestBid",
      "offset": [
        10805,
        10808
      ],
      "op": "DUP2",
      "path": "10"
    },
    "9080": {
      "fn": "pool.getBestBid",
      "offset": [
        10805,
        10808
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2A55"
    },
    "9083": {
      "fn": "pool.getBestBid",
      "jump": "i",
      "offset": [
        10805,
        10808
      ],
      "op": "JUMP",
      "path": "10"
    },
    "9084": {
      "fn": "pool.getBestBid",
      "offset": [
        10805,
        10808
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "9085": {
      "fn": "pool.getBestBid",
      "offset": [
        10805,
        10808
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "9086": {
      "fn": "pool.getBestBid",
      "offset": [
        10805,
        10808
      ],
      "op": "POP",
      "path": "10"
    },
    "9087": {
      "fn": "pool.getBestBid",
      "offset": [
        10805,
        10808
      ],
      "op": "POP",
      "path": "10"
    },
    "9088": {
      "fn": "pool.getBestBid",
      "offset": [
        10382,
        10819
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x21BD"
    },
    "9091": {
      "fn": "pool.getBestBid",
      "offset": [
        10382,
        10819
      ],
      "op": "JUMP",
      "path": "10"
    },
    "9092": {
      "fn": "pool.getBestBid",
      "offset": [
        10382,
        10819
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "9093": {
      "fn": "pool.getBestBid",
      "offset": [
        10842,
        10866
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 89,
      "value": "0x238E"
    },
    "9096": {
      "fn": "pool.getBestBid",
      "offset": [
        10855,
        10866
      ],
      "op": "DUP7",
      "path": "10"
    },
    "9097": {
      "fn": "pool.getBestBid",
      "offset": [
        10842,
        10852
      ],
      "op": "DUP5",
      "path": "10"
    },
    "9098": {
      "fn": "pool.getBestBid",
      "offset": [
        10842,
        10866
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2A1D"
    },
    "9101": {
      "fn": "pool.getBestBid",
      "jump": "i",
      "offset": [
        10842,
        10866
      ],
      "op": "JUMP",
      "path": "10"
    },
    "9102": {
      "fn": "pool.getBestBid",
      "offset": [
        10842,
        10866
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "9103": {
      "fn": "pool.getBestBid",
      "offset": [
        10828,
        10866
      ],
      "op": "SWAP7",
      "path": "10"
    },
    "9104": {
      "fn": "pool.getBestBid",
      "offset": [
        9828,
        10901
      ],
      "op": "SWAP6",
      "path": "10"
    },
    "9105": {
      "op": "POP"
    },
    "9106": {
      "op": "POP"
    },
    "9107": {
      "op": "POP"
    },
    "9108": {
      "op": "POP"
    },
    "9109": {
      "op": "POP"
    },
    "9110": {
      "op": "POP"
    },
    "9111": {
      "fn": "pool.getBestBid",
      "jump": "o",
      "offset": [
        9828,
        10901
      ],
      "op": "JUMP",
      "path": "10"
    },
    "9112": {
      "fn": "pool.insertBid",
      "offset": [
        13065,
        14520
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "9113": {
      "fn": "pool.insertBid",
      "offset": [
        13215,
        13227
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "9115": {
      "fn": "pool.insertBid",
      "offset": [
        13241,
        13254
      ],
      "op": "DUP1",
      "path": "10"
    },
    "9116": {
      "fn": "pool.insertBid",
      "offset": [
        13279,
        13280
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "9118": {
      "fn": "pool.insertBid",
      "offset": [
        13257,
        13259
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x6"
    },
    "9120": {
      "fn": "pool.insertBid",
      "offset": [
        13260,
        13262
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x7"
    },
    "9122": {
      "fn": "pool.insertBid",
      "offset": [
        13260,
        13262
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "9123": {
      "fn": "pool.insertBid",
      "offset": [
        13257,
        13263
      ],
      "op": "DUP2",
      "path": "10"
    },
    "9124": {
      "fn": "pool.insertBid",
      "offset": [
        13257,
        13263
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "9125": {
      "fn": "pool.insertBid",
      "offset": [
        13257,
        13263
      ],
      "op": "DUP2",
      "path": "10"
    },
    "9126": {
      "fn": "pool.insertBid",
      "offset": [
        13257,
        13263
      ],
      "op": "LT",
      "path": "10"
    },
    "9127": {
      "fn": "pool.insertBid",
      "offset": [
        13257,
        13263
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x23B2"
    },
    "9130": {
      "fn": "pool.insertBid",
      "offset": [
        13257,
        13263
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "9131": {
      "fn": "pool.insertBid",
      "offset": [
        13257,
        13263
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x23B2"
    },
    "9134": {
      "fn": "pool.insertBid",
      "offset": [
        13257,
        13263
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x298B"
    },
    "9137": {
      "fn": "pool.insertBid",
      "jump": "i",
      "offset": [
        13257,
        13263
      ],
      "op": "JUMP",
      "path": "10"
    },
    "9138": {
      "fn": "pool.insertBid",
      "offset": [
        13257,
        13263
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "9139": {
      "fn": "pool.insertBid",
      "offset": [
        13257,
        13263
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "9140": {
      "fn": "pool.insertBid",
      "offset": [
        13257,
        13263
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "9142": {
      "fn": "pool.insertBid",
      "offset": [
        13257,
        13263
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "9143": {
      "fn": "pool.insertBid",
      "offset": [
        13257,
        13263
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "9145": {
      "fn": "pool.insertBid",
      "offset": [
        13257,
        13263
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "9147": {
      "fn": "pool.insertBid",
      "offset": [
        13257,
        13263
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "9148": {
      "fn": "pool.insertBid",
      "offset": [
        13257,
        13263
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "9149": {
      "fn": "pool.insertBid",
      "offset": [
        13257,
        13263
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "9151": {
      "fn": "pool.insertBid",
      "offset": [
        13257,
        13263
      ],
      "op": "MUL",
      "path": "10"
    },
    "9152": {
      "fn": "pool.insertBid",
      "offset": [
        13257,
        13263
      ],
      "op": "ADD",
      "path": "10"
    },
    "9153": {
      "fn": "pool.insertBid",
      "offset": [
        13257,
        13269
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "9155": {
      "fn": "pool.insertBid",
      "offset": [
        13257,
        13269
      ],
      "op": "ADD",
      "path": "10"
    },
    "9156": {
      "fn": "pool.insertBid",
      "offset": [
        13257,
        13276
      ],
      "op": "DUP1",
      "path": "10"
    },
    "9157": {
      "fn": "pool.insertBid",
      "offset": [
        13257,
        13276
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "9158": {
      "fn": "pool.insertBid",
      "offset": [
        13257,
        13276
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "9159": {
      "fn": "pool.insertBid",
      "offset": [
        13257,
        13276
      ],
      "op": "POP",
      "path": "10"
    },
    "9160": {
      "fn": "pool.insertBid",
      "offset": [
        13257,
        13280
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x23D1"
    },
    "9163": {
      "fn": "pool.insertBid",
      "offset": [
        13257,
        13280
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "9164": {
      "fn": "pool.insertBid",
      "offset": [
        13257,
        13280
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "9165": {
      "fn": "pool.insertBid",
      "offset": [
        13257,
        13280
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x29A1"
    },
    "9168": {
      "fn": "pool.insertBid",
      "jump": "i",
      "offset": [
        13257,
        13280
      ],
      "op": "JUMP",
      "path": "10"
    },
    "9169": {
      "fn": "pool.insertBid",
      "offset": [
        13257,
        13280
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "9170": {
      "fn": "pool.insertBid",
      "offset": [
        13241,
        13280
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "9171": {
      "fn": "pool.insertBid",
      "offset": [
        13241,
        13280
      ],
      "op": "POP",
      "path": "10"
    },
    "9172": {
      "fn": "pool.insertBid",
      "offset": [
        13290,
        13301
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "9174": {
      "fn": "pool.insertBid",
      "offset": [
        13342,
        13570
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "9175": {
      "fn": "pool.insertBid",
      "offset": [
        13356,
        13361
      ],
      "op": "DUP2",
      "path": "10"
    },
    "9176": {
      "fn": "pool.insertBid",
      "offset": [
        13349,
        13353
      ],
      "op": "DUP4",
      "path": "10"
    },
    "9177": {
      "fn": "pool.insertBid",
      "offset": [
        13349,
        13361
      ],
      "op": "LT",
      "path": "10"
    },
    "9178": {
      "fn": "pool.insertBid",
      "offset": [
        13342,
        13570
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "9179": {
      "fn": "pool.insertBid",
      "offset": [
        13342,
        13570
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2490"
    },
    "9182": {
      "fn": "pool.insertBid",
      "offset": [
        13342,
        13570
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "9183": {
      "fn": "pool.insertBid",
      "offset": [
        13400,
        13401
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 90,
      "value": "0x2"
    },
    "9185": {
      "fn": "pool.insertBid",
      "offset": [
        13384,
        13396
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x23EA"
    },
    "9188": {
      "fn": "pool.insertBid",
      "offset": [
        13391,
        13396
      ],
      "op": "DUP4",
      "path": "10"
    },
    "9189": {
      "fn": "pool.insertBid",
      "offset": [
        13384,
        13388
      ],
      "op": "DUP6",
      "path": "10"
    },
    "9190": {
      "fn": "pool.insertBid",
      "offset": [
        13384,
        13396
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2973"
    },
    "9193": {
      "fn": "pool.insertBid",
      "jump": "i",
      "offset": [
        13384,
        13396
      ],
      "op": "JUMP",
      "path": "10"
    },
    "9194": {
      "fn": "pool.insertBid",
      "offset": [
        13384,
        13396
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "9195": {
      "fn": "pool.insertBid",
      "offset": [
        13383,
        13401
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x23F4"
    },
    "9198": {
      "fn": "pool.insertBid",
      "offset": [
        13383,
        13401
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "9199": {
      "fn": "pool.insertBid",
      "offset": [
        13383,
        13401
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "9200": {
      "fn": "pool.insertBid",
      "offset": [
        13383,
        13401
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2A1D"
    },
    "9203": {
      "fn": "pool.insertBid",
      "jump": "i",
      "offset": [
        13383,
        13401
      ],
      "op": "JUMP",
      "path": "10"
    },
    "9204": {
      "fn": "pool.insertBid",
      "offset": [
        13383,
        13401
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "9205": {
      "fn": "pool.insertBid",
      "offset": [
        13377,
        13401
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "9206": {
      "fn": "pool.insertBid",
      "offset": [
        13377,
        13401
      ],
      "op": "POP",
      "path": "10"
    },
    "9207": {
      "fn": "pool.insertBid",
      "offset": [
        13428,
        13432
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "9209": {
      "fn": "pool.insertBid",
      "offset": [
        13428,
        13436
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "9211": {
      "fn": "pool.insertBid",
      "offset": [
        13433,
        13435
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x7"
    },
    "9213": {
      "fn": "pool.insertBid",
      "offset": [
        13433,
        13435
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "9214": {
      "fn": "pool.insertBid",
      "offset": [
        13428,
        13436
      ],
      "op": "DUP2",
      "path": "10"
    },
    "9215": {
      "fn": "pool.insertBid",
      "offset": [
        13428,
        13436
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "9216": {
      "fn": "pool.insertBid",
      "offset": [
        13428,
        13436
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "9218": {
      "fn": "pool.insertBid",
      "offset": [
        13428,
        13436
      ],
      "op": "ADD",
      "path": "10"
    },
    "9219": {
      "fn": "pool.insertBid",
      "offset": [
        13428,
        13436
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "9220": {
      "fn": "pool.insertBid",
      "offset": [
        13428,
        13436
      ],
      "op": "DUP2",
      "path": "10"
    },
    "9221": {
      "fn": "pool.insertBid",
      "offset": [
        13428,
        13436
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "9222": {
      "fn": "pool.insertBid",
      "offset": [
        13428,
        13436
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "9224": {
      "fn": "pool.insertBid",
      "offset": [
        13428,
        13436
      ],
      "op": "ADD",
      "path": "10"
    },
    "9225": {
      "fn": "pool.insertBid",
      "offset": [
        13428,
        13436
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "9227": {
      "fn": "pool.insertBid",
      "offset": [
        13428,
        13436
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "9228": {
      "fn": "pool.insertBid",
      "offset": [
        13437,
        13439
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x6"
    },
    "9230": {
      "fn": "pool.insertBid",
      "offset": [
        13440,
        13442
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x7"
    },
    "9232": {
      "fn": "pool.insertBid",
      "offset": [
        13440,
        13442
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "9233": {
      "fn": "pool.insertBid",
      "offset": [
        13437,
        13443
      ],
      "op": "DUP2",
      "path": "10"
    },
    "9234": {
      "fn": "pool.insertBid",
      "offset": [
        13437,
        13443
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "9235": {
      "fn": "pool.insertBid",
      "offset": [
        13437,
        13443
      ],
      "op": "DUP2",
      "path": "10"
    },
    "9236": {
      "fn": "pool.insertBid",
      "offset": [
        13437,
        13443
      ],
      "op": "LT",
      "path": "10"
    },
    "9237": {
      "fn": "pool.insertBid",
      "offset": [
        13437,
        13443
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2420"
    },
    "9240": {
      "fn": "pool.insertBid",
      "offset": [
        13437,
        13443
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "9241": {
      "fn": "pool.insertBid",
      "offset": [
        13437,
        13443
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2420"
    },
    "9244": {
      "fn": "pool.insertBid",
      "offset": [
        13437,
        13443
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x298B"
    },
    "9247": {
      "fn": "pool.insertBid",
      "jump": "i",
      "offset": [
        13437,
        13443
      ],
      "op": "JUMP",
      "path": "10"
    },
    "9248": {
      "fn": "pool.insertBid",
      "offset": [
        13437,
        13443
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "9249": {
      "fn": "pool.insertBid",
      "offset": [
        13437,
        13443
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "9250": {
      "fn": "pool.insertBid",
      "offset": [
        13437,
        13443
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "9252": {
      "fn": "pool.insertBid",
      "offset": [
        13437,
        13443
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "9253": {
      "fn": "pool.insertBid",
      "offset": [
        13437,
        13443
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "9255": {
      "fn": "pool.insertBid",
      "offset": [
        13437,
        13443
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "9257": {
      "fn": "pool.insertBid",
      "offset": [
        13437,
        13443
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "9258": {
      "fn": "pool.insertBid",
      "offset": [
        13437,
        13443
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "9259": {
      "fn": "pool.insertBid",
      "offset": [
        13437,
        13443
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "9261": {
      "fn": "pool.insertBid",
      "offset": [
        13437,
        13443
      ],
      "op": "MUL",
      "path": "10"
    },
    "9262": {
      "fn": "pool.insertBid",
      "offset": [
        13437,
        13443
      ],
      "op": "ADD",
      "path": "10"
    },
    "9263": {
      "fn": "pool.insertBid",
      "offset": [
        13437,
        13449
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "9265": {
      "fn": "pool.insertBid",
      "offset": [
        13437,
        13449
      ],
      "op": "ADD",
      "path": "10"
    },
    "9266": {
      "fn": "pool.insertBid",
      "offset": [
        13450,
        13453
      ],
      "op": "DUP3",
      "path": "10"
    },
    "9267": {
      "fn": "pool.insertBid",
      "offset": [
        13437,
        13454
      ],
      "op": "DUP2",
      "path": "10"
    },
    "9268": {
      "fn": "pool.insertBid",
      "offset": [
        13437,
        13454
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "9269": {
      "fn": "pool.insertBid",
      "offset": [
        13437,
        13454
      ],
      "op": "DUP2",
      "path": "10"
    },
    "9270": {
      "fn": "pool.insertBid",
      "offset": [
        13437,
        13454
      ],
      "op": "LT",
      "path": "10"
    },
    "9271": {
      "fn": "pool.insertBid",
      "offset": [
        13437,
        13454
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2442"
    },
    "9274": {
      "fn": "pool.insertBid",
      "offset": [
        13437,
        13454
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "9275": {
      "fn": "pool.insertBid",
      "offset": [
        13437,
        13454
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2442"
    },
    "9278": {
      "fn": "pool.insertBid",
      "offset": [
        13437,
        13454
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x298B"
    },
    "9281": {
      "fn": "pool.insertBid",
      "jump": "i",
      "offset": [
        13437,
        13454
      ],
      "op": "JUMP",
      "path": "10"
    },
    "9282": {
      "fn": "pool.insertBid",
      "offset": [
        13437,
        13454
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "9283": {
      "fn": "pool.insertBid",
      "offset": [
        13437,
        13454
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "9284": {
      "fn": "pool.insertBid",
      "offset": [
        13437,
        13454
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "9286": {
      "fn": "pool.insertBid",
      "offset": [
        13437,
        13454
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "9287": {
      "fn": "pool.insertBid",
      "offset": [
        13437,
        13454
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "9289": {
      "fn": "pool.insertBid",
      "offset": [
        13437,
        13454
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "9291": {
      "fn": "pool.insertBid",
      "offset": [
        13437,
        13454
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "9292": {
      "fn": "pool.insertBid",
      "offset": [
        13437,
        13454
      ],
      "op": "ADD",
      "path": "10"
    },
    "9293": {
      "fn": "pool.insertBid",
      "offset": [
        13437,
        13454
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "9294": {
      "fn": "pool.insertBid",
      "offset": [
        13428,
        13455
      ],
      "op": "DUP2",
      "path": "10"
    },
    "9295": {
      "fn": "pool.insertBid",
      "offset": [
        13428,
        13455
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "9296": {
      "fn": "pool.insertBid",
      "offset": [
        13428,
        13455
      ],
      "op": "DUP2",
      "path": "10"
    },
    "9297": {
      "fn": "pool.insertBid",
      "offset": [
        13428,
        13455
      ],
      "op": "LT",
      "path": "10"
    },
    "9298": {
      "fn": "pool.insertBid",
      "offset": [
        13428,
        13455
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x245D"
    },
    "9301": {
      "fn": "pool.insertBid",
      "offset": [
        13428,
        13455
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "9302": {
      "fn": "pool.insertBid",
      "offset": [
        13428,
        13455
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x245D"
    },
    "9305": {
      "fn": "pool.insertBid",
      "offset": [
        13428,
        13455
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x298B"
    },
    "9308": {
      "fn": "pool.insertBid",
      "jump": "i",
      "offset": [
        13428,
        13455
      ],
      "op": "JUMP",
      "path": "10"
    },
    "9309": {
      "fn": "pool.insertBid",
      "offset": [
        13428,
        13455
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "9310": {
      "fn": "pool.insertBid",
      "offset": [
        13428,
        13455
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "9311": {
      "fn": "pool.insertBid",
      "offset": [
        13428,
        13455
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "9313": {
      "fn": "pool.insertBid",
      "offset": [
        13428,
        13455
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "9314": {
      "fn": "pool.insertBid",
      "offset": [
        13428,
        13455
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "9316": {
      "fn": "pool.insertBid",
      "offset": [
        13428,
        13455
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "9318": {
      "fn": "pool.insertBid",
      "offset": [
        13428,
        13455
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "9319": {
      "fn": "pool.insertBid",
      "offset": [
        13428,
        13455
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "9320": {
      "fn": "pool.insertBid",
      "offset": [
        13428,
        13455
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "9322": {
      "fn": "pool.insertBid",
      "offset": [
        13428,
        13455
      ],
      "op": "MUL",
      "path": "10"
    },
    "9323": {
      "fn": "pool.insertBid",
      "offset": [
        13428,
        13455
      ],
      "op": "ADD",
      "path": "10"
    },
    "9324": {
      "fn": "pool.insertBid",
      "offset": [
        13428,
        13461
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "9326": {
      "fn": "pool.insertBid",
      "offset": [
        13428,
        13461
      ],
      "op": "ADD",
      "path": "10"
    },
    "9327": {
      "fn": "pool.insertBid",
      "offset": [
        13428,
        13461
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "9328": {
      "fn": "pool.insertBid",
      "offset": [
        13419,
        13425
      ],
      "op": "DUP5",
      "path": "10"
    },
    "9329": {
      "branch": 129,
      "fn": "pool.insertBid",
      "offset": [
        13419,
        13461
      ],
      "op": "GT",
      "path": "10"
    },
    "9330": {
      "fn": "pool.insertBid",
      "offset": [
        13415,
        13560
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "9331": {
      "fn": "pool.insertBid",
      "offset": [
        13415,
        13560
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2488"
    },
    "9334": {
      "branch": 129,
      "fn": "pool.insertBid",
      "offset": [
        13415,
        13560
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "9335": {
      "fn": "pool.insertBid",
      "offset": [
        13488,
        13495
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 91,
      "value": "0x2481"
    },
    "9338": {
      "fn": "pool.insertBid",
      "offset": [
        13488,
        13491
      ],
      "op": "DUP2",
      "path": "10"
    },
    "9339": {
      "fn": "pool.insertBid",
      "offset": [
        13494,
        13495
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "9341": {
      "fn": "pool.insertBid",
      "offset": [
        13488,
        13495
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2973"
    },
    "9344": {
      "fn": "pool.insertBid",
      "jump": "i",
      "offset": [
        13488,
        13495
      ],
      "op": "JUMP",
      "path": "10"
    },
    "9345": {
      "fn": "pool.insertBid",
      "offset": [
        13488,
        13495
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "9346": {
      "fn": "pool.insertBid",
      "offset": [
        13481,
        13495
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "9347": {
      "fn": "pool.insertBid",
      "offset": [
        13481,
        13495
      ],
      "op": "POP",
      "path": "10"
    },
    "9348": {
      "fn": "pool.insertBid",
      "offset": [
        13342,
        13570
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x23D6"
    },
    "9351": {
      "fn": "pool.insertBid",
      "offset": [
        13342,
        13570
      ],
      "op": "JUMP",
      "path": "10"
    },
    "9352": {
      "fn": "pool.insertBid",
      "offset": [
        13415,
        13560
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "9353": {
      "fn": "pool.insertBid",
      "offset": [
        13542,
        13545
      ],
      "op": "DUP1",
      "path": "10",
      "statement": 92
    },
    "9354": {
      "fn": "pool.insertBid",
      "offset": [
        13534,
        13545
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "9355": {
      "fn": "pool.insertBid",
      "offset": [
        13534,
        13545
      ],
      "op": "POP",
      "path": "10"
    },
    "9356": {
      "fn": "pool.insertBid",
      "offset": [
        13342,
        13570
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x23D6"
    },
    "9359": {
      "fn": "pool.insertBid",
      "offset": [
        13342,
        13570
      ],
      "op": "JUMP",
      "path": "10"
    },
    "9360": {
      "fn": "pool.insertBid",
      "offset": [
        13342,
        13570
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "9361": {
      "fn": "pool.insertBid",
      "offset": [
        13745,
        13750
      ],
      "op": "DUP2",
      "path": "10"
    },
    "9362": {
      "fn": "pool.insertBid",
      "offset": [
        13737,
        13741
      ],
      "op": "DUP4",
      "path": "10"
    },
    "9363": {
      "branch": 130,
      "fn": "pool.insertBid",
      "offset": [
        13737,
        13750
      ],
      "op": "EQ",
      "path": "10"
    },
    "9364": {
      "fn": "pool.insertBid",
      "offset": [
        13733,
        13921
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "9365": {
      "fn": "pool.insertBid",
      "offset": [
        13733,
        13921
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x252A"
    },
    "9368": {
      "branch": 130,
      "fn": "pool.insertBid",
      "offset": [
        13733,
        13921
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "9369": {
      "fn": "pool.insertBid",
      "offset": [
        13784,
        13786
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x7"
    },
    "9371": {
      "fn": "pool.insertBid",
      "offset": [
        13784,
        13786
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "9372": {
      "fn": "pool.insertBid",
      "offset": [
        13779,
        13787
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "9374": {
      "fn": "pool.insertBid",
      "offset": [
        13779,
        13787
      ],
      "op": "DUP2",
      "path": "10"
    },
    "9375": {
      "fn": "pool.insertBid",
      "offset": [
        13779,
        13787
      ],
      "op": "DUP2",
      "path": "10"
    },
    "9376": {
      "fn": "pool.insertBid",
      "offset": [
        13779,
        13787
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "9377": {
      "fn": "pool.insertBid",
      "offset": [
        13779,
        13783
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "9379": {
      "fn": "pool.insertBid",
      "offset": [
        13779,
        13787
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "9381": {
      "fn": "pool.insertBid",
      "offset": [
        13779,
        13787
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "9382": {
      "fn": "pool.insertBid",
      "offset": [
        13779,
        13787
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "9384": {
      "fn": "pool.insertBid",
      "offset": [
        13779,
        13787
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "9385": {
      "fn": "pool.insertBid",
      "offset": [
        13779,
        13787
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "9386": {
      "fn": "pool.insertBid",
      "offset": [
        13788,
        13790
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x6"
    },
    "9388": {
      "fn": "pool.insertBid",
      "offset": [
        13788,
        13794
      ],
      "op": "DUP1",
      "path": "10"
    },
    "9389": {
      "fn": "pool.insertBid",
      "offset": [
        13788,
        13794
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "9390": {
      "fn": "pool.insertBid",
      "offset": [
        13779,
        13787
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "9391": {
      "fn": "pool.insertBid",
      "offset": [
        13779,
        13787
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "9392": {
      "fn": "pool.insertBid",
      "offset": [
        13788,
        13790
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "9393": {
      "fn": "pool.insertBid",
      "offset": [
        13788,
        13790
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "9394": {
      "fn": "pool.insertBid",
      "offset": [
        13788,
        13794
      ],
      "op": "DUP2",
      "path": "10"
    },
    "9395": {
      "fn": "pool.insertBid",
      "offset": [
        13788,
        13794
      ],
      "op": "LT",
      "path": "10"
    },
    "9396": {
      "fn": "pool.insertBid",
      "offset": [
        13788,
        13794
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x24BF"
    },
    "9399": {
      "fn": "pool.insertBid",
      "offset": [
        13788,
        13794
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "9400": {
      "fn": "pool.insertBid",
      "offset": [
        13788,
        13794
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x24BF"
    },
    "9403": {
      "fn": "pool.insertBid",
      "offset": [
        13788,
        13794
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x298B"
    },
    "9406": {
      "fn": "pool.insertBid",
      "jump": "i",
      "offset": [
        13788,
        13794
      ],
      "op": "JUMP",
      "path": "10"
    },
    "9407": {
      "fn": "pool.insertBid",
      "offset": [
        13788,
        13794
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "9408": {
      "fn": "pool.insertBid",
      "offset": [
        13788,
        13794
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "9409": {
      "fn": "pool.insertBid",
      "offset": [
        13788,
        13794
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "9411": {
      "fn": "pool.insertBid",
      "offset": [
        13788,
        13794
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "9412": {
      "fn": "pool.insertBid",
      "offset": [
        13788,
        13794
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "9414": {
      "fn": "pool.insertBid",
      "offset": [
        13788,
        13794
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "9416": {
      "fn": "pool.insertBid",
      "offset": [
        13788,
        13794
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "9417": {
      "fn": "pool.insertBid",
      "offset": [
        13788,
        13794
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "9418": {
      "fn": "pool.insertBid",
      "offset": [
        13788,
        13794
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "9420": {
      "fn": "pool.insertBid",
      "offset": [
        13788,
        13794
      ],
      "op": "MUL",
      "path": "10"
    },
    "9421": {
      "fn": "pool.insertBid",
      "offset": [
        13788,
        13794
      ],
      "op": "ADD",
      "path": "10"
    },
    "9422": {
      "fn": "pool.insertBid",
      "offset": [
        13788,
        13800
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "9424": {
      "fn": "pool.insertBid",
      "offset": [
        13788,
        13800
      ],
      "op": "ADD",
      "path": "10"
    },
    "9425": {
      "fn": "pool.insertBid",
      "offset": [
        13801,
        13805
      ],
      "op": "DUP5",
      "path": "10"
    },
    "9426": {
      "fn": "pool.insertBid",
      "offset": [
        13788,
        13806
      ],
      "op": "DUP2",
      "path": "10"
    },
    "9427": {
      "fn": "pool.insertBid",
      "offset": [
        13788,
        13806
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "9428": {
      "fn": "pool.insertBid",
      "offset": [
        13788,
        13806
      ],
      "op": "DUP2",
      "path": "10"
    },
    "9429": {
      "fn": "pool.insertBid",
      "offset": [
        13788,
        13806
      ],
      "op": "LT",
      "path": "10"
    },
    "9430": {
      "fn": "pool.insertBid",
      "offset": [
        13788,
        13806
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x24E1"
    },
    "9433": {
      "fn": "pool.insertBid",
      "offset": [
        13788,
        13806
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "9434": {
      "fn": "pool.insertBid",
      "offset": [
        13788,
        13806
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x24E1"
    },
    "9437": {
      "fn": "pool.insertBid",
      "offset": [
        13788,
        13806
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x298B"
    },
    "9440": {
      "fn": "pool.insertBid",
      "jump": "i",
      "offset": [
        13788,
        13806
      ],
      "op": "JUMP",
      "path": "10"
    },
    "9441": {
      "fn": "pool.insertBid",
      "offset": [
        13788,
        13806
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "9442": {
      "fn": "pool.insertBid",
      "offset": [
        13788,
        13806
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "9443": {
      "fn": "pool.insertBid",
      "offset": [
        13788,
        13806
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "9445": {
      "fn": "pool.insertBid",
      "offset": [
        13788,
        13806
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "9446": {
      "fn": "pool.insertBid",
      "offset": [
        13788,
        13806
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "9448": {
      "fn": "pool.insertBid",
      "offset": [
        13788,
        13806
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "9450": {
      "fn": "pool.insertBid",
      "offset": [
        13788,
        13806
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "9451": {
      "fn": "pool.insertBid",
      "offset": [
        13788,
        13806
      ],
      "op": "ADD",
      "path": "10"
    },
    "9452": {
      "fn": "pool.insertBid",
      "offset": [
        13788,
        13806
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "9453": {
      "fn": "pool.insertBid",
      "offset": [
        13779,
        13807
      ],
      "op": "DUP2",
      "path": "10"
    },
    "9454": {
      "fn": "pool.insertBid",
      "offset": [
        13779,
        13807
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "9455": {
      "fn": "pool.insertBid",
      "offset": [
        13779,
        13807
      ],
      "op": "DUP2",
      "path": "10"
    },
    "9456": {
      "fn": "pool.insertBid",
      "offset": [
        13779,
        13807
      ],
      "op": "LT",
      "path": "10"
    },
    "9457": {
      "fn": "pool.insertBid",
      "offset": [
        13779,
        13807
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x24FC"
    },
    "9460": {
      "fn": "pool.insertBid",
      "offset": [
        13779,
        13807
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "9461": {
      "fn": "pool.insertBid",
      "offset": [
        13779,
        13807
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x24FC"
    },
    "9464": {
      "fn": "pool.insertBid",
      "offset": [
        13779,
        13807
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x298B"
    },
    "9467": {
      "fn": "pool.insertBid",
      "jump": "i",
      "offset": [
        13779,
        13807
      ],
      "op": "JUMP",
      "path": "10"
    },
    "9468": {
      "fn": "pool.insertBid",
      "offset": [
        13779,
        13807
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "9469": {
      "fn": "pool.insertBid",
      "offset": [
        13779,
        13807
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "9470": {
      "fn": "pool.insertBid",
      "offset": [
        13779,
        13807
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "9472": {
      "fn": "pool.insertBid",
      "offset": [
        13779,
        13807
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "9473": {
      "fn": "pool.insertBid",
      "offset": [
        13779,
        13807
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "9475": {
      "fn": "pool.insertBid",
      "offset": [
        13779,
        13807
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "9477": {
      "fn": "pool.insertBid",
      "offset": [
        13779,
        13807
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "9478": {
      "fn": "pool.insertBid",
      "offset": [
        13779,
        13807
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "9479": {
      "fn": "pool.insertBid",
      "offset": [
        13779,
        13807
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "9481": {
      "fn": "pool.insertBid",
      "offset": [
        13779,
        13807
      ],
      "op": "MUL",
      "path": "10"
    },
    "9482": {
      "fn": "pool.insertBid",
      "offset": [
        13779,
        13807
      ],
      "op": "ADD",
      "path": "10"
    },
    "9483": {
      "fn": "pool.insertBid",
      "offset": [
        13779,
        13813
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "9485": {
      "fn": "pool.insertBid",
      "offset": [
        13779,
        13813
      ],
      "op": "ADD",
      "path": "10"
    },
    "9486": {
      "fn": "pool.insertBid",
      "offset": [
        13779,
        13813
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "9487": {
      "fn": "pool.insertBid",
      "offset": [
        13770,
        13776
      ],
      "op": "DUP5",
      "path": "10"
    },
    "9488": {
      "branch": 131,
      "fn": "pool.insertBid",
      "offset": [
        13770,
        13813
      ],
      "op": "GT",
      "path": "10"
    },
    "9489": {
      "fn": "pool.insertBid",
      "offset": [
        13766,
        13911
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "9490": {
      "fn": "pool.insertBid",
      "offset": [
        13766,
        13911
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2527"
    },
    "9493": {
      "branch": 131,
      "fn": "pool.insertBid",
      "offset": [
        13766,
        13911
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "9494": {
      "fn": "pool.insertBid",
      "offset": [
        13839,
        13847
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 93,
      "value": "0x2520"
    },
    "9497": {
      "fn": "pool.insertBid",
      "offset": [
        13839,
        13843
      ],
      "op": "DUP4",
      "path": "10"
    },
    "9498": {
      "fn": "pool.insertBid",
      "offset": [
        13846,
        13847
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "9500": {
      "fn": "pool.insertBid",
      "offset": [
        13839,
        13847
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2973"
    },
    "9503": {
      "fn": "pool.insertBid",
      "jump": "i",
      "offset": [
        13839,
        13847
      ],
      "op": "JUMP",
      "path": "10"
    },
    "9504": {
      "fn": "pool.insertBid",
      "offset": [
        13839,
        13847
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "9505": {
      "fn": "pool.insertBid",
      "offset": [
        13833,
        13847
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "9506": {
      "fn": "pool.insertBid",
      "offset": [
        13833,
        13847
      ],
      "op": "POP",
      "path": "10"
    },
    "9507": {
      "fn": "pool.insertBid",
      "offset": [
        13766,
        13911
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x252A"
    },
    "9510": {
      "fn": "pool.insertBid",
      "offset": [
        13766,
        13911
      ],
      "op": "JUMP",
      "path": "10"
    },
    "9511": {
      "fn": "pool.insertBid",
      "offset": [
        13766,
        13911
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "9512": {
      "op": "POP"
    },
    "9513": {
      "fn": "pool.insertBid",
      "offset": [
        13892,
        13896
      ],
      "op": "DUP2",
      "path": "10",
      "statement": 94
    },
    "9514": {
      "fn": "pool.insertBid",
      "offset": [
        13766,
        13911
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "9515": {
      "fn": "pool.insertBid",
      "offset": [
        14013,
        14015
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 95,
      "value": "0x6"
    },
    "9517": {
      "fn": "pool.insertBid",
      "offset": [
        14016,
        14018
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x7"
    },
    "9519": {
      "fn": "pool.insertBid",
      "offset": [
        14016,
        14018
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "9520": {
      "fn": "pool.insertBid",
      "offset": [
        14013,
        14019
      ],
      "op": "DUP2",
      "path": "10"
    },
    "9521": {
      "fn": "pool.insertBid",
      "offset": [
        14013,
        14019
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "9522": {
      "fn": "pool.insertBid",
      "offset": [
        14013,
        14019
      ],
      "op": "DUP2",
      "path": "10"
    },
    "9523": {
      "fn": "pool.insertBid",
      "offset": [
        14013,
        14019
      ],
      "op": "LT",
      "path": "10"
    },
    "9524": {
      "fn": "pool.insertBid",
      "offset": [
        14013,
        14019
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x253F"
    },
    "9527": {
      "fn": "pool.insertBid",
      "offset": [
        14013,
        14019
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "9528": {
      "fn": "pool.insertBid",
      "offset": [
        14013,
        14019
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x253F"
    },
    "9531": {
      "fn": "pool.insertBid",
      "offset": [
        14013,
        14019
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x298B"
    },
    "9534": {
      "fn": "pool.insertBid",
      "jump": "i",
      "offset": [
        14013,
        14019
      ],
      "op": "JUMP",
      "path": "10"
    },
    "9535": {
      "fn": "pool.insertBid",
      "offset": [
        14013,
        14019
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "9536": {
      "fn": "pool.insertBid",
      "offset": [
        14013,
        14019
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "9537": {
      "fn": "pool.insertBid",
      "offset": [
        14013,
        14019
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "9539": {
      "fn": "pool.insertBid",
      "offset": [
        14013,
        14019
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "9540": {
      "fn": "pool.insertBid",
      "offset": [
        14013,
        14019
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "9542": {
      "fn": "pool.insertBid",
      "offset": [
        14013,
        14019
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "9544": {
      "fn": "pool.insertBid",
      "offset": [
        14013,
        14019
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "9545": {
      "fn": "pool.insertBid",
      "offset": [
        14013,
        14019
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "9546": {
      "fn": "pool.insertBid",
      "offset": [
        14013,
        14019
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "9548": {
      "fn": "pool.insertBid",
      "offset": [
        14013,
        14019
      ],
      "op": "MUL",
      "path": "10"
    },
    "9549": {
      "fn": "pool.insertBid",
      "offset": [
        14013,
        14019
      ],
      "op": "ADD",
      "path": "10"
    },
    "9550": {
      "fn": "pool.insertBid",
      "offset": [
        14013,
        14025
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "9552": {
      "fn": "pool.insertBid",
      "offset": [
        14013,
        14025
      ],
      "op": "ADD",
      "path": "10"
    },
    "9553": {
      "fn": "pool.insertBid",
      "offset": [
        14049,
        14050
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "9555": {
      "fn": "pool.insertBid",
      "offset": [
        14031,
        14035
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "9557": {
      "fn": "pool.insertBid",
      "offset": [
        14031,
        14039
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "9559": {
      "fn": "pool.insertBid",
      "offset": [
        14036,
        14038
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x7"
    },
    "9561": {
      "fn": "pool.insertBid",
      "offset": [
        14036,
        14038
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "9562": {
      "fn": "pool.insertBid",
      "offset": [
        14031,
        14039
      ],
      "op": "DUP2",
      "path": "10"
    },
    "9563": {
      "fn": "pool.insertBid",
      "offset": [
        14031,
        14039
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "9564": {
      "fn": "pool.insertBid",
      "offset": [
        14031,
        14039
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "9566": {
      "fn": "pool.insertBid",
      "offset": [
        14031,
        14039
      ],
      "op": "ADD",
      "path": "10"
    },
    "9567": {
      "fn": "pool.insertBid",
      "offset": [
        14031,
        14039
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "9568": {
      "fn": "pool.insertBid",
      "offset": [
        14031,
        14039
      ],
      "op": "DUP2",
      "path": "10"
    },
    "9569": {
      "fn": "pool.insertBid",
      "offset": [
        14031,
        14039
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "9570": {
      "fn": "pool.insertBid",
      "offset": [
        14031,
        14039
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "9572": {
      "fn": "pool.insertBid",
      "offset": [
        14031,
        14039
      ],
      "op": "ADD",
      "path": "10"
    },
    "9573": {
      "fn": "pool.insertBid",
      "offset": [
        14031,
        14039
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "9575": {
      "fn": "pool.insertBid",
      "offset": [
        14031,
        14039
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "9576": {
      "fn": "pool.insertBid",
      "offset": [
        14031,
        14046
      ],
      "op": "DUP1",
      "path": "10"
    },
    "9577": {
      "fn": "pool.insertBid",
      "offset": [
        14031,
        14046
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "9578": {
      "fn": "pool.insertBid",
      "offset": [
        14031,
        14046
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "9579": {
      "fn": "pool.insertBid",
      "offset": [
        14031,
        14046
      ],
      "op": "POP",
      "path": "10"
    },
    "9580": {
      "fn": "pool.insertBid",
      "offset": [
        14031,
        14050
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2575"
    },
    "9583": {
      "fn": "pool.insertBid",
      "offset": [
        14031,
        14050
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "9584": {
      "fn": "pool.insertBid",
      "offset": [
        14031,
        14050
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "9585": {
      "fn": "pool.insertBid",
      "offset": [
        14031,
        14050
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x29A1"
    },
    "9588": {
      "fn": "pool.insertBid",
      "jump": "i",
      "offset": [
        14031,
        14050
      ],
      "op": "JUMP",
      "path": "10"
    },
    "9589": {
      "fn": "pool.insertBid",
      "offset": [
        14031,
        14050
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "9590": {
      "fn": "pool.insertBid",
      "offset": [
        14013,
        14051
      ],
      "op": "DUP2",
      "path": "10"
    },
    "9591": {
      "fn": "pool.insertBid",
      "offset": [
        14013,
        14051
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "9592": {
      "fn": "pool.insertBid",
      "offset": [
        14013,
        14051
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "9594": {
      "fn": "pool.insertBid",
      "offset": [
        14013,
        14051
      ],
      "op": "DUP2",
      "path": "10"
    },
    "9595": {
      "fn": "pool.insertBid",
      "offset": [
        14013,
        14051
      ],
      "op": "DUP2",
      "path": "10"
    },
    "9596": {
      "fn": "pool.insertBid",
      "offset": [
        14013,
        14051
      ],
      "op": "ADD",
      "path": "10"
    },
    "9597": {
      "fn": "pool.insertBid",
      "offset": [
        14013,
        14051
      ],
      "op": "DUP5",
      "path": "10"
    },
    "9598": {
      "fn": "pool.insertBid",
      "offset": [
        14013,
        14051
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "9599": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9601": {
      "fn": "pool.insertBid",
      "offset": [
        14013,
        14051
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "9602": {
      "fn": "pool.insertBid",
      "offset": [
        14013,
        14051
      ],
      "op": "DUP5",
      "path": "10"
    },
    "9603": {
      "fn": "pool.insertBid",
      "offset": [
        14013,
        14051
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "9604": {
      "fn": "pool.insertBid",
      "offset": [
        14013,
        14051
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "9606": {
      "fn": "pool.insertBid",
      "offset": [
        14013,
        14051
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "9607": {
      "fn": "pool.insertBid",
      "offset": [
        14013,
        14051
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "9608": {
      "fn": "pool.insertBid",
      "offset": [
        14013,
        14051
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "9609": {
      "fn": "pool.insertBid",
      "offset": [
        14013,
        14051
      ],
      "op": "ADD",
      "path": "10"
    },
    "9610": {
      "fn": "pool.insertBid",
      "offset": [
        14013,
        14051
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "9611": {
      "fn": "pool.insertBid",
      "offset": [
        14074,
        14076
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x7"
    },
    "9613": {
      "fn": "pool.insertBid",
      "offset": [
        14074,
        14076
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "9614": {
      "fn": "pool.insertBid",
      "offset": [
        14071,
        14073
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x6"
    },
    "9616": {
      "fn": "pool.insertBid",
      "offset": [
        14071,
        14077
      ],
      "op": "DUP1",
      "path": "10"
    },
    "9617": {
      "fn": "pool.insertBid",
      "offset": [
        14071,
        14077
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "9618": {
      "fn": "pool.insertBid",
      "offset": [
        14071,
        14073
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "9619": {
      "fn": "pool.insertBid",
      "offset": [
        14071,
        14073
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "9620": {
      "fn": "pool.insertBid",
      "offset": [
        14074,
        14076
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "9621": {
      "fn": "pool.insertBid",
      "offset": [
        14071,
        14077
      ],
      "op": "DUP2",
      "path": "10"
    },
    "9622": {
      "fn": "pool.insertBid",
      "offset": [
        14071,
        14077
      ],
      "op": "LT",
      "path": "10"
    },
    "9623": {
      "fn": "pool.insertBid",
      "offset": [
        14071,
        14077
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x25A2"
    },
    "9626": {
      "fn": "pool.insertBid",
      "offset": [
        14071,
        14077
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "9627": {
      "fn": "pool.insertBid",
      "offset": [
        14071,
        14077
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x25A2"
    },
    "9630": {
      "fn": "pool.insertBid",
      "offset": [
        14071,
        14077
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x298B"
    },
    "9633": {
      "fn": "pool.insertBid",
      "jump": "i",
      "offset": [
        14071,
        14077
      ],
      "op": "JUMP",
      "path": "10"
    },
    "9634": {
      "fn": "pool.insertBid",
      "offset": [
        14071,
        14077
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "9635": {
      "fn": "pool.insertBid",
      "offset": [
        14071,
        14077
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "9636": {
      "fn": "pool.insertBid",
      "offset": [
        14071,
        14077
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "9638": {
      "fn": "pool.insertBid",
      "offset": [
        14071,
        14077
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "9639": {
      "fn": "pool.insertBid",
      "offset": [
        14071,
        14077
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "9641": {
      "fn": "pool.insertBid",
      "offset": [
        14071,
        14077
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "9643": {
      "fn": "pool.insertBid",
      "offset": [
        14071,
        14077
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "9644": {
      "fn": "pool.insertBid",
      "offset": [
        14071,
        14077
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "9645": {
      "fn": "pool.insertBid",
      "offset": [
        14071,
        14077
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "9647": {
      "fn": "pool.insertBid",
      "offset": [
        14071,
        14077
      ],
      "op": "MUL",
      "path": "10"
    },
    "9648": {
      "fn": "pool.insertBid",
      "offset": [
        14071,
        14077
      ],
      "op": "ADD",
      "path": "10"
    },
    "9649": {
      "fn": "pool.insertBid",
      "offset": [
        14071,
        14083
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "9651": {
      "fn": "pool.insertBid",
      "offset": [
        14071,
        14083
      ],
      "op": "ADD",
      "path": "10"
    },
    "9652": {
      "fn": "pool.insertBid",
      "offset": [
        14071,
        14090
      ],
      "op": "DUP1",
      "path": "10"
    },
    "9653": {
      "fn": "pool.insertBid",
      "offset": [
        14071,
        14090
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "9654": {
      "fn": "pool.insertBid",
      "offset": [
        14071,
        14090
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "9655": {
      "fn": "pool.insertBid",
      "offset": [
        14071,
        14090
      ],
      "op": "POP",
      "path": "10"
    },
    "9656": {
      "fn": "pool.insertBid",
      "offset": [
        14071,
        14094
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x25C1"
    },
    "9659": {
      "fn": "pool.insertBid",
      "offset": [
        14071,
        14094
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "9660": {
      "fn": "pool.insertBid",
      "offset": [
        14071,
        14094
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "9661": {
      "fn": "pool.insertBid",
      "offset": [
        14071,
        14094
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x29A1"
    },
    "9664": {
      "fn": "pool.insertBid",
      "jump": "i",
      "offset": [
        14071,
        14094
      ],
      "op": "JUMP",
      "path": "10"
    },
    "9665": {
      "fn": "pool.insertBid",
      "offset": [
        14071,
        14094
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "9666": {
      "fn": "pool.insertBid",
      "offset": [
        14065,
        14068
      ],
      "op": "DUP2",
      "path": "10"
    },
    "9667": {
      "branch": 132,
      "fn": "pool.insertBid",
      "offset": [
        14065,
        14094
      ],
      "op": "LT",
      "path": "10"
    },
    "9668": {
      "fn": "pool.insertBid",
      "offset": [
        14061,
        14414
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "9669": {
      "fn": "pool.insertBid",
      "offset": [
        14061,
        14414
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xB1F"
    },
    "9672": {
      "branch": 132,
      "fn": "pool.insertBid",
      "offset": [
        14061,
        14414
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "9673": {
      "fn": "pool.insertBid",
      "offset": [
        14115,
        14124
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "9675": {
      "fn": "pool.insertBid",
      "offset": [
        14149,
        14150
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "9677": {
      "fn": "pool.insertBid",
      "offset": [
        14127,
        14129
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x6"
    },
    "9679": {
      "fn": "pool.insertBid",
      "offset": [
        14130,
        14132
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x7"
    },
    "9681": {
      "fn": "pool.insertBid",
      "offset": [
        14130,
        14132
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "9682": {
      "fn": "pool.insertBid",
      "offset": [
        14127,
        14133
      ],
      "op": "DUP2",
      "path": "10"
    },
    "9683": {
      "fn": "pool.insertBid",
      "offset": [
        14127,
        14133
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "9684": {
      "fn": "pool.insertBid",
      "offset": [
        14127,
        14133
      ],
      "op": "DUP2",
      "path": "10"
    },
    "9685": {
      "fn": "pool.insertBid",
      "offset": [
        14127,
        14133
      ],
      "op": "LT",
      "path": "10"
    },
    "9686": {
      "fn": "pool.insertBid",
      "offset": [
        14127,
        14133
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x25E1"
    },
    "9689": {
      "fn": "pool.insertBid",
      "offset": [
        14127,
        14133
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "9690": {
      "fn": "pool.insertBid",
      "offset": [
        14127,
        14133
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x25E1"
    },
    "9693": {
      "fn": "pool.insertBid",
      "offset": [
        14127,
        14133
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x298B"
    },
    "9696": {
      "fn": "pool.insertBid",
      "jump": "i",
      "offset": [
        14127,
        14133
      ],
      "op": "JUMP",
      "path": "10"
    },
    "9697": {
      "fn": "pool.insertBid",
      "offset": [
        14127,
        14133
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "9698": {
      "fn": "pool.insertBid",
      "offset": [
        14127,
        14133
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "9699": {
      "fn": "pool.insertBid",
      "offset": [
        14127,
        14133
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "9701": {
      "fn": "pool.insertBid",
      "offset": [
        14127,
        14133
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "9702": {
      "fn": "pool.insertBid",
      "offset": [
        14127,
        14133
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "9704": {
      "fn": "pool.insertBid",
      "offset": [
        14127,
        14133
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "9706": {
      "fn": "pool.insertBid",
      "offset": [
        14127,
        14133
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "9707": {
      "fn": "pool.insertBid",
      "offset": [
        14127,
        14133
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "9708": {
      "fn": "pool.insertBid",
      "offset": [
        14127,
        14133
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "9710": {
      "fn": "pool.insertBid",
      "offset": [
        14127,
        14133
      ],
      "op": "MUL",
      "path": "10"
    },
    "9711": {
      "fn": "pool.insertBid",
      "offset": [
        14127,
        14133
      ],
      "op": "ADD",
      "path": "10"
    },
    "9712": {
      "fn": "pool.insertBid",
      "offset": [
        14127,
        14139
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "9714": {
      "fn": "pool.insertBid",
      "offset": [
        14127,
        14139
      ],
      "op": "ADD",
      "path": "10"
    },
    "9715": {
      "fn": "pool.insertBid",
      "offset": [
        14127,
        14146
      ],
      "op": "DUP1",
      "path": "10"
    },
    "9716": {
      "fn": "pool.insertBid",
      "offset": [
        14127,
        14146
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "9717": {
      "fn": "pool.insertBid",
      "offset": [
        14127,
        14146
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "9718": {
      "fn": "pool.insertBid",
      "offset": [
        14127,
        14146
      ],
      "op": "POP",
      "path": "10"
    },
    "9719": {
      "fn": "pool.insertBid",
      "offset": [
        14127,
        14150
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2600"
    },
    "9722": {
      "fn": "pool.insertBid",
      "offset": [
        14127,
        14150
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "9723": {
      "fn": "pool.insertBid",
      "offset": [
        14127,
        14150
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "9724": {
      "fn": "pool.insertBid",
      "offset": [
        14127,
        14150
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x29A1"
    },
    "9727": {
      "fn": "pool.insertBid",
      "jump": "i",
      "offset": [
        14127,
        14150
      ],
      "op": "JUMP",
      "path": "10"
    },
    "9728": {
      "fn": "pool.insertBid",
      "offset": [
        14127,
        14150
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "9729": {
      "fn": "pool.insertBid",
      "offset": [
        14115,
        14150
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "9730": {
      "fn": "pool.insertBid",
      "offset": [
        14115,
        14150
      ],
      "op": "POP",
      "path": "10"
    },
    "9731": {
      "fn": "pool.insertBid",
      "offset": [
        14110,
        14296
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "9732": {
      "fn": "pool.insertBid",
      "offset": [
        14156,
        14159
      ],
      "op": "DUP2",
      "path": "10"
    },
    "9733": {
      "fn": "pool.insertBid",
      "offset": [
        14152,
        14153
      ],
      "op": "DUP2",
      "path": "10"
    },
    "9734": {
      "fn": "pool.insertBid",
      "offset": [
        14152,
        14159
      ],
      "op": "GT",
      "path": "10"
    },
    "9735": {
      "fn": "pool.insertBid",
      "offset": [
        14110,
        14296
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "9736": {
      "fn": "pool.insertBid",
      "offset": [
        14110,
        14296
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x26AE"
    },
    "9739": {
      "fn": "pool.insertBid",
      "offset": [
        14110,
        14296
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "9740": {
      "fn": "pool.insertBid",
      "offset": [
        14262,
        14264
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 96,
      "value": "0x6"
    },
    "9742": {
      "fn": "pool.insertBid",
      "offset": [
        14265,
        14267
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x7"
    },
    "9744": {
      "fn": "pool.insertBid",
      "offset": [
        14265,
        14267
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "9745": {
      "fn": "pool.insertBid",
      "offset": [
        14262,
        14268
      ],
      "op": "DUP2",
      "path": "10"
    },
    "9746": {
      "fn": "pool.insertBid",
      "offset": [
        14262,
        14268
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "9747": {
      "fn": "pool.insertBid",
      "offset": [
        14262,
        14268
      ],
      "op": "DUP2",
      "path": "10"
    },
    "9748": {
      "fn": "pool.insertBid",
      "offset": [
        14262,
        14268
      ],
      "op": "LT",
      "path": "10"
    },
    "9749": {
      "fn": "pool.insertBid",
      "offset": [
        14262,
        14268
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2620"
    },
    "9752": {
      "fn": "pool.insertBid",
      "offset": [
        14262,
        14268
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "9753": {
      "fn": "pool.insertBid",
      "offset": [
        14262,
        14268
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2620"
    },
    "9756": {
      "fn": "pool.insertBid",
      "offset": [
        14262,
        14268
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x298B"
    },
    "9759": {
      "fn": "pool.insertBid",
      "jump": "i",
      "offset": [
        14262,
        14268
      ],
      "op": "JUMP",
      "path": "10"
    },
    "9760": {
      "fn": "pool.insertBid",
      "offset": [
        14262,
        14268
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "9761": {
      "fn": "pool.insertBid",
      "offset": [
        14262,
        14268
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "9762": {
      "fn": "pool.insertBid",
      "offset": [
        14262,
        14268
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "9764": {
      "fn": "pool.insertBid",
      "offset": [
        14262,
        14268
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "9765": {
      "fn": "pool.insertBid",
      "offset": [
        14262,
        14268
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "9767": {
      "fn": "pool.insertBid",
      "offset": [
        14262,
        14268
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "9769": {
      "fn": "pool.insertBid",
      "offset": [
        14262,
        14268
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "9770": {
      "fn": "pool.insertBid",
      "offset": [
        14262,
        14268
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "9771": {
      "fn": "pool.insertBid",
      "offset": [
        14262,
        14268
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "9773": {
      "fn": "pool.insertBid",
      "offset": [
        14262,
        14268
      ],
      "op": "MUL",
      "path": "10"
    },
    "9774": {
      "fn": "pool.insertBid",
      "offset": [
        14262,
        14268
      ],
      "op": "ADD",
      "path": "10"
    },
    "9775": {
      "fn": "pool.insertBid",
      "offset": [
        14262,
        14274
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "9777": {
      "fn": "pool.insertBid",
      "offset": [
        14262,
        14274
      ],
      "op": "ADD",
      "path": "10"
    },
    "9778": {
      "fn": "pool.insertBid",
      "offset": [
        14279,
        14280
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "9780": {
      "fn": "pool.insertBid",
      "offset": [
        14275,
        14276
      ],
      "op": "DUP3",
      "path": "10"
    },
    "9781": {
      "fn": "pool.insertBid",
      "offset": [
        14275,
        14280
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x263E"
    },
    "9784": {
      "fn": "pool.insertBid",
      "offset": [
        14275,
        14280
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "9785": {
      "fn": "pool.insertBid",
      "offset": [
        14275,
        14280
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "9786": {
      "fn": "pool.insertBid",
      "offset": [
        14275,
        14280
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x29A1"
    },
    "9789": {
      "fn": "pool.insertBid",
      "jump": "i",
      "offset": [
        14275,
        14280
      ],
      "op": "JUMP",
      "path": "10"
    },
    "9790": {
      "fn": "pool.insertBid",
      "offset": [
        14275,
        14280
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "9791": {
      "fn": "pool.insertBid",
      "offset": [
        14262,
        14281
      ],
      "op": "DUP2",
      "path": "10"
    },
    "9792": {
      "fn": "pool.insertBid",
      "offset": [
        14262,
        14281
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "9793": {
      "fn": "pool.insertBid",
      "offset": [
        14262,
        14281
      ],
      "op": "DUP2",
      "path": "10"
    },
    "9794": {
      "fn": "pool.insertBid",
      "offset": [
        14262,
        14281
      ],
      "op": "LT",
      "path": "10"
    },
    "9795": {
      "fn": "pool.insertBid",
      "offset": [
        14262,
        14281
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x264E"
    },
    "9798": {
      "fn": "pool.insertBid",
      "offset": [
        14262,
        14281
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "9799": {
      "fn": "pool.insertBid",
      "offset": [
        14262,
        14281
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x264E"
    },
    "9802": {
      "fn": "pool.insertBid",
      "offset": [
        14262,
        14281
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x298B"
    },
    "9805": {
      "fn": "pool.insertBid",
      "jump": "i",
      "offset": [
        14262,
        14281
      ],
      "op": "JUMP",
      "path": "10"
    },
    "9806": {
      "fn": "pool.insertBid",
      "offset": [
        14262,
        14281
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "9807": {
      "fn": "pool.insertBid",
      "offset": [
        14262,
        14281
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "9808": {
      "fn": "pool.insertBid",
      "offset": [
        14262,
        14281
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "9810": {
      "fn": "pool.insertBid",
      "offset": [
        14262,
        14281
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "9811": {
      "fn": "pool.insertBid",
      "offset": [
        14262,
        14281
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "9813": {
      "fn": "pool.insertBid",
      "offset": [
        14262,
        14281
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "9815": {
      "fn": "pool.insertBid",
      "offset": [
        14262,
        14281
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "9816": {
      "fn": "pool.insertBid",
      "offset": [
        14262,
        14281
      ],
      "op": "ADD",
      "path": "10"
    },
    "9817": {
      "fn": "pool.insertBid",
      "offset": [
        14262,
        14281
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "9818": {
      "fn": "pool.insertBid",
      "offset": [
        14244,
        14246
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x6"
    },
    "9820": {
      "fn": "pool.insertBid",
      "offset": [
        14247,
        14249
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x7"
    },
    "9822": {
      "fn": "pool.insertBid",
      "offset": [
        14247,
        14249
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "9823": {
      "fn": "pool.insertBid",
      "offset": [
        14244,
        14250
      ],
      "op": "DUP2",
      "path": "10"
    },
    "9824": {
      "fn": "pool.insertBid",
      "offset": [
        14244,
        14250
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "9825": {
      "fn": "pool.insertBid",
      "offset": [
        14244,
        14250
      ],
      "op": "DUP2",
      "path": "10"
    },
    "9826": {
      "fn": "pool.insertBid",
      "offset": [
        14244,
        14250
      ],
      "op": "LT",
      "path": "10"
    },
    "9827": {
      "fn": "pool.insertBid",
      "offset": [
        14244,
        14250
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x266E"
    },
    "9830": {
      "fn": "pool.insertBid",
      "offset": [
        14244,
        14250
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "9831": {
      "fn": "pool.insertBid",
      "offset": [
        14244,
        14250
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x266E"
    },
    "9834": {
      "fn": "pool.insertBid",
      "offset": [
        14244,
        14250
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x298B"
    },
    "9837": {
      "fn": "pool.insertBid",
      "jump": "i",
      "offset": [
        14244,
        14250
      ],
      "op": "JUMP",
      "path": "10"
    },
    "9838": {
      "fn": "pool.insertBid",
      "offset": [
        14244,
        14250
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "9839": {
      "fn": "pool.insertBid",
      "offset": [
        14244,
        14250
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "9840": {
      "fn": "pool.insertBid",
      "offset": [
        14244,
        14250
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "9842": {
      "fn": "pool.insertBid",
      "offset": [
        14244,
        14250
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "9843": {
      "fn": "pool.insertBid",
      "offset": [
        14244,
        14250
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "9845": {
      "fn": "pool.insertBid",
      "offset": [
        14244,
        14250
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "9847": {
      "fn": "pool.insertBid",
      "offset": [
        14244,
        14250
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "9848": {
      "fn": "pool.insertBid",
      "offset": [
        14244,
        14250
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "9849": {
      "fn": "pool.insertBid",
      "offset": [
        14244,
        14250
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "9851": {
      "fn": "pool.insertBid",
      "offset": [
        14244,
        14250
      ],
      "op": "MUL",
      "path": "10"
    },
    "9852": {
      "fn": "pool.insertBid",
      "offset": [
        14244,
        14250
      ],
      "op": "ADD",
      "path": "10"
    },
    "9853": {
      "fn": "pool.insertBid",
      "offset": [
        14244,
        14256
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "9855": {
      "fn": "pool.insertBid",
      "offset": [
        14244,
        14256
      ],
      "op": "ADD",
      "path": "10"
    },
    "9856": {
      "fn": "pool.insertBid",
      "offset": [
        14257,
        14258
      ],
      "op": "DUP3",
      "path": "10"
    },
    "9857": {
      "fn": "pool.insertBid",
      "offset": [
        14244,
        14259
      ],
      "op": "DUP2",
      "path": "10"
    },
    "9858": {
      "fn": "pool.insertBid",
      "offset": [
        14244,
        14259
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "9859": {
      "fn": "pool.insertBid",
      "offset": [
        14244,
        14259
      ],
      "op": "DUP2",
      "path": "10"
    },
    "9860": {
      "fn": "pool.insertBid",
      "offset": [
        14244,
        14259
      ],
      "op": "LT",
      "path": "10"
    },
    "9861": {
      "fn": "pool.insertBid",
      "offset": [
        14244,
        14259
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2690"
    },
    "9864": {
      "fn": "pool.insertBid",
      "offset": [
        14244,
        14259
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "9865": {
      "fn": "pool.insertBid",
      "offset": [
        14244,
        14259
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2690"
    },
    "9868": {
      "fn": "pool.insertBid",
      "offset": [
        14244,
        14259
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x298B"
    },
    "9871": {
      "fn": "pool.insertBid",
      "jump": "i",
      "offset": [
        14244,
        14259
      ],
      "op": "JUMP",
      "path": "10"
    },
    "9872": {
      "fn": "pool.insertBid",
      "offset": [
        14244,
        14259
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "9873": {
      "fn": "pool.insertBid",
      "offset": [
        14244,
        14259
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "9875": {
      "fn": "pool.insertBid",
      "offset": [
        14244,
        14259
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "9876": {
      "fn": "pool.insertBid",
      "offset": [
        14244,
        14259
      ],
      "op": "DUP3",
      "path": "10"
    },
    "9877": {
      "fn": "pool.insertBid",
      "offset": [
        14244,
        14259
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "9878": {
      "fn": "pool.insertBid",
      "offset": [
        14244,
        14259
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "9880": {
      "fn": "pool.insertBid",
      "offset": [
        14244,
        14259
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "9881": {
      "fn": "pool.insertBid",
      "offset": [
        14244,
        14259
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "9882": {
      "fn": "pool.insertBid",
      "offset": [
        14244,
        14259
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "9883": {
      "fn": "pool.insertBid",
      "offset": [
        14244,
        14259
      ],
      "op": "ADD",
      "path": "10"
    },
    "9884": {
      "fn": "pool.insertBid",
      "offset": [
        14244,
        14281
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "9885": {
      "fn": "pool.insertBid",
      "offset": [
        14161,
        14164
      ],
      "op": "DUP1",
      "path": "10",
      "statement": 97
    },
    "9886": {
      "fn": "pool.insertBid",
      "offset": [
        14161,
        14164
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x26A6"
    },
    "9889": {
      "fn": "pool.insertBid",
      "offset": [
        14161,
        14164
      ],
      "op": "DUP2",
      "path": "10"
    },
    "9890": {
      "fn": "pool.insertBid",
      "offset": [
        14161,
        14164
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2A55"
    },
    "9893": {
      "fn": "pool.insertBid",
      "jump": "i",
      "offset": [
        14161,
        14164
      ],
      "op": "JUMP",
      "path": "10"
    },
    "9894": {
      "fn": "pool.insertBid",
      "offset": [
        14161,
        14164
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "9895": {
      "fn": "pool.insertBid",
      "offset": [
        14161,
        14164
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "9896": {
      "fn": "pool.insertBid",
      "offset": [
        14161,
        14164
      ],
      "op": "POP",
      "path": "10"
    },
    "9897": {
      "fn": "pool.insertBid",
      "offset": [
        14161,
        14164
      ],
      "op": "POP",
      "path": "10"
    },
    "9898": {
      "fn": "pool.insertBid",
      "offset": [
        14110,
        14296
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2603"
    },
    "9901": {
      "fn": "pool.insertBid",
      "offset": [
        14110,
        14296
      ],
      "op": "JUMP",
      "path": "10"
    },
    "9902": {
      "fn": "pool.insertBid",
      "offset": [
        14110,
        14296
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "9903": {
      "op": "POP"
    },
    "9904": {
      "fn": "pool.insertBid",
      "offset": [
        14389,
        14391
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 98,
      "value": "0x7"
    },
    "9906": {
      "fn": "pool.insertBid",
      "offset": [
        14389,
        14391
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "9907": {
      "fn": "pool.insertBid",
      "offset": [
        14384,
        14392
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "9909": {
      "fn": "pool.insertBid",
      "offset": [
        14384,
        14392
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "9910": {
      "fn": "pool.insertBid",
      "offset": [
        14384,
        14392
      ],
      "op": "DUP2",
      "path": "10"
    },
    "9911": {
      "fn": "pool.insertBid",
      "offset": [
        14384,
        14392
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "9912": {
      "fn": "pool.insertBid",
      "offset": [
        14384,
        14388
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "9914": {
      "fn": "pool.insertBid",
      "offset": [
        14384,
        14392
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "9916": {
      "fn": "pool.insertBid",
      "offset": [
        14384,
        14392
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "9917": {
      "fn": "pool.insertBid",
      "offset": [
        14384,
        14392
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "9919": {
      "fn": "pool.insertBid",
      "offset": [
        14384,
        14392
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "9920": {
      "fn": "pool.insertBid",
      "offset": [
        14384,
        14392
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "9921": {
      "fn": "pool.insertBid",
      "offset": [
        14384,
        14399
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "9922": {
      "fn": "pool.insertBid",
      "offset": [
        14384,
        14403
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x26CD"
    },
    "9925": {
      "fn": "pool.insertBid",
      "offset": [
        14384,
        14403
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "9926": {
      "fn": "pool.insertBid",
      "offset": [
        14402,
        14403
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "9928": {
      "fn": "pool.insertBid",
      "offset": [
        14402,
        14403
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "9929": {
      "fn": "pool.insertBid",
      "offset": [
        14384,
        14403
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x29A1"
    },
    "9932": {
      "fn": "pool.insertBid",
      "jump": "i",
      "offset": [
        14384,
        14403
      ],
      "op": "JUMP",
      "path": "10"
    },
    "9933": {
      "fn": "pool.insertBid",
      "offset": [
        14384,
        14403
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "9934": {
      "fn": "pool.insertBid",
      "offset": [
        14364,
        14366
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x6"
    },
    "9936": {
      "fn": "pool.insertBid",
      "offset": [
        14367,
        14369
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x7"
    },
    "9938": {
      "fn": "pool.insertBid",
      "offset": [
        14367,
        14369
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "9939": {
      "fn": "pool.insertBid",
      "offset": [
        14364,
        14370
      ],
      "op": "DUP2",
      "path": "10"
    },
    "9940": {
      "fn": "pool.insertBid",
      "offset": [
        14364,
        14370
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "9941": {
      "fn": "pool.insertBid",
      "offset": [
        14364,
        14370
      ],
      "op": "DUP2",
      "path": "10"
    },
    "9942": {
      "fn": "pool.insertBid",
      "offset": [
        14364,
        14370
      ],
      "op": "LT",
      "path": "10"
    },
    "9943": {
      "fn": "pool.insertBid",
      "offset": [
        14364,
        14370
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x26E2"
    },
    "9946": {
      "fn": "pool.insertBid",
      "offset": [
        14364,
        14370
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "9947": {
      "fn": "pool.insertBid",
      "offset": [
        14364,
        14370
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x26E2"
    },
    "9950": {
      "fn": "pool.insertBid",
      "offset": [
        14364,
        14370
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x298B"
    },
    "9953": {
      "fn": "pool.insertBid",
      "jump": "i",
      "offset": [
        14364,
        14370
      ],
      "op": "JUMP",
      "path": "10"
    },
    "9954": {
      "fn": "pool.insertBid",
      "offset": [
        14364,
        14370
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "9955": {
      "fn": "pool.insertBid",
      "offset": [
        14364,
        14370
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "9956": {
      "fn": "pool.insertBid",
      "offset": [
        14364,
        14370
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "9958": {
      "fn": "pool.insertBid",
      "offset": [
        14364,
        14370
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "9959": {
      "fn": "pool.insertBid",
      "offset": [
        14364,
        14370
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "9961": {
      "fn": "pool.insertBid",
      "offset": [
        14364,
        14370
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "9963": {
      "fn": "pool.insertBid",
      "offset": [
        14364,
        14370
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "9964": {
      "fn": "pool.insertBid",
      "offset": [
        14364,
        14370
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "9965": {
      "fn": "pool.insertBid",
      "offset": [
        14364,
        14370
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "9967": {
      "fn": "pool.insertBid",
      "offset": [
        14364,
        14370
      ],
      "op": "MUL",
      "path": "10"
    },
    "9968": {
      "fn": "pool.insertBid",
      "offset": [
        14364,
        14370
      ],
      "op": "ADD",
      "path": "10"
    },
    "9969": {
      "fn": "pool.insertBid",
      "offset": [
        14364,
        14376
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "9971": {
      "fn": "pool.insertBid",
      "offset": [
        14364,
        14376
      ],
      "op": "ADD",
      "path": "10"
    },
    "9972": {
      "fn": "pool.insertBid",
      "offset": [
        14377,
        14380
      ],
      "op": "DUP3",
      "path": "10"
    },
    "9973": {
      "fn": "pool.insertBid",
      "offset": [
        14364,
        14381
      ],
      "op": "DUP2",
      "path": "10"
    },
    "9974": {
      "fn": "pool.insertBid",
      "offset": [
        14364,
        14381
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "9975": {
      "fn": "pool.insertBid",
      "offset": [
        14364,
        14381
      ],
      "op": "DUP2",
      "path": "10"
    },
    "9976": {
      "fn": "pool.insertBid",
      "offset": [
        14364,
        14381
      ],
      "op": "LT",
      "path": "10"
    },
    "9977": {
      "fn": "pool.insertBid",
      "offset": [
        14364,
        14381
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2704"
    },
    "9980": {
      "fn": "pool.insertBid",
      "offset": [
        14364,
        14381
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "9981": {
      "fn": "pool.insertBid",
      "offset": [
        14364,
        14381
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2704"
    },
    "9984": {
      "fn": "pool.insertBid",
      "offset": [
        14364,
        14381
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x298B"
    },
    "9987": {
      "fn": "pool.insertBid",
      "jump": "i",
      "offset": [
        14364,
        14381
      ],
      "op": "JUMP",
      "path": "10"
    },
    "9988": {
      "fn": "pool.insertBid",
      "offset": [
        14364,
        14381
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "9989": {
      "fn": "pool.insertBid",
      "offset": [
        14364,
        14381
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "9991": {
      "fn": "pool.insertBid",
      "offset": [
        14364,
        14381
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "9992": {
      "fn": "pool.insertBid",
      "offset": [
        14364,
        14381
      ],
      "op": "DUP3",
      "path": "10"
    },
    "9993": {
      "fn": "pool.insertBid",
      "offset": [
        14364,
        14381
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "9994": {
      "fn": "pool.insertBid",
      "offset": [
        14364,
        14381
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "9996": {
      "fn": "pool.insertBid",
      "offset": [
        14364,
        14381
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "9997": {
      "fn": "pool.insertBid",
      "offset": [
        14364,
        14381
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "9998": {
      "fn": "pool.insertBid",
      "offset": [
        14364,
        14381
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "9999": {
      "fn": "pool.insertBid",
      "offset": [
        14364,
        14381
      ],
      "op": "ADD",
      "path": "10"
    },
    "10000": {
      "fn": "pool.insertBid",
      "offset": [
        14364,
        14403
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "10001": {
      "fn": "pool.insertBid",
      "offset": [
        13109,
        14520
      ],
      "op": "POP",
      "path": "10"
    },
    "10002": {
      "fn": "pool.insertBid",
      "offset": [
        13109,
        14520
      ],
      "op": "POP",
      "path": "10"
    },
    "10003": {
      "fn": "pool.insertBid",
      "offset": [
        13109,
        14520
      ],
      "op": "POP",
      "path": "10"
    },
    "10004": {
      "fn": "pool.insertBid",
      "offset": [
        13065,
        14520
      ],
      "op": "POP",
      "path": "10"
    },
    "10005": {
      "fn": "pool.insertBid",
      "jump": "o",
      "offset": [
        13065,
        14520
      ],
      "op": "JUMP",
      "path": "10"
    },
    "10006": {
      "op": "JUMPDEST"
    },
    "10007": {
      "op": "DUP3"
    },
    "10008": {
      "op": "DUP1"
    },
    "10009": {
      "op": "SLOAD"
    },
    "10010": {
      "op": "DUP3"
    },
    "10011": {
      "op": "DUP3"
    },
    "10012": {
      "op": "SSTORE"
    },
    "10013": {
      "op": "SWAP1"
    },
    "10014": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10016": {
      "op": "MSTORE"
    },
    "10017": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10019": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10021": {
      "op": "KECCAK256"
    },
    "10022": {
      "op": "SWAP1"
    },
    "10023": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "10025": {
      "op": "MUL"
    },
    "10026": {
      "op": "DUP2"
    },
    "10027": {
      "op": "ADD"
    },
    "10028": {
      "op": "SWAP3"
    },
    "10029": {
      "op": "DUP3"
    },
    "10030": {
      "op": "ISZERO"
    },
    "10031": {
      "op": "PUSH2",
      "value": "0x278C"
    },
    "10034": {
      "op": "JUMPI"
    },
    "10035": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10037": {
      "op": "MSTORE"
    },
    "10038": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10040": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10042": {
      "op": "KECCAK256"
    },
    "10043": {
      "op": "SWAP2"
    },
    "10044": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "10046": {
      "op": "MUL"
    },
    "10047": {
      "op": "DUP3"
    },
    "10048": {
      "op": "ADD"
    },
    "10049": {
      "op": "JUMPDEST"
    },
    "10050": {
      "op": "DUP3"
    },
    "10051": {
      "op": "DUP2"
    },
    "10052": {
      "op": "GT"
    },
    "10053": {
      "op": "ISZERO"
    },
    "10054": {
      "op": "PUSH2",
      "value": "0x278C"
    },
    "10057": {
      "op": "JUMPI"
    },
    "10058": {
      "op": "DUP3"
    },
    "10059": {
      "op": "SLOAD"
    },
    "10060": {
      "op": "DUP3"
    },
    "10061": {
      "op": "SSTORE"
    },
    "10062": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10064": {
      "op": "DUP1"
    },
    "10065": {
      "op": "DUP5"
    },
    "10066": {
      "op": "ADD"
    },
    "10067": {
      "op": "SLOAD"
    },
    "10068": {
      "op": "SWAP1"
    },
    "10069": {
      "op": "DUP4"
    },
    "10070": {
      "op": "ADD"
    },
    "10071": {
      "op": "SSTORE"
    },
    "10072": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "10074": {
      "op": "DUP1"
    },
    "10075": {
      "op": "DUP5"
    },
    "10076": {
      "op": "ADD"
    },
    "10077": {
      "op": "SLOAD"
    },
    "10078": {
      "op": "SWAP1"
    },
    "10079": {
      "op": "DUP4"
    },
    "10080": {
      "op": "ADD"
    },
    "10081": {
      "op": "DUP1"
    },
    "10082": {
      "op": "SLOAD"
    },
    "10083": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10085": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10087": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10089": {
      "op": "SHL"
    },
    "10090": {
      "op": "SUB"
    },
    "10091": {
      "op": "NOT"
    },
    "10092": {
      "op": "AND"
    },
    "10093": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10095": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10097": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10099": {
      "op": "SHL"
    },
    "10100": {
      "op": "SUB"
    },
    "10101": {
      "op": "SWAP1"
    },
    "10102": {
      "op": "SWAP3"
    },
    "10103": {
      "op": "AND"
    },
    "10104": {
      "op": "SWAP2"
    },
    "10105": {
      "op": "SWAP1"
    },
    "10106": {
      "op": "SWAP2"
    },
    "10107": {
      "op": "OR"
    },
    "10108": {
      "op": "SWAP1"
    },
    "10109": {
      "op": "SSTORE"
    },
    "10110": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "10112": {
      "op": "SWAP3"
    },
    "10113": {
      "op": "DUP4"
    },
    "10114": {
      "op": "ADD"
    },
    "10115": {
      "op": "SWAP3"
    },
    "10116": {
      "op": "SWAP1"
    },
    "10117": {
      "op": "SWAP2"
    },
    "10118": {
      "op": "ADD"
    },
    "10119": {
      "op": "SWAP1"
    },
    "10120": {
      "op": "PUSH2",
      "value": "0x2741"
    },
    "10123": {
      "op": "JUMP"
    },
    "10124": {
      "op": "JUMPDEST"
    },
    "10125": {
      "op": "POP"
    },
    "10126": {
      "op": "PUSH2",
      "value": "0x2798"
    },
    "10129": {
      "op": "SWAP3"
    },
    "10130": {
      "op": "SWAP2"
    },
    "10131": {
      "op": "POP"
    },
    "10132": {
      "op": "PUSH2",
      "value": "0x27E8"
    },
    "10135": {
      "jump": "i",
      "op": "JUMP"
    },
    "10136": {
      "op": "JUMPDEST"
    },
    "10137": {
      "op": "POP"
    },
    "10138": {
      "op": "SWAP1"
    },
    "10139": {
      "jump": "o",
      "op": "JUMP"
    },
    "10140": {
      "op": "JUMPDEST"
    },
    "10141": {
      "op": "DUP3"
    },
    "10142": {
      "op": "DUP1"
    },
    "10143": {
      "op": "SLOAD"
    },
    "10144": {
      "op": "DUP3"
    },
    "10145": {
      "op": "DUP3"
    },
    "10146": {
      "op": "SSTORE"
    },
    "10147": {
      "op": "SWAP1"
    },
    "10148": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10150": {
      "op": "MSTORE"
    },
    "10151": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10153": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10155": {
      "op": "KECCAK256"
    },
    "10156": {
      "op": "SWAP1"
    },
    "10157": {
      "op": "DUP2"
    },
    "10158": {
      "op": "ADD"
    },
    "10159": {
      "op": "SWAP3"
    },
    "10160": {
      "op": "DUP3"
    },
    "10161": {
      "op": "ISZERO"
    },
    "10162": {
      "op": "PUSH2",
      "value": "0x27DC"
    },
    "10165": {
      "op": "JUMPI"
    },
    "10166": {
      "op": "SWAP2"
    },
    "10167": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10169": {
      "op": "MUL"
    },
    "10170": {
      "op": "DUP3"
    },
    "10171": {
      "op": "ADD"
    },
    "10172": {
      "op": "JUMPDEST"
    },
    "10173": {
      "op": "DUP3"
    },
    "10174": {
      "op": "DUP2"
    },
    "10175": {
      "op": "GT"
    },
    "10176": {
      "op": "ISZERO"
    },
    "10177": {
      "op": "PUSH2",
      "value": "0x27DC"
    },
    "10180": {
      "op": "JUMPI"
    },
    "10181": {
      "op": "DUP3"
    },
    "10182": {
      "op": "MLOAD"
    },
    "10183": {
      "op": "DUP3"
    },
    "10184": {
      "op": "SWAP1"
    },
    "10185": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "10187": {
      "op": "AND"
    },
    "10188": {
      "op": "SWAP1"
    },
    "10189": {
      "op": "SSTORE"
    },
    "10190": {
      "op": "SWAP2"
    },
    "10191": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10193": {
      "op": "ADD"
    },
    "10194": {
      "op": "SWAP2"
    },
    "10195": {
      "op": "SWAP1"
    },
    "10196": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10198": {
      "op": "ADD"
    },
    "10199": {
      "op": "SWAP1"
    },
    "10200": {
      "op": "PUSH2",
      "value": "0x27BC"
    },
    "10203": {
      "op": "JUMP"
    },
    "10204": {
      "op": "JUMPDEST"
    },
    "10205": {
      "op": "POP"
    },
    "10206": {
      "op": "PUSH2",
      "value": "0x2798"
    },
    "10209": {
      "op": "SWAP3"
    },
    "10210": {
      "op": "SWAP2"
    },
    "10211": {
      "op": "POP"
    },
    "10212": {
      "op": "PUSH2",
      "value": "0x2815"
    },
    "10215": {
      "jump": "i",
      "op": "JUMP"
    },
    "10216": {
      "op": "JUMPDEST"
    },
    "10217": {
      "op": "JUMPDEST"
    },
    "10218": {
      "op": "DUP1"
    },
    "10219": {
      "op": "DUP3"
    },
    "10220": {
      "op": "GT"
    },
    "10221": {
      "op": "ISZERO"
    },
    "10222": {
      "op": "PUSH2",
      "value": "0x2798"
    },
    "10225": {
      "op": "JUMPI"
    },
    "10226": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10228": {
      "op": "DUP1"
    },
    "10229": {
      "op": "DUP3"
    },
    "10230": {
      "op": "SSTORE"
    },
    "10231": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10233": {
      "op": "DUP3"
    },
    "10234": {
      "op": "ADD"
    },
    "10235": {
      "op": "SSTORE"
    },
    "10236": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "10238": {
      "op": "DUP2"
    },
    "10239": {
      "op": "ADD"
    },
    "10240": {
      "op": "DUP1"
    },
    "10241": {
      "op": "SLOAD"
    },
    "10242": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10244": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10246": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10248": {
      "op": "SHL"
    },
    "10249": {
      "op": "SUB"
    },
    "10250": {
      "op": "NOT"
    },
    "10251": {
      "op": "AND"
    },
    "10252": {
      "op": "SWAP1"
    },
    "10253": {
      "op": "SSTORE"
    },
    "10254": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "10256": {
      "op": "ADD"
    },
    "10257": {
      "op": "PUSH2",
      "value": "0x27E9"
    },
    "10260": {
      "op": "JUMP"
    },
    "10261": {
      "op": "JUMPDEST"
    },
    "10262": {
      "op": "JUMPDEST"
    },
    "10263": {
      "op": "DUP1"
    },
    "10264": {
      "op": "DUP3"
    },
    "10265": {
      "op": "GT"
    },
    "10266": {
      "op": "ISZERO"
    },
    "10267": {
      "op": "PUSH2",
      "value": "0x2798"
    },
    "10270": {
      "op": "JUMPI"
    },
    "10271": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10273": {
      "op": "DUP2"
    },
    "10274": {
      "op": "SSTORE"
    },
    "10275": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10277": {
      "op": "ADD"
    },
    "10278": {
      "op": "PUSH2",
      "value": "0x2816"
    },
    "10281": {
      "op": "JUMP"
    },
    "10282": {
      "op": "JUMPDEST"
    },
    "10283": {
      "op": "DUP1"
    },
    "10284": {
      "op": "CALLDATALOAD"
    },
    "10285": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10287": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10289": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10291": {
      "op": "SHL"
    },
    "10292": {
      "op": "SUB"
    },
    "10293": {
      "op": "DUP2"
    },
    "10294": {
      "op": "AND"
    },
    "10295": {
      "op": "DUP2"
    },
    "10296": {
      "op": "EQ"
    },
    "10297": {
      "op": "PUSH2",
      "value": "0x2841"
    },
    "10300": {
      "op": "JUMPI"
    },
    "10301": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10303": {
      "op": "DUP1"
    },
    "10304": {
      "op": "REVERT"
    },
    "10305": {
      "op": "JUMPDEST"
    },
    "10306": {
      "op": "SWAP2"
    },
    "10307": {
      "op": "SWAP1"
    },
    "10308": {
      "op": "POP"
    },
    "10309": {
      "jump": "o",
      "op": "JUMP"
    },
    "10310": {
      "op": "JUMPDEST"
    },
    "10311": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10313": {
      "op": "DUP1"
    },
    "10314": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10316": {
      "op": "DUP4"
    },
    "10317": {
      "op": "DUP6"
    },
    "10318": {
      "op": "SUB"
    },
    "10319": {
      "op": "SLT"
    },
    "10320": {
      "op": "ISZERO"
    },
    "10321": {
      "op": "PUSH2",
      "value": "0x2859"
    },
    "10324": {
      "op": "JUMPI"
    },
    "10325": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10327": {
      "op": "DUP1"
    },
    "10328": {
      "op": "REVERT"
    },
    "10329": {
      "op": "JUMPDEST"
    },
    "10330": {
      "op": "PUSH2",
      "value": "0x2862"
    },
    "10333": {
      "op": "DUP4"
    },
    "10334": {
      "op": "PUSH2",
      "value": "0x282A"
    },
    "10337": {
      "jump": "i",
      "op": "JUMP"
    },
    "10338": {
      "op": "JUMPDEST"
    },
    "10339": {
      "op": "SWAP5"
    },
    "10340": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10342": {
      "op": "SWAP4"
    },
    "10343": {
      "op": "SWAP1"
    },
    "10344": {
      "op": "SWAP4"
    },
    "10345": {
      "op": "ADD"
    },
    "10346": {
      "op": "CALLDATALOAD"
    },
    "10347": {
      "op": "SWAP4"
    },
    "10348": {
      "op": "POP"
    },
    "10349": {
      "op": "POP"
    },
    "10350": {
      "op": "POP"
    },
    "10351": {
      "jump": "o",
      "op": "JUMP"
    },
    "10352": {
      "op": "JUMPDEST"
    },
    "10353": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "10358": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10360": {
      "op": "SHL"
    },
    "10361": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10363": {
      "op": "MSTORE"
    },
    "10364": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "10366": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "10368": {
      "op": "MSTORE"
    },
    "10369": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10371": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10373": {
      "op": "REVERT"
    },
    "10374": {
      "op": "JUMPDEST"
    },
    "10375": {
      "op": "DUP4"
    },
    "10376": {
      "op": "DUP2"
    },
    "10377": {
      "op": "MSTORE"
    },
    "10378": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10380": {
      "op": "DUP2"
    },
    "10381": {
      "op": "ADD"
    },
    "10382": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "10384": {
      "op": "DUP5"
    },
    "10385": {
      "op": "LT"
    },
    "10386": {
      "op": "PUSH2",
      "value": "0x28AB"
    },
    "10389": {
      "op": "JUMPI"
    },
    "10390": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "10395": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10397": {
      "op": "SHL"
    },
    "10398": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10400": {
      "op": "MSTORE"
    },
    "10401": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "10403": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "10405": {
      "op": "MSTORE"
    },
    "10406": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10408": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10410": {
      "op": "REVERT"
    },
    "10411": {
      "op": "JUMPDEST"
    },
    "10412": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10414": {
      "op": "DUP3"
    },
    "10415": {
      "op": "ADD"
    },
    "10416": {
      "op": "SWAP4"
    },
    "10417": {
      "op": "SWAP1"
    },
    "10418": {
      "op": "SWAP4"
    },
    "10419": {
      "op": "MSTORE"
    },
    "10420": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10422": {
      "op": "ADD"
    },
    "10423": {
      "op": "MSTORE"
    },
    "10424": {
      "op": "SWAP2"
    },
    "10425": {
      "op": "SWAP1"
    },
    "10426": {
      "op": "POP"
    },
    "10427": {
      "jump": "o",
      "op": "JUMP"
    },
    "10428": {
      "op": "JUMPDEST"
    },
    "10429": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10431": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10433": {
      "op": "DUP3"
    },
    "10434": {
      "op": "DUP5"
    },
    "10435": {
      "op": "SUB"
    },
    "10436": {
      "op": "SLT"
    },
    "10437": {
      "op": "ISZERO"
    },
    "10438": {
      "op": "PUSH2",
      "value": "0x28CE"
    },
    "10441": {
      "op": "JUMPI"
    },
    "10442": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10444": {
      "op": "DUP1"
    },
    "10445": {
      "op": "REVERT"
    },
    "10446": {
      "op": "JUMPDEST"
    },
    "10447": {
      "op": "POP"
    },
    "10448": {
      "op": "CALLDATALOAD"
    },
    "10449": {
      "op": "SWAP2"
    },
    "10450": {
      "op": "SWAP1"
    },
    "10451": {
      "op": "POP"
    },
    "10452": {
      "jump": "o",
      "op": "JUMP"
    },
    "10453": {
      "op": "JUMPDEST"
    },
    "10454": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10456": {
      "op": "DUP1"
    },
    "10457": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10459": {
      "op": "DUP4"
    },
    "10460": {
      "op": "DUP6"
    },
    "10461": {
      "op": "SUB"
    },
    "10462": {
      "op": "SLT"
    },
    "10463": {
      "op": "ISZERO"
    },
    "10464": {
      "op": "PUSH2",
      "value": "0x28E8"
    },
    "10467": {
      "op": "JUMPI"
    },
    "10468": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10470": {
      "op": "DUP1"
    },
    "10471": {
      "op": "REVERT"
    },
    "10472": {
      "op": "JUMPDEST"
    },
    "10473": {
      "op": "POP"
    },
    "10474": {
      "op": "POP"
    },
    "10475": {
      "op": "DUP1"
    },
    "10476": {
      "op": "CALLDATALOAD"
    },
    "10477": {
      "op": "SWAP3"
    },
    "10478": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10480": {
      "op": "SWAP1"
    },
    "10481": {
      "op": "SWAP2"
    },
    "10482": {
      "op": "ADD"
    },
    "10483": {
      "op": "CALLDATALOAD"
    },
    "10484": {
      "op": "SWAP2"
    },
    "10485": {
      "op": "POP"
    },
    "10486": {
      "jump": "o",
      "op": "JUMP"
    },
    "10487": {
      "op": "JUMPDEST"
    },
    "10488": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10490": {
      "op": "DUP1"
    },
    "10491": {
      "op": "DUP3"
    },
    "10492": {
      "op": "MSTORE"
    },
    "10493": {
      "op": "DUP3"
    },
    "10494": {
      "op": "MLOAD"
    },
    "10495": {
      "op": "DUP3"
    },
    "10496": {
      "op": "DUP3"
    },
    "10497": {
      "op": "ADD"
    },
    "10498": {
      "op": "DUP2"
    },
    "10499": {
      "op": "SWAP1"
    },
    "10500": {
      "op": "MSTORE"
    },
    "10501": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10503": {
      "op": "SWAP2"
    },
    "10504": {
      "op": "SWAP1"
    },
    "10505": {
      "op": "DUP5"
    },
    "10506": {
      "op": "DUP3"
    },
    "10507": {
      "op": "ADD"
    },
    "10508": {
      "op": "SWAP1"
    },
    "10509": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10511": {
      "op": "DUP6"
    },
    "10512": {
      "op": "ADD"
    },
    "10513": {
      "op": "SWAP1"
    },
    "10514": {
      "op": "DUP5"
    },
    "10515": {
      "op": "JUMPDEST"
    },
    "10516": {
      "op": "DUP2"
    },
    "10517": {
      "op": "DUP2"
    },
    "10518": {
      "op": "LT"
    },
    "10519": {
      "op": "ISZERO"
    },
    "10520": {
      "op": "PUSH2",
      "value": "0x292F"
    },
    "10523": {
      "op": "JUMPI"
    },
    "10524": {
      "op": "DUP4"
    },
    "10525": {
      "op": "MLOAD"
    },
    "10526": {
      "op": "DUP4"
    },
    "10527": {
      "op": "MSTORE"
    },
    "10528": {
      "op": "SWAP3"
    },
    "10529": {
      "op": "DUP5"
    },
    "10530": {
      "op": "ADD"
    },
    "10531": {
      "op": "SWAP3"
    },
    "10532": {
      "op": "SWAP2"
    },
    "10533": {
      "op": "DUP5"
    },
    "10534": {
      "op": "ADD"
    },
    "10535": {
      "op": "SWAP2"
    },
    "10536": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10538": {
      "op": "ADD"
    },
    "10539": {
      "op": "PUSH2",
      "value": "0x2913"
    },
    "10542": {
      "op": "JUMP"
    },
    "10543": {
      "op": "JUMPDEST"
    },
    "10544": {
      "op": "POP"
    },
    "10545": {
      "op": "SWAP1"
    },
    "10546": {
      "op": "SWAP7"
    },
    "10547": {
      "op": "SWAP6"
    },
    "10548": {
      "op": "POP"
    },
    "10549": {
      "op": "POP"
    },
    "10550": {
      "op": "POP"
    },
    "10551": {
      "op": "POP"
    },
    "10552": {
      "op": "POP"
    },
    "10553": {
      "op": "POP"
    },
    "10554": {
      "jump": "o",
      "op": "JUMP"
    },
    "10555": {
      "op": "JUMPDEST"
    },
    "10556": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10558": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10560": {
      "op": "DUP3"
    },
    "10561": {
      "op": "DUP5"
    },
    "10562": {
      "op": "SUB"
    },
    "10563": {
      "op": "SLT"
    },
    "10564": {
      "op": "ISZERO"
    },
    "10565": {
      "op": "PUSH2",
      "value": "0x294D"
    },
    "10568": {
      "op": "JUMPI"
    },
    "10569": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10571": {
      "op": "DUP1"
    },
    "10572": {
      "op": "REVERT"
    },
    "10573": {
      "op": "JUMPDEST"
    },
    "10574": {
      "op": "PUSH2",
      "value": "0x2956"
    },
    "10577": {
      "op": "DUP3"
    },
    "10578": {
      "op": "PUSH2",
      "value": "0x282A"
    },
    "10581": {
      "jump": "i",
      "op": "JUMP"
    },
    "10582": {
      "op": "JUMPDEST"
    },
    "10583": {
      "op": "SWAP4"
    },
    "10584": {
      "op": "SWAP3"
    },
    "10585": {
      "op": "POP"
    },
    "10586": {
      "op": "POP"
    },
    "10587": {
      "op": "POP"
    },
    "10588": {
      "jump": "o",
      "op": "JUMP"
    },
    "10589": {
      "op": "JUMPDEST"
    },
    "10590": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "10595": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10597": {
      "op": "SHL"
    },
    "10598": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10600": {
      "op": "MSTORE"
    },
    "10601": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "10603": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "10605": {
      "op": "MSTORE"
    },
    "10606": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10608": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10610": {
      "op": "REVERT"
    },
    "10611": {
      "op": "JUMPDEST"
    },
    "10612": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10614": {
      "op": "DUP3"
    },
    "10615": {
      "op": "NOT"
    },
    "10616": {
      "op": "DUP3"
    },
    "10617": {
      "op": "GT"
    },
    "10618": {
      "op": "ISZERO"
    },
    "10619": {
      "op": "PUSH2",
      "value": "0x2986"
    },
    "10622": {
      "op": "JUMPI"
    },
    "10623": {
      "op": "PUSH2",
      "value": "0x2986"
    },
    "10626": {
      "op": "PUSH2",
      "value": "0x295D"
    },
    "10629": {
      "jump": "i",
      "op": "JUMP"
    },
    "10630": {
      "op": "JUMPDEST"
    },
    "10631": {
      "op": "POP"
    },
    "10632": {
      "op": "ADD"
    },
    "10633": {
      "op": "SWAP1"
    },
    "10634": {
      "jump": "o",
      "op": "JUMP"
    },
    "10635": {
      "op": "JUMPDEST"
    },
    "10636": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "10641": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10643": {
      "op": "SHL"
    },
    "10644": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10646": {
      "op": "MSTORE"
    },
    "10647": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "10649": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "10651": {
      "op": "MSTORE"
    },
    "10652": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10654": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10656": {
      "op": "REVERT"
    },
    "10657": {
      "op": "JUMPDEST"
    },
    "10658": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10660": {
      "op": "DUP3"
    },
    "10661": {
      "op": "DUP3"
    },
    "10662": {
      "op": "LT"
    },
    "10663": {
      "op": "ISZERO"
    },
    "10664": {
      "op": "PUSH2",
      "value": "0x29B3"
    },
    "10667": {
      "op": "JUMPI"
    },
    "10668": {
      "op": "PUSH2",
      "value": "0x29B3"
    },
    "10671": {
      "op": "PUSH2",
      "value": "0x295D"
    },
    "10674": {
      "jump": "i",
      "op": "JUMP"
    },
    "10675": {
      "op": "JUMPDEST"
    },
    "10676": {
      "op": "POP"
    },
    "10677": {
      "op": "SUB"
    },
    "10678": {
      "op": "SWAP1"
    },
    "10679": {
      "jump": "o",
      "op": "JUMP"
    },
    "10680": {
      "op": "JUMPDEST"
    },
    "10681": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10683": {
      "op": "DUP1"
    },
    "10684": {
      "op": "DUP3"
    },
    "10685": {
      "op": "MSTORE"
    },
    "10686": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "10688": {
      "op": "SWAP1"
    },
    "10689": {
      "op": "DUP3"
    },
    "10690": {
      "op": "ADD"
    },
    "10691": {
      "op": "MSTORE"
    },
    "10692": {
      "op": "PUSH32",
      "value": "0x416C72656164792065787069726564206F7220746F6F20636C6F736520746F20"
    },
    "10725": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10727": {
      "op": "DUP3"
    },
    "10728": {
      "op": "ADD"
    },
    "10729": {
      "op": "MSTORE"
    },
    "10730": {
      "op": "PUSH6",
      "value": "0x657870697279"
    },
    "10737": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "10739": {
      "op": "SHL"
    },
    "10740": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10742": {
      "op": "DUP3"
    },
    "10743": {
      "op": "ADD"
    },
    "10744": {
      "op": "MSTORE"
    },
    "10745": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10747": {
      "op": "ADD"
    },
    "10748": {
      "op": "SWAP1"
    },
    "10749": {
      "jump": "o",
      "op": "JUMP"
    },
    "10750": {
      "op": "JUMPDEST"
    },
    "10751": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10753": {
      "op": "DUP2"
    },
    "10754": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10756": {
      "op": "NOT"
    },
    "10757": {
      "op": "DIV"
    },
    "10758": {
      "op": "DUP4"
    },
    "10759": {
      "op": "GT"
    },
    "10760": {
      "op": "DUP3"
    },
    "10761": {
      "op": "ISZERO"
    },
    "10762": {
      "op": "ISZERO"
    },
    "10763": {
      "op": "AND"
    },
    "10764": {
      "op": "ISZERO"
    },
    "10765": {
      "op": "PUSH2",
      "value": "0x2A18"
    },
    "10768": {
      "op": "JUMPI"
    },
    "10769": {
      "op": "PUSH2",
      "value": "0x2A18"
    },
    "10772": {
      "op": "PUSH2",
      "value": "0x295D"
    },
    "10775": {
      "jump": "i",
      "op": "JUMP"
    },
    "10776": {
      "op": "JUMPDEST"
    },
    "10777": {
      "op": "POP"
    },
    "10778": {
      "op": "MUL"
    },
    "10779": {
      "op": "SWAP1"
    },
    "10780": {
      "jump": "o",
      "op": "JUMP"
    },
    "10781": {
      "op": "JUMPDEST"
    },
    "10782": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10784": {
      "op": "DUP3"
    },
    "10785": {
      "op": "PUSH2",
      "value": "0x2A3A"
    },
    "10788": {
      "op": "JUMPI"
    },
    "10789": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "10794": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10796": {
      "op": "SHL"
    },
    "10797": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10799": {
      "op": "MSTORE"
    },
    "10800": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "10802": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "10804": {
      "op": "MSTORE"
    },
    "10805": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10807": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10809": {
      "op": "REVERT"
    },
    "10810": {
      "op": "JUMPDEST"
    },
    "10811": {
      "op": "POP"
    },
    "10812": {
      "op": "DIV"
    },
    "10813": {
      "op": "SWAP1"
    },
    "10814": {
      "jump": "o",
      "op": "JUMP"
    },
    "10815": {
      "op": "JUMPDEST"
    },
    "10816": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "10821": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10823": {
      "op": "SHL"
    },
    "10824": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10826": {
      "op": "MSTORE"
    },
    "10827": {
      "op": "PUSH1",
      "value": "0x31"
    },
    "10829": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "10831": {
      "op": "MSTORE"
    },
    "10832": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10834": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10836": {
      "op": "REVERT"
    },
    "10837": {
      "op": "JUMPDEST"
    },
    "10838": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10840": {
      "op": "DUP2"
    },
    "10841": {
      "op": "PUSH2",
      "value": "0x2A64"
    },
    "10844": {
      "op": "JUMPI"
    },
    "10845": {
      "op": "PUSH2",
      "value": "0x2A64"
    },
    "10848": {
      "op": "PUSH2",
      "value": "0x295D"
    },
    "10851": {
      "jump": "i",
      "op": "JUMP"
    },
    "10852": {
      "op": "JUMPDEST"
    },
    "10853": {
      "op": "POP"
    },
    "10854": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10856": {
      "op": "NOT"
    },
    "10857": {
      "op": "ADD"
    },
    "10858": {
      "op": "SWAP1"
    },
    "10859": {
      "jump": "o",
      "op": "JUMP"
    },
    "10860": {
      "op": "JUMPDEST"
    },
    "10861": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10863": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10865": {
      "op": "NOT"
    },
    "10866": {
      "op": "DUP3"
    },
    "10867": {
      "op": "EQ"
    },
    "10868": {
      "op": "ISZERO"
    },
    "10869": {
      "op": "PUSH2",
      "value": "0x2A80"
    },
    "10872": {
      "op": "JUMPI"
    },
    "10873": {
      "op": "PUSH2",
      "value": "0x2A80"
    },
    "10876": {
      "op": "PUSH2",
      "value": "0x295D"
    },
    "10879": {
      "jump": "i",
      "op": "JUMP"
    },
    "10880": {
      "op": "JUMPDEST"
    },
    "10881": {
      "op": "POP"
    },
    "10882": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10884": {
      "op": "ADD"
    },
    "10885": {
      "op": "SWAP1"
    },
    "10886": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "ac1c8337d73849f1816179956a07b198f8fe890c",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity >=0.6.7;\n\n// to do\n// 1. sushi\n// 2. transcation cost\n\n// uncomment this below if need real ETH price !!!!!!!!\n//import \"@chainlink/contracts/src/v0.6/interfaces/AggregatorV3Interface.sol\";\n\ncontract pool {\n    uint256 private constant NO_TRADE_CLOSE_TO_EXPIRE = 10; //seconds\n    uint256 private constant MIN_BUYER_SIZE = 1e2;\n    uint256 private constant MIN_SELLER_SIZE = 1e3;\n    uint256 private constant MIN_DEPOSIT_SIZE = 5e2;\n    uint256 private constant TRANSACTION_COST = 1; // so 1% for each trade or we use a formula\n\n    // prevent two people draw liquidity at same time\n    enum contract_status {\n        open,\n        locked\n    }\n    contract_status private STATUS = contract_status.open;\n\n    //Pricefeed interfaces from chainlink\n    // uncomment this below if need real ETH price !!!!!!!!\n    // AggregatorV3Interface internal ethFeed;\n    uint256 public ethPrice;\n\n    address payable contract_address;\n\n    // store cash balance for each user, not used in any option sub-pool\n    mapping(address => uint256) public cash_balance;\n\n    // bid_struct: each bid in bids (bids is the order book for each option)\n    struct bid_struct {\n        uint256 price; // usd per option\n        uint256 size; // number of option x strike\n        address user_id; //user address\n    }\n    // bids[id] is the order book for each option[id]\n    mapping(uint256 => bid_struct[]) public bids;\n\n    // user_struct saves all info for each user\n    enum option_side {\n        not_open,\n        buyer,\n        seller,\n        exercised\n    }\n    struct user_struct {\n        // size: for buyer is number of eth option x strike price he placed\n        // size: for seller is number of eth option x strike price x (1+ yield) on expiry day\n        uint256 size; //in USD,\n        option_side side; //after expiry, re-allocate payoff depends on buyer or seller of option\n        uint256 unusedpremium; //in USD, premium in the pool but not traded, for buyer only\n    }\n    // user[user_address][option-id] is each user\n    mapping(address => mapping(uint256 => user_struct)) public user;\n\n    // option_struct saves info for each option\n    struct option_struct {\n        uint256 strike; //Price in USD, for example 3300\n        uint256 expiry; //Unix timestamp of expiration time, in second\n        uint256 supply; //buyer place bid and seller can sell the bid; supply = number of option x strike\n        uint256[] order; //order book sequence pointer, low bid to high bid, bids[id][order[0]] is the lowest bid\n    }\n    // op[id] is each option\n    option_struct[] public op;\n\n    // ********************\n    // for testing purpose\n    uint256 private id = 0; // for testing we only have one option\n    uint256[] private order_for_test;\n    bid_struct[] private order_book_for_one_option;\n    // settlement_amount is only for testing purples, need to delete in production\n    uint256 public settlement_amount;\n\n    // ********************\n\n    //Kovan feeds: https://docs.chain.link/docs/reference-contracts\n    constructor() public {\n        //ETH/USD Kovan feed\n        // uncomment this below if need real ETH price !!!!!!!!\n        // ethFeed = AggregatorV3Interface(0x9326BFA02ADD2366b30bacB125260Af641031331);\n        contract_address = payable(address(this));\n\n        // ********************\n        // create fake option for testing\n        option_struct memory option = option_struct({\n            strike: 3300, // in USDC\n            expiry: block.timestamp + 60, // 30seconds option, for testing purpose\n            supply: 0, // after buyer place bid, supply will increase, in producation initial value =0\n            order: order_for_test\n        });\n        op.push(option);\n        // for testing purpose i give you fake money to play\n        cash_balance[msg.sender] = 200000;\n        // ********************\n    }\n\n    function placeBid(uint256 newbid, uint256 premium) public {\n        // buyer place bid order but nothing traded yet\n        // newbid in usd, eth option price\n        address _user = msg.sender;\n        require(\n            op[id].expiry > block.timestamp - NO_TRADE_CLOSE_TO_EXPIRE,\n            \"Already expired or too close to expiry\"\n        );\n        require(\n            user[_user][id].side != option_side.seller,\n            \"seller of option cannot buy\"\n        );\n        require(premium >= MIN_BUYER_SIZE, \"Min size = 100\");\n        require(premium <= cash_balance[_user], \"not enough cash\"); //cash actually sell the balance first\n        // update buyer\n        // btw user.size only updated when seller sell the bid / only when trade\n        user[_user][id].side = option_side.buyer;\n        user[_user][id].unusedpremium += premium; //premium not used if seller not selling it\n        cash_balance[_user] -= premium;\n\n        // update option supply\n        // below line convert the same unit as option seller, ie: number of eth option x strike price (not number of eth option x ethPrice)\n        // 1x of dual contract needs: ethPrice/stirke size of option to hedge; size/strike > size/current spot!\n        // Warnning below line: first multiply then divide to keep precision\n        uint256 _size = (premium * op[id].strike) / newbid;\n        op[id].supply += _size;\n\n        // update order book\n        bids[id].push(bid_struct(newbid, _size, _user));\n        if (op[id].order.length == 0) {\n            op[id].order.push(bids[id].length - 1);\n        } else {\n            insertBid(newbid);\n        }\n    }\n\n    function cancelBid() public {\n        // to make it easy, cancel all bids for testing stage\n        // can make it cancel specific bid, but need more coding\n        address payable _user = payable(msg.sender);\n        require(\n            STATUS == contract_status.open,\n            \"contract busy, try again later\"\n        );\n        require(\n            user[_user][id].side == option_side.buyer,\n            \"you need to buy option first\"\n        );\n        require(\n            user[_user][id].unusedpremium > 0,\n            \"your oder has been filled or cancelled\"\n        );\n        STATUS = contract_status.locked;\n        // update buyer\n        //_user.transfer(user[_user][id].unusedpremium);\n        cash_balance[_user] += user[_user][id].unusedpremium;\n        user[_user][id].unusedpremium = 0;\n\n        // update order book and option supply\n        uint256[] memory old_order = op[id].order;\n        uint256 k = 0;\n        for (uint256 i = 0; i < old_order.length; i++) {\n            if (bids[id][old_order[i]].user_id != _user) {\n                // if this bid is not from this user\n                op[id].order[k] = old_order[i];\n                // k = how many bids we need to keep\n                k++;\n            } else {\n                op[id].supply -= bids[id][old_order[i]].size;\n            }\n        }\n        for (uint256 i = 0; i < old_order.length - k; i++) {\n            op[id].order.pop();\n        }\n        STATUS = contract_status.open;\n    }\n\n    function sellBid(uint256 seller_size) public {\n        // seller size is in usd, full notional / collateral collected\n        // seller option == buyer dual conntract!\n        address _user = msg.sender;\n        require(op[id].order.length > 0, \"cannot sell if there is no bid\");\n        require(\n            op[id].expiry > block.timestamp - NO_TRADE_CLOSE_TO_EXPIRE,\n            \"Already expired or too close to expiry\"\n        );\n        require(\n            user[_user][id].side != option_side.buyer,\n            \"buyer of option cannot sell\"\n        );\n        require(seller_size >= MIN_SELLER_SIZE, \"Min size = 1000\");\n        require(seller_size <= op[id].supply, \"low supply\");\n        require(seller_size <= cash_balance[_user], \"not enough cash\"); //cash actually sell the balance first\n        cash_balance[_user] -= seller_size;\n\n        // update order book\n        uint256 remain = seller_size;\n        uint256 sizexprice = 0;\n        uint256 each_size;\n        uint256 i = op[id].order.length - 1;\n        // sell multiple bids to have enough size\n        while (remain > 0) {\n            each_size = bids[id][op[id].order[i]].size;\n            if (remain >= each_size) {\n                // update buyer\n                user[bids[id][op[id].order[i]].user_id][id].size += each_size;\n                user[bids[id][op[id].order[i]].user_id][id]\n                    .unusedpremium -= ((each_size *\n                    bids[id][op[id].order[i]].price) / op[id].strike);\n                // update seller\n                sizexprice += (each_size * bids[id][op[id].order[i]].price);\n                // update option\n                op[id].supply -= each_size;\n                // update order book\n                bids[id][op[id].order[i]].size = 0;\n                // last one is the highest one, pop the highest bid\n                op[id].order.pop();\n                remain -= each_size;\n            } else {\n                // update buyer\n                user[bids[id][op[id].order[i]].user_id][id].size += remain;\n                user[bids[id][op[id].order[i]].user_id][id]\n                    .unusedpremium -= ((remain *\n                    bids[id][op[id].order[i]].price) / op[id].strike);\n                // update seller\n                sizexprice += (remain * bids[id][op[id].order[i]].price);\n                // update option\n                op[id].supply -= remain;\n                // update order book\n                bids[id][op[id].order[i]].size -= remain;\n                remain = 0;\n            }\n            i--;\n        }\n        // update seller\n        getEthPrice();\n        //expiry = (sizexprice / seller_size / ethPrice + 1 )x seller_size\n        user[_user][id].size += ((sizexprice + seller_size * ethPrice) /\n            ethPrice);\n        user[_user][id].side = option_side.seller;\n    }\n\n    function getBestBid(uint256 seller_size)\n        public\n        view\n        returns (uint256 average_bid)\n    {\n        // same logic as sellOption Function but not updating options and users\n        require(op[id].order.length > 0, \"cannot sell if there is no bid\");\n        require(seller_size >= MIN_SELLER_SIZE, \"min size = 1000\");\n        require(seller_size <= op[id].supply, \"low supply\");\n        uint256 remain = seller_size;\n        uint256 sizexprice = 0;\n        uint256 each_bid_amount;\n        uint256 i = op[id].order.length - 1;\n        while (remain > 0) {\n            each_bid_amount = bids[id][op[id].order[i]].size;\n            if (remain >= each_bid_amount) {\n                sizexprice += (each_bid_amount *\n                    bids[id][op[id].order[i]].price);\n                remain -= each_bid_amount;\n            } else {\n                sizexprice += (remain * bids[id][op[id].order[i]].price);\n                remain = 0;\n            }\n            i--;\n        }\n        average_bid = sizexprice / seller_size;\n        return average_bid;\n    }\n\n    function exercise() public {\n        // for testing purpose please set a fake eth price\n        address _user = msg.sender;\n        option_side _side = user[_user][id].side;\n        require(\n            _side == option_side.seller || _side == option_side.buyer,\n            \"You have no position\"\n        );\n        require(\n            op[id].expiry <= block.timestamp,\n            \"Cannot exercise before expiry\"\n        );\n        require(_side != option_side.exercised, \"You already excercised \");\n        uint256 _size = user[_user][id].size;\n        uint256 _strike = op[id].strike;\n        if (_side == option_side.buyer) {\n            require(_size > 0, \"No one sell your bid and nothing to expire\");\n            require(ethPrice < _strike, \"Expire worth zero\");\n            if (user[_user][id].unusedpremium > 0) {\n                cancelBid();\n            }\n        }\n        if (_side == option_side.seller) {\n            if (ethPrice < _strike) {\n                // Be very careful!!!!!!!!!!!!\n                // NEED to transfer/sushi USD into ETH here !!! below is ETH amount!!!\n                //_user.transfer(_size / _strike);\n                cash_balance[_user] += _size / _strike;\n                // please delete below line later\n                settlement_amount = _size / _strike;\n            } else {\n                //_user.transfer(_size);\n                cash_balance[_user] += _size;\n                // please delete below line later\n                settlement_amount = _size;\n            }\n        } else {\n            if (ethPrice < _strike) {\n                // below is for cash settlement in usd\n                // noted: when we record buyer size = usd_collected / %price * strike / ethPrice\n                //_user.transfer((_size * (_strike - ethPrice)) / _strike);\n                cash_balance[_user] += ((_size * (_strike - ethPrice)) /\n                    _strike);\n                // please delete below line later\n                settlement_amount = (_size * (_strike - ethPrice)) / _strike;\n            } // else do nothing: expire worth zero\n        }\n        user[_user][id].side = option_side.exercised;\n    }\n\n    function insertBid(uint256 newbid) internal {\n        // insert the newbid in to bids according to the newbid level, lowest bid at 0 position\n        uint256 left = 0;\n        uint256 right = op[id].order.length - 1;\n        uint256 mid;\n\n        // binary tree insert\n        while (left < right) {\n            mid = (left + right) / 2;\n            if (newbid > bids[id][op[id].order[mid]].price) {\n                left = mid + 1;\n            } else {\n                right = mid;\n            }\n        }\n        // when loop ends:\n        // if left > right mid is correct position to insert\n        // if left == right, need to compare once more with right\n        if (left == right) {\n            if (newbid > bids[id][op[id].order[left]].price) {\n                mid = left + 1;\n            } else {\n                mid = left;\n            }\n        }\n        // first push the pointer of newbid /last one of bids into the order array\n        op[id].order.push(bids[id].length - 1);\n        if (mid < op[id].order.length - 1) {\n            for (uint256 i = op[id].order.length - 1; i > mid; i--) {\n                // copy the old value to the right next one\n                op[id].order[i] = op[id].order[i - 1];\n            }\n            // insert the pointer(aka order) of newbid\n            op[id].order[mid] = bids[id].length - 1;\n        } // else if mid == order.lenghth, newbid is highest and already been pushed to the last one of order\n    }\n\n    //Returns the latest ETH price\n    function getEthPrice() public {\n        // uncomment this below if need real ETH price !!!!!!!!\n        //(\n        //    uint80 roundID,\n        //    int256 price,\n        //    uint startedAt,\n        //    uint timeStamp,\n        //    uint80 answeredInRound\n        //) = ethFeed.latestRoundData();\n        //// If the round is not complete yet, timestamp is 0\n        //require(timeStamp > 0, \"Round not complete\");\n        ////Price should never be negative thus cast int to unit is ok\n        ////Price is 8 decimal places and will require 1e10 correction later to 18 places\n        //ethPrice = uint256(price);\n        ethPrice = 3799;\n    }\n\n    function deposit() public payable {\n        require(msg.value >= MIN_DEPOSIT_SIZE, \"Min size = 500\");\n        cash_balance[msg.sender] += msg.value;\n    }\n\n    function PoolBalance() public view returns (uint256) {\n        return (contract_address.balance);\n    }\n\n    function getOrder() public view returns (uint256[] memory) {\n        return op[id].order;\n    }\n\n    function userBalance() public view returns (uint256) {\n        return cash_balance[msg.sender];\n    }\n\n    function SecondToExpiry() public view returns (uint256) {\n        return (op[id].expiry - block.timestamp);\n    }\n\n    function setFakeETH(uint256 _eth) public {\n        ethPrice = _eth;\n    }\n\n    function createFakeBuyer() public {\n        // for testing only, we create an option with some supply\n        // only use before before placeBid, otherwise order will be wrong!!!\n        address fake_user = 0xCA35b7d915458EF540aDe6068dFe2F44E8fa733c;\n        order_book_for_one_option.push(bid_struct(330, 1650, fake_user));\n        order_book_for_one_option.push(bid_struct(396, 1320, fake_user));\n        order_book_for_one_option.push(bid_struct(132, 6600, fake_user));\n        order_book_for_one_option.push(bid_struct(198, 16500, fake_user));\n        bids[id] = order_book_for_one_option;\n        user[fake_user][id].side = option_side.buyer;\n        user[fake_user][id].unusedpremium += 709;\n        op[id].supply += 26070;\n        op[id].order = [2, 3, 0, 1];\n        cash_balance[fake_user] = 100000;\n    }\n}\n",
  "sourceMap": "239:16469:10:-:0;;;730:20;697:53;;-1:-1:-1;;697:53:10;;;2678:22;;3054:819;;;;;;;;;-1:-1:-1;3266:16:10;:41;;-1:-1:-1;;;;;;3266:41:10;3301:4;3266:41;;;3422:283;;;;;;;;;3458:4;3422:283;;3266:16;;3422:283;;;3495:20;:15;3513:2;3495:20;:::i;:::-;3422:283;;;;3578:1;3422:283;;;;3680:14;3422:283;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3422:283:10;;;;-1:-1:-1;;3715:2:10;:15;;;;;;;-1:-1:-1;3715:15:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3392:313;;-1:-1:-1;3392:313:10;;3715:15;;;;;;;;;;;:::i;:::-;-1:-1:-1;;3814:10:10;3801:24;;;;:12;:24;;;;;3828:6;3801:33;;-1:-1:-1;239:16469:10;;-1:-1:-1;239:16469:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;239:16469:10;;;-1:-1:-1;239:16469:10;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;146:225:13;186:3;217:1;213:6;210:1;207:13;204:136;;;262:10;257:3;253:20;250:1;243:31;297:4;294:1;287:15;325:4;322:1;315:15;204:136;-1:-1:-1;356:9:13;;146:225::o;:::-;239:16469:10;;;;;;",
  "sourcePath": "contracts/pool.sol",
  "type": "contract"
}